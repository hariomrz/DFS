{"version":3,"sources":["components/SelectDate.jsx","views/Report/UserContestReport.jsx"],"names":["SelectDate","this","props","DateProps","disabled_date","min_date","max_date","class_name","year_dropdown","month_dropdown","sel_date","date_key","place_holder","show_time_select","time_format","time_intervals","time_caption","date_format","popup_placement","disabled","minDate","_isNull","Date","maxDate","className","showYearDropdown","showMonthDropdown","selected","onChange","dap","handleCallbackFn","placeholderText","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","popperPlacement","Component","UserContestReport","GetContestFilterData","setState","posting","params","state","sportsId","WSManager","Rest","NC","then","responseJson","response_code","data","tempGroupList","group_list","map","lObj","lKey","push","value","group_id","label","group_name","groupList","getAllCollections","collectionType","collection_type","league_id","SelectedLeague","sports_id","ResponseJson","Temp","_","item","idx","collection_master_id","collection_name","CollectionList","notify","show","catch","error","exportReport_Post","Keyword","FromDate","ToDate","sortField","isDescOrder","SelectedCollection","csv","sort_order","sort_field","from_date","to_date","keyword","report_type","message","exportReport_Get","tempFromDate","tempToDate","CollId","_isUndefined","LeagueId","sOrder","HF","getFormatedDateTime","query_string","exportFunction","getLeagueFilter","result","league_name","LeagueList","getReportUser","PERPAGE","CURRENT_PAGE","SelectedGroup","contest_name","items_perpage","total_items","current_page","UserReportList","TotalUserReport","TotalUser","total","TotalDeposit","total_deposit","console","log","handleTypeChange","name","handleLeagueChange","handleCollectionChange","handleDate","date","dateType","searchByUser","e","target","SearchCodeReq","clearFilter","now","getTodayDate","SelectedLSports","LS","get","startDate","endDate","AllSportsList","getSportsData","contestName","selected_sport","debounce","bind","values","queryString","parse","location","search","sp","spn","leg","legn","col","coln","frd","tod","length","sortfiled","Order","sumJoinRealAmount","sumJoinWinningAmount","sumJoinBonusAmount","sameDateProp","FromDateProps","ToDateProps","md","isSearchable","class","options","menuIsOpen","id","placeholder","onClick","sortContest","isUndefined","key","currency_type","entry_fee","src","Images","COINIMG","alt","site_rake","minimum_size","size","total_user_joined","system_teams","real_teams","max_bonus_allowed","prize_pool","total_entry_fee","total_join_real_amount","total_join_bonus_amount","promocode_entry_fee_real","botuser_total_real_entry_fee","total_win_winning_amount","total_win_bonus","total_win_coins","total_win_amount_to_real_user","profit_loss","getUtcToLocalFormat","season_scheduled_date","colSpan","sum_total_user_joined","sum_system_teams","sum_real_teams","sum_total_entry_fee_real","sum_join_bonus_amount","sum_promocode_entry_fee_real","sum_botuser_total_real_entry_fee","sum_win_amount","sum_total_win_bonus","sum_total_win_coins","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange"],"mappings":"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","file":"static/js/177.a76b77b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { _isNull } from '../helper/HelperFunction';\r\nimport { DATE_FORMAT} from \"../helper/NetworkingConstants\";\r\nimport { _isUndefined } from '../helper/HelperFunction';\r\n\r\n// import { registerLocale } from \"react-datepicker\";\r\n// import enIN from 'date-fns/locale/en-IN';\r\n// registerLocale('enIN', enIN)\r\n\r\nclass SelectDate extends Component {\r\n    render() {\r\n        let { disabled_date, min_date, max_date, class_name, year_dropdown, month_dropdown, sel_date, date_key, place_holder, show_time_select, time_format, time_intervals, time_caption, date_format, popup_placement } = this.props.DateProps\r\n\r\n        // console.log(\"---enIN---\", enIN);\r\n        \r\n        return (\r\n            <DatePicker\r\n                disabled={disabled_date}\r\n                minDate={!_isNull(min_date) ? new Date(min_date) : null}\r\n                maxDate={!_isNull(max_date) ? new Date(max_date) : null}\r\n                className={class_name}\r\n                showYearDropdown={year_dropdown}\r\n                showMonthDropdown={month_dropdown}\r\n                // selected={new Date(sel_date)}\r\n                selected={!_isNull(sel_date) ? new Date(sel_date) : null}\r\n                onChange={dap => this.props.DateProps.handleCallbackFn(dap, date_key)}\r\n                placeholderText={place_holder}\r\n                showTimeSelect={show_time_select}\r\n                timeFormat={time_format}\r\n                timeIntervals={time_intervals}\r\n                timeCaption={time_caption}\r\n                dateFormat={date_format}\r\n                popperPlacement={popup_placement ? popup_placement : 'bottom-start'}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SelectDate\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, Button, Table, Input } from 'reactstrap';\r\nimport _ from 'lodash';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport Select from 'react-select';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Loader from '../../components/Loader';\r\nimport Images from '../../components/images';\r\nimport LS from 'local-storage';\r\nimport HF, { _isUndefined, _isEmpty } from '../../helper/HelperFunction';\r\nimport SelectDate from \"../../components/SelectDate\";\r\nimport queryString from 'query-string';\r\nexport default class UserContestReport extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            TotalUser: 0,\r\n            PERPAGE: NC.ITEMS_PERPAGE,\r\n            CURRENT_PAGE: 1,\r\n            startDate: '',\r\n            endDate: '',\r\n            FromDate: new Date(Date.now() - ((HF.getTodayDate()) - 1) * 24 * 60 * 60 * 1000),\r\n            ToDate: new Date(),\r\n            UserReportList: [],\r\n            Keyword: '',\r\n            sortField: 'first_name',\r\n            isDescOrder: false,\r\n            SelectedLeague: '',\r\n            LeagueList: [],\r\n            TotalDeposit: '',\r\n            AllSportsList: HF.getSportsData() ? HF.getSportsData() : [],\r\n            SelectedLSports: (LS.get('selected_sport')) ? LS.get('selected_sport') : NC.sportsId,\r\n            sportsId: (LS.get('selected_sport')) ? LS.get('selected_sport') : NC.sportsId,\r\n            contestName: '',\r\n            CollectionList: [],\r\n            SelectedCollection: '',\r\n            SelectedGroup: '',\r\n            collectionType: 1,\r\n            TotalUserReport: [],\r\n            posting: false,\r\n            selected_sport: (LS.get('selected_sport')) ? LS.get('selected_sport') : NC.sportsId,\r\n        }\r\n        this.SearchCodeReq = _.debounce(this.SearchCodeReq.bind(this), 500);\r\n    }\r\n    componentDidMount() {\r\n        let values = queryString.parse(this.props.location.search)\r\n\r\n        if (!_isUndefined(values.sp)) {\r\n            this.setState({\r\n                sportsId: values.sp,\r\n                SelectedLSports: (values.sp != 'undefined') ? { \"value\": values.sp, \"label\": values.spn } : \"\",\r\n                SelectedLeague: (values.leg != 'undefined') ? { \"value\": values.leg, \"label\": values.legn } : \"\",\r\n                SelectedCollection: (values.col != 'undefined') ? { \"value\": values.col, \"label\": values.coln } : \"\",\r\n                FromDate: new Date(values.frd),\r\n                ToDate: new Date(values.tod),\r\n            }, () => {\r\n                this.getLeagueFilter()\r\n                this.GetContestFilterData()\r\n                this.getReportUser()\r\n            })\r\n        } else {\r\n            this.getLeagueFilter()\r\n            this.GetContestFilterData()\r\n            this.getReportUser()\r\n\r\n        }\r\n    }\r\n\r\n    GetContestFilterData = () => {\r\n        this.setState({ posting: true })\r\n        let params = {\r\n            \"sports_id\": this.state.sportsId,\r\n            \"list_type\": true\r\n        };\r\n        WSManager.Rest(NC.baseURL + NC.GET_CONTEST_FILTER, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                responseJson = responseJson.data;\r\n\r\n                let tempGroupList = [{ 'value': '', 'label': 'Select Category' }];\r\n                if (responseJson.group_list) {\r\n                    responseJson.group_list.map(function (lObj, lKey) {\r\n                        tempGroupList.push({ value: lObj.group_id, label: lObj.group_name });\r\n                    });\r\n                }\r\n                this.setState({ groupList: tempGroupList });\r\n            }\r\n            this.setState({ posting: false })\r\n        })\r\n    }\r\n\r\n    getAllCollections = () => {\r\n        const { collectionType, sportsId, SelectedLeague } = this.state\r\n        let params = {\r\n            collection_type: collectionType,\r\n            league_id: SelectedLeague.value,\r\n            sports_id: sportsId\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_ALL_COLLECTIONS_BY_LEAGUE, params).then(ResponseJson => {\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n\r\n                const Temp = []\r\n\r\n                _.map(ResponseJson.data, (item, idx) => {\r\n                    Temp.push({\r\n                        value: item.collection_master_id, label: item.collection_name\r\n                    })\r\n                })\r\n                this.setState({\r\n                    CollectionList: Temp\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    exportReport_Post = () => {\r\n\r\n        const { Keyword, FromDate, ToDate, sortField, isDescOrder, SelectedLeague, SelectedCollection, sportsId } = this.state\r\n        let params = {\r\n            league_id: SelectedLeague.value,\r\n            collection_master_id: SelectedCollection.value,\r\n            sports_id: sportsId,\r\n            csv: true,\r\n            sort_order: isDescOrder ? \"ASC\" : 'DESC',\r\n            sort_field: sortField,\r\n            from_date: FromDate,\r\n            to_date: ToDate,\r\n            keyword: Keyword,\r\n            report_type: \"contest_report\"\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.EXPORT_REPORT, params).then(ResponseJson => {\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n                notify.show(ResponseJson.message, \"success\", 5000);\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    exportReport_Get = () => {\r\n        let { Keyword, FromDate, ToDate, isDescOrder, sortField, SelectedLeague, SelectedCollection, sportsId } = this.state\r\n        let tempFromDate = ''\r\n        let tempToDate = ''\r\n        let CollId = !_isUndefined(SelectedCollection.value) ? SelectedCollection.value : ''\r\n        let LeagueId = !_isUndefined(SelectedLeague.value) ? SelectedLeague.value : ''\r\n        let sOrder = isDescOrder ? \"ASC\" : 'DESC'\r\n        if (FromDate != '' && ToDate != '') {\r\n            tempFromDate = FromDate ? HF.getFormatedDateTime(FromDate, 'YYYY-MM-DD') : '';\r\n            tempToDate = ToDate ? HF.getFormatedDateTime(ToDate, 'YYYY-MM-DD') : '';\r\n        }\r\n\r\n        var query_string = 'report_type=contest_report&csv=1&keyword=' + Keyword + '&from_date=' + tempFromDate + '&to_date=' + tempToDate + '&sort_order=' + sOrder + '&sort_field=' + sortField + '&league_id=' + LeagueId + '&collection_master_id=' + CollId + '&sports_id=' + sportsId;\r\n        var export_url = 'adminapi/index.php/report/contest_report_csv?';\r\n\r\n        HF.exportFunction(query_string, export_url)\r\n    }\r\n\r\n    // getAllSports = () => {\r\n    //     const Temp = HF.getSportsData() ? HF.getSportsData() : []\r\n    //     this.setState({\r\n    //         AllSportsList: Temp,\r\n    //         SelectedLSports: Temp[0].label,\r\n    //         sportsId: Temp[0].value\r\n    //     }, () => {\r\n    //         // this.handleTypeChange(Temp[0], \"SelectedLSports\")\r\n    //     })\r\n    // }\r\n    getLeagueFilter = () => {\r\n        const { sportsId } = this.state\r\n        let params = {\r\n            sports_id: sportsId\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_SPORT_LEAGUES_REPORT, params).then(ResponseJson => {\r\n\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n\r\n                const Temp = []\r\n                _.map(ResponseJson.data.result, (item, idx) => {\r\n                    Temp.push({\r\n                        value: item.league_id, label: item.league_name\r\n                    })\r\n                })\r\n                this.setState({\r\n                    LeagueList: Temp\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    getReportUser = () => {\r\n        this.setState({ posting: true })\r\n        const { PERPAGE, CURRENT_PAGE, Keyword, FromDate, ToDate, sortField, isDescOrder, sportsId, SelectedCollection, SelectedLeague, SelectedGroup } = this.state\r\n        let params = {\r\n            contest_name: Keyword,\r\n            league_id: SelectedLeague.value,\r\n            collection_master_id: SelectedCollection.value,\r\n            sports_id: sportsId,\r\n            items_perpage: PERPAGE,\r\n            total_items: 0,\r\n            current_page: CURRENT_PAGE,\r\n            sort_order: isDescOrder ? \"ASC\" : 'DESC',\r\n            sort_field: sortField,\r\n            csv: false,\r\n            from_date: FromDate ? HF.getFormatedDateTime(FromDate, 'YYYY-MM-DD') : '',\r\n            to_date: ToDate ? HF.getFormatedDateTime(ToDate, 'YYYY-MM-DD') : '',\r\n            keyword: Keyword,\r\n            group_id: SelectedGroup.value,\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_ALL_CONTEST_REPORT, params).then(ResponseJson => {\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n                this.setState({\r\n                    posting: false,\r\n                    UserReportList: ResponseJson.data.result,\r\n                    TotalUserReport: ResponseJson.data,\r\n                    TotalUser: ResponseJson.data.total,\r\n                    TotalDeposit: ResponseJson.data.total_deposit,\r\n\r\n                }, () => {\r\n                    console.log(\"UserReportList===\", this.state.UserReportList);\r\n                    console.log(\"posting===\", this.state.posting);\r\n\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    handleTypeChange = (value, name) => {\r\n        if (value != null) {\r\n            this.setState({\r\n                [name]: value,\r\n                sportsId: value.value,\r\n                SelectedLeague: '',\r\n                SelectedCollection: '',\r\n            }, () => {\r\n                this.getReportUser()\r\n                // this.getLeagueFilter()\r\n            }\r\n            )\r\n        }\r\n    }\r\n    handleLeagueChange = (value, name) => {\r\n        if (value != null)\r\n            this.setState({\r\n                [name]: value,\r\n                SelectedCollection: '',\r\n            }, () => {\r\n                this.getAllCollections()\r\n                this.getReportUser()\r\n            })\r\n    }\r\n    handleCollectionChange = (value, name) => {\r\n        if (value != null)\r\n            this.setState({ [name]: value }, this.getReportUser)\r\n    }\r\n\r\n\r\n    handleDate = (date, dateType) => {\r\n        this.setState({ [dateType]: date }, () => {\r\n            if (this.state.FromDate || this.state.ToDate) {\r\n                this.getReportUser()\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handlePageChange(current_page) {\r\n        this.setState({\r\n            CURRENT_PAGE: current_page\r\n        }, () => {\r\n            this.getReportUser();\r\n        });\r\n    }\r\n    searchByUser = (e) => {\r\n        this.setState({ Keyword: e.target.value }, this.SearchCodeReq)\r\n    }\r\n\r\n    SearchCodeReq() {\r\n        if (this.state.Keyword.length > 2)\r\n            this.getReportUser()\r\n    }\r\n    clearFilter = () => {\r\n        this.setState({\r\n            FromDate: new Date(Date.now() - ((HF.getTodayDate()) - 1) * 24 * 60 * 60 * 1000),\r\n            ToDate: new Date(),\r\n            Keyword: '',\r\n            isDescOrder: true,\r\n            sortField: 'first_name',\r\n            SelectedLSports: (LS.get('selected_sport')) ? LS.get('selected_sport') : NC.sportsId,\r\n            sportsId: (LS.get('selected_sport')) ? LS.get('selected_sport') : NC.sportsId,\r\n            SelectedLeague: { value: 0, label: \"Select League\" },\r\n            SelectedCollection: '',\r\n        }, () => {\r\n            this.getReportUser()\r\n        }\r\n        )\r\n    }\r\n    sortContest(sortfiled, isDescOrder) {\r\n        let Order = sortfiled == this.state.sortField ? !isDescOrder : isDescOrder\r\n        this.setState({\r\n            sortField: sortfiled,\r\n            isDescOrder: Order,\r\n            CURRENT_PAGE: 1,\r\n\r\n        }, this.getReportUser)\r\n    }\r\n    render() {\r\n        const { posting, UserReportList, CURRENT_PAGE, PERPAGE, TotalUser, Keyword, isDescOrder, SelectedLeague, LeagueList, AllSportsList, SelectedLSports, CollectionList, SelectedCollection, sumJoinRealAmount, sumJoinWinningAmount, sumJoinBonusAmount, FromDate, ToDate, groupList, SelectedGroup, TotalUserReport } = this.state\r\n        const sameDateProp = {\r\n            disabled_date: false,\r\n            show_time_select: false,\r\n            time_format: false,\r\n            time_intervals: false,\r\n            time_caption: false,\r\n            date_format: 'dd/MM/yyyy',\r\n            handleCallbackFn: this.handleDate,\r\n            class_name: 'form-control mr-3',\r\n            year_dropdown: true,\r\n            month_dropdown: true,\r\n        }\r\n        const FromDateProps = {\r\n            ...sameDateProp,\r\n            min_date: false,\r\n            max_date: new Date(ToDate),\r\n            sel_date: new Date(FromDate),\r\n            date_key: 'FromDate',\r\n            place_holder: 'From Date',\r\n        }\r\n        const ToDateProps = {\r\n            ...sameDateProp,\r\n            min_date: new Date(FromDate),\r\n            max_date: new Date(),\r\n            sel_date: new Date(ToDate),\r\n            date_key: 'ToDate',\r\n            place_holder: 'To Date',\r\n            popup_placement: \"bottom-end\"\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <div className=\"animated fadeIn promocode-view mt-4\">\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <h1 className=\"h1-cls\">Contest Report</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"user-deposit-amount\">\r\n\r\n                        <Row className=\"xfilter-userlist mt-5\">\r\n                            <Col md={2}>\r\n                                <div>\r\n                                    <label className=\"filter-label\">Select Sport</label>\r\n                                    <Select\r\n                                        isSearchable={true}\r\n                                        class=\"form-control\"\r\n                                        options={AllSportsList}\r\n                                        menuIsOpen={true}\r\n                                        value={SelectedLSports}\r\n                                        onChange={e => this.handleTypeChange(e, 'SelectedLSports')}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <div>\r\n                                    <label className=\"filter-label\">Select League</label>\r\n                                    <Select\r\n                                        isSearchable={true}\r\n                                        class=\"form-control\"\r\n                                        options={LeagueList}\r\n                                        menuIsOpen={true}\r\n                                        value={SelectedLeague}\r\n                                        onChange={e => this.handleLeagueChange(e, 'SelectedLeague')}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <div>\r\n                                    <label className=\"filter-label\">Select Fixture</label>\r\n                                    <Select\r\n                                        isSearchable={true}\r\n                                        class=\"form-control\"\r\n                                        options={CollectionList}\r\n                                        menuIsOpen={true}\r\n                                        value={SelectedCollection}\r\n                                        onChange={e => this.handleCollectionChange(e, 'SelectedCollection')}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <div>\r\n                                    <label className=\"filter-label\">Select Category</label>\r\n                                    <Select\r\n                                        isSearchable={true}\r\n                                        class=\"form-control\"\r\n                                        id=\"group_id\"\r\n                                        name=\"group_id\"\r\n                                        options={groupList}\r\n                                        menuIsOpen={true}\r\n                                        value={SelectedGroup}\r\n                                        onChange={e => this.handleCollectionChange(e, 'SelectedGroup')}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <label className=\"filter-label\">Select From Date</label>\r\n                                <SelectDate DateProps={FromDateProps} />\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <label className=\"filter-label\">Select To Date</label>\r\n                                <SelectDate DateProps={ToDateProps} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"filters-box mt-3\">\r\n                            <Col md={6}>\r\n                                <div className=\"search-box float-left\">\r\n                                    <label className=\"filter-label\">Search Contest</label>\r\n                                    <Input\r\n                                        placeholder=\"Search Contest\"\r\n                                        name='code'\r\n                                        value={Keyword}\r\n                                        onChange={this.searchByUser}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={5} className=\"mt-4 pr-0\">\r\n                                <div className=\"filters-area\">\r\n                                    <Button className=\"btn-secondary\" onClick={() => this.clearFilter()}>Clear Filters</Button>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={1} className=\"mt-4\">\r\n                                <i className=\"export-list icon-export\"\r\n                                    onClick={e => (TotalUser > NC.EXPORT_REPORT_LIMIT) ? this.exportReport_Post() : this.exportReport_Get()}></i>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={12} className=\"table-responsive common-table new-cr-table\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('collection_name', isDescOrder)}>Match</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('group_name', isDescOrder)}>Contest <br />Category</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('contest_name', isDescOrder)}>Contest <br />Name</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('entry_fee', isDescOrder)}>Entry <br />Fee</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('site_rake', isDescOrder)}>Site <br />Rake %</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('minimum_size', isDescOrder)}>Min</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('size', isDescOrder)}>Max</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('total_user_joined', isDescOrder)}>Total <br /> Team <br /> Entered</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('system_teams', isDescOrder)}>Total <br />Bot <br />User</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('real_teams', isDescOrder)}>Total <br />Real <br />User</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('max_bonus_allowed', isDescOrder)}>Bonus <br />Allowed %</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('prize_pool', isDescOrder)}>Prize <br />Pool</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('total_entry_fee', isDescOrder)}>Total <br />Entry <br />Fee</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('entry_fee_real_money', isDescOrder)}>Entry <br />Fee(Real Money)</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('entry_fee_bonus', isDescOrder)}>Entry <br />Fee(Bonus)</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('promocode_entry_fee_real', isDescOrder)}>Entry <br />Fee(Promo Code)</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('botuser_total_real_entry_fee', isDescOrder)}>Bot <br />User <br />Entry (Real Money)</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('total_win_winning_amount', isDescOrder)}>Distribution <br />(Real Money)</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('total_win_bonus', isDescOrder)}>Distribution <br />(Bonus)</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('total_win_coins', isDescOrder)}>Distribution <br />(Coin)</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('total_win_prize', isDescOrder)}>Total <br />Win <br />Prize</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('total_profit_loss', isDescOrder)}>Total <br />(Profit/Loss)</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('start_time', isDescOrder)}>Start <br />Time </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {\r\n                                        (!_.isUndefined(UserReportList) && UserReportList.length > 0) ?\r\n                                            <Fragment>\r\n                                                {_.map(UserReportList, (item, idx) => {\r\n                                                    return (\r\n                                                        <tbody key={idx}>\r\n                                                            <tr>\r\n                                                                <td>{item.collection_name ? item.collection_name : '--'}</td>\r\n                                                                <td>{item.group_name ? item.group_name : '--'}</td>\r\n                                                                <td>{item.contest_name ? item.contest_name : '--'}</td>\r\n                                                                <td>{\r\n                                                                    item.currency_type == '0' && item.entry_fee > 0 &&\r\n                                                                    <span><i className=\"icon-bonus\"></i>{item.entry_fee}</span>\r\n                                                                }\r\n                                                                    {\r\n                                                                        item.currency_type == '1' && item.entry_fee > 0 &&\r\n                                                                        <span><i className=\"icon-rupess\"></i>{item.entry_fee}</span>\r\n                                                                    }\r\n                                                                    {\r\n                                                                        item.currency_type == '2' && item.entry_fee > 0 &&\r\n                                                                        <span><img src={Images.COINIMG} alt=\"coin-img\" />{item.entry_fee}</span>\r\n                                                                    }\r\n                                                                    {item.entry_fee == 0 &&\r\n\r\n                                                                        <span>Free</span>\r\n\r\n                                                                    }\r\n                                                                    </td>\r\n                                                                <td>{item.site_rake ? item.site_rake : '--'}</td>\r\n                                                                <td>{item.minimum_size ? item.minimum_size : '--'}</td>\r\n                                                                <td>{item.size ? item.size : '--'}</td>\r\n                                                                <td>{item.total_user_joined ? item.total_user_joined : '--'}</td>\r\n                                                                <td>{item.system_teams ? item.system_teams : '--'}</td>\r\n                                                                <td>{item.real_teams ? item.real_teams : '--'}</td>\r\n                                                                <td>{item.max_bonus_allowed ? item.max_bonus_allowed : '--'}</td>\r\n                                                                <td>{item.prize_pool ? item.prize_pool : '--'}</td>\r\n                                                                <td>{item.total_entry_fee ? item.total_entry_fee : '--'}</td>\r\n                                                                <td>{item.total_join_real_amount ? item.total_join_real_amount : '--'}</td>\r\n                                                                <td>{item.total_join_bonus_amount ? item.total_join_bonus_amount : '--'}</td>\r\n                                                                <td>{item.promocode_entry_fee_real ? item.promocode_entry_fee_real : '--'}</td>\r\n                                                                <td>{item.botuser_total_real_entry_fee ? item.botuser_total_real_entry_fee : '--'}</td>\r\n                                                                <td>{item.total_win_winning_amount ? item.total_win_winning_amount : '--'}</td>\r\n                                                                <td>{item.total_win_bonus ? 'B' + item.total_win_bonus : '--'}</td>\r\n                                                                <td>{item.total_win_coins ? 'C' + item.total_win_coins : '--'}</td>\r\n                                                                <td>{item.total_win_amount_to_real_user ? item.total_win_amount_to_real_user : '--'}</td>\r\n                                                                <td>{item.profit_loss ? item.profit_loss : '--'}</td>\r\n                                                                <td>\r\n                                                                    {WSManager.getUtcToLocalFormat(item.season_scheduled_date, 'D-MMM-YYYY hh:mm A')}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    )\r\n                                                })}\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>Total</td>\r\n                                                        <td colSpan=\"6\"></td>\r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_total_user_joined)) && TotalUserReport.sum_total_user_joined\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_system_teams)) && TotalUserReport.sum_system_teams\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_real_teams)) && TotalUserReport.sum_real_teams\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td colSpan=\"3\"></td>\r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_total_entry_fee_real)) && TotalUserReport.sum_total_entry_fee_real\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_join_bonus_amount)) && TotalUserReport.sum_join_bonus_amount\r\n                                                            }\r\n                                                        </td>\r\n                                                        \r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_promocode_entry_fee_real)) && TotalUserReport.sum_promocode_entry_fee_real\r\n                                                            }\r\n                                                        </td>\r\n                                                        \r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_botuser_total_real_entry_fee)) && TotalUserReport.sum_botuser_total_real_entry_fee\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_win_amount)) && TotalUserReport.sum_win_amount\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_total_win_bonus)) && TotalUserReport.sum_total_win_bonus\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td colSpan=\"1\">\r\n                                                            {\r\n                                                                (!_.isUndefined(TotalUserReport.sum_total_win_coins)) && TotalUserReport.sum_total_win_coins\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td colSpan=\"1\"></td>\r\n                                                        <td colSpan=\"1\"></td>\r\n                                                        <td colSpan=\"1\"></td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </Fragment>\r\n                                            :\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan='22'>\r\n                                                        {!posting ?\r\n                                                            <div className=\"no-records\">No Record Found.</div>\r\n                                                            :\r\n                                                            <Loader />\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                    }\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                        {TotalUser > PERPAGE && (\r\n                            <div className=\"custom-pagination lobby-paging\">\r\n                                <Pagination\r\n                                    activePage={CURRENT_PAGE}\r\n                                    itemsCountPerPage={PERPAGE}\r\n                                    totalItemsCount={TotalUser}\r\n                                    pageRangeDisplayed={5}\r\n                                    onChange={e => this.handlePageChange(e)}\r\n                                />\r\n                            </div>\r\n                        )\r\n                        }\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}