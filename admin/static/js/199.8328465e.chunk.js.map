{"version":3,"sources":["views/Distributor/Add.jsx"],"names":["Add","props","add","state","admin_id","email","setState","posting","params","WSManager","Rest","NC","then","responseJson","response_code","notify","show","message","history","push","handleChange","e","name","target","value","trim","length","HF","decimalValidate","match","_","isUndefined","formValid","validateForm","Valid","emailValid","handleSelectChange","handleSelectStateChange","getStateList","counrty_id","ResponseJson","stateList","map","data","item","master_state_id","label","catch","error","goBack","backDisable","setTimeout","location","distributor_detail","getLoggedInID","typeOptions1","typeOptions2","typeOptions3","this","className","md","for","type","placeholder","onChange","isEmpty","fullname","readOnly","mobile","maxLength","address","city","isSearchable","options","state_id","getOptionLabel","option","getRole","role","commission_percent","disabled","onClick","Component"],"mappings":"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","file":"static/js/199.8328465e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Button, Input } from 'reactstrap';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport _ from 'lodash';\r\nimport { notify } from 'react-notify-toast';\r\nimport Select from 'react-select';\r\nimport HF from \"../../helper/HelperFunction\";\r\nexport default class Add extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        if (this.props.location.state == 'undefined') {\r\n            this.props.history.push(\"/distributors\")\r\n        }\r\n        this.state = {\r\n            counrty_id: '101',\r\n            add: (this.props.location.state) ? this.props.location.state.distributor_detail : { \"created_by\": WSManager.getLoggedInID() },\r\n            posting: false,\r\n            formValid: false,\r\n            typeOptions1: [{ value: '2', label: 'Master Distributor' }, { value: '3', label: 'Distributor' }, { value: '4', label: 'Agent' }],\r\n            typeOptions2: [{ value: '3', label: 'Distributor' }, { value: '4', label: 'Agent' }],\r\n            typeOptions3: [{ value: '4', label: 'Agent' }]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    add = () => {\r\n        let add = this.state.add;\r\n        if (add.admin_id) {\r\n            delete add.email; //unset\r\n        }\r\n        this.setState({ posting: true })\r\n        let params = add;\r\n        WSManager.Rest(NC.baseURL + NC.ADD_DISTRIBUTOR, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n\r\n                this.setState({\r\n                    posting: false,\r\n                })\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n                this.props.history.push('/distributors');\r\n\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n            this.setState({ posting: false })\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let add = this.state.add;\r\n        // add[name] = value;\r\n\r\n        if (name === 'mobile') {\r\n            if (value.trim().length != 11) {\r\n                add[name] = value;\r\n            }\r\n        }\r\n        else if (name === 'commission_percent') {\r\n            add[name] = HF.decimalValidate(value, 3);\r\n        }\r\n        else if (name === 'fullname' || name === 'city') {\r\n            if (value.length >= 0 && value.match(/^[a-zA-Z,]+(\\s{0,1}[a-zA-Z, ])*$/)) {\r\n                add[name] = value;\r\n            } else if (value.length == 0) {\r\n                add[name] = value;\r\n            } else {\r\n\r\n            }\r\n        }\r\n        else {\r\n            add[name] = value;\r\n        }\r\n\r\n        if (!_.isUndefined(this.state.add.admin_id)) {\r\n            this.setState({ formValid: true })\r\n        }\r\n\r\n        this.setState({\r\n            add\r\n        }, () => {\r\n            this.validateForm(name, value)\r\n        });\r\n    }\r\n\r\n    validateForm = (name, value) => {\r\n        let Valid = this.state.formValid;\r\n        let emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        switch (name) {\r\n            case \"fullname\":\r\n                Valid = (value.length > 0) ? true : false;\r\n                break;\r\n            case \"email\":\r\n                Valid = emailValid ? true : false;\r\n                break;\r\n            case \"mobile\":\r\n                Valid = (value.length > 0) ? true : false;\r\n                break;\r\n            case \"role\":\r\n                Valid = (value.length > 0) ? true : false;\r\n                break;\r\n            case \"commission_percent\":\r\n                Valid = (value.length > 0) ? true : false;\r\n                break;\r\n            case \"state_id\":\r\n                Valid = (value.length > 0) ? true : false;\r\n                break;\r\n\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formValid: (Valid)\r\n        })\r\n    }\r\n    handleSelectChange = (e) => {\r\n        let add = this.state.add;\r\n        add['role'] = (e) ? e.value : '';\r\n        this.setState({ add: add }, () => {\r\n            if (!_.isUndefined(this.state.add.admin_id)) {\r\n                this.setState({ formValid: true })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSelectStateChange = (e) => {\r\n        let add = this.state.add;\r\n        add['state_id'] = (e) ? e.value : '';\r\n        this.setState({ add: add }, () => { this.validateForm('state_id', add['state_id']) })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStateList();\r\n    }\r\n    getStateList = () => {\r\n        let params = {\r\n            \"master_country_id\": this.state.counrty_id\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.DISTRIBUTOR_STATE_LIST, params).then(ResponseJson => {\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n                var stateList = [];\r\n                _.map(ResponseJson.data, function (item) {\r\n                    stateList.push({\r\n                        value: item.master_state_id,\r\n                        label: item.name\r\n                    });\r\n                });\r\n                this.setState({ stateList: stateList });\r\n\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    goBack = () => {\r\n        this.setState({\r\n            backDisable: true\r\n        }, () => {\r\n            this.props.history.goBack()\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    backDisable: false\r\n                })\r\n            }, 1000);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { add, formValid, posting, backDisable } = this.state\r\n        return (\r\n            <div className=\"mt-4 distributor\">\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <h1 className=\"h1-cls\">Create New</h1>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"animated fadeIn new-banner\">\r\n\r\n                    <Row>\r\n                        <Col md={4} className=\"input-row\">\r\n                            <label for=\"site_rake\" className=\"inputlabel\">Full Name</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name='fullname'\r\n                                placeholder=\"Full Name\"\r\n                                onChange={this.handleChange}\r\n                                value={(!_.isEmpty(add.fullname) && !_.isUndefined(add.fullname)) ? add.fullname : ''}\r\n                                className=\"input\"\r\n                            />\r\n                        </Col>\r\n                        <Col md={4} className=\"input-row\">\r\n                            <label for=\"site_rake\" className=\"inputlabel\">Email</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name='email'\r\n                                placeholder=\"Email\"\r\n                                readOnly={add.admin_id}\r\n                                onChange={this.handleChange}\r\n                                value={add.email}\r\n                                className=\"input\"\r\n                            />\r\n                        </Col>\r\n                        <Col md={4} className=\"input-row\">\r\n                            <label for=\"site_rake\" className=\"inputlabel\">Mobile Number</label>\r\n                            <Input\r\n                                type=\"number\"\r\n                                name='mobile'\r\n                                placeholder=\"Mobile\"\r\n                                onChange={this.handleChange}\r\n                                value={add.mobile}\r\n                                readOnly={add.admin_id}\r\n                                maxLength={11}\r\n                                className=\"input\"\r\n\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={4} className=\"input-row\">\r\n                            <label for=\"site_rake\" className=\"inputlabel\">Address</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name='address'\r\n                                placeholder=\"Address\"\r\n                                onChange={this.handleChange}\r\n                                value={add.address}\r\n                                className=\"input\"\r\n                            />\r\n                        </Col>\r\n                        <Col md={4} className=\"input-row\">\r\n                            <label for=\"site_rake\" className=\"inputlabel\">City</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name='city'\r\n                                placeholder=\"City\"\r\n                                onChange={this.handleChange}\r\n                                value={(!_.isEmpty(add.city) && !_.isUndefined(add.city)) ? add.city : ''}\r\n                                className=\"input\"\r\n                            />\r\n                        </Col>\r\n                        <Col md={4} className=\"input-row\">\r\n                            <label for=\"site_rake\" className=\"inputlabel\">State</label>\r\n                            <Select\r\n                                isSearchable={true}\r\n                                className=\"input\"\r\n                                options={this.state.stateList}\r\n                                placeholder=\"Select State\"\r\n                                value={add.state_id}\r\n                                onChange={e => this.handleSelectStateChange(e)}\r\n                                getOptionLabel={option => `${option.name}`}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={4} className=\"input-row\">\r\n                            <label for=\"site_rake\" className=\"inputlabel\">Type</label>\r\n                            <Select\r\n                                isSearchable={true}\r\n                                className=\"input\"\r\n                                options={(WSManager.getRole() == 1) ? this.state.typeOptions1 : (WSManager.getRole() == 2) ? this.state.typeOptions2 : this.state.typeOptions3}\r\n                                placeholder=\"Select Type\"\r\n                                value={add.role}\r\n                                onChange={e => this.handleSelectChange(e)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={4} className=\"input-row\">\r\n                            <label for=\"site_rake\" className=\"inputlabel\">Commission %</label>\r\n                            <Input\r\n                                type=\"number\"\r\n                                name='commission_percent'\r\n                                placeholder=\"Commission\"\r\n                                onChange={this.handleChange}\r\n                                value={add.commission_percent}\r\n                                className=\"input\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Col md={12} className=\"banner-action\">\r\n                        <Button disabled={!formValid} className=\"btn-secondary mr-3\" onClick={() => this.add()}>Save</Button>\r\n                        <Button\r\n                            disabled={backDisable}\r\n                            className=\"btn-secondary-outline\"\r\n                            onClick={() => this.goBack()}\r\n                        >Cancel</Button>\r\n                    </Col>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}