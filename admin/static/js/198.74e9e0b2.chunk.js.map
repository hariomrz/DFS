{"version":3,"sources":["views/Common/LanguageUpload.jsx"],"names":["globalThis","LanguageUpload","props","selectedlanguage","selectedOption","setState","current_lang_label","label","current_lang","value","exportLang","lang","key","WSManager","getToken","url","NC","window","open","state","language_list","HF","getLanguageData","updatedCSV","updatedMaster","this","isUploadingFlag","data","FormData","append","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","response","JSON","parse","responseText","response_code","notify","show","message","auth_key","send","e","preventDefault","reader","FileReader","mImage","target","files","name","onloadend","uploadCSV","readAsDataURL","uploadMaster","className","xl","sm","clearable","placeholder","menuIsOpen","options","onChange","onClick","id","type","accept","ref","upload","onDropCSV","bind","htmlFor","onDropMaster","Component"],"mappings":"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","file":"static/js/198.74e9e0b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Col, Row,Button,Input } from 'reactstrap';\r\nimport _ from \"lodash\";\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\n\r\n// React select\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.min.css';\r\nimport { notify } from 'react-notify-toast';\r\nimport HF from '../../helper/HelperFunction';\r\nvar globalThis = null;\r\nexport default class LanguageUpload extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      language_list: HF.getLanguageData() ? HF.getLanguageData() : [],\r\n      current_lang :'',\r\n      current_lang_label :'',\r\n      updatedCSV:'',\r\n      updatedMaster:''\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    globalThis = this;\r\n  }\r\n  \r\n  selectedlanguage = (selectedOption) => {\r\n    if (!selectedOption) {\r\n      return false;\r\n    }\r\n    this.setState({\r\n      current_lang_label:selectedOption.label,\r\n      current_lang:selectedOption.value\r\n    },   \r\n    );   \r\n  }\r\n\r\n  exportLang = (lang)=> {\t\t\r\n\t\tif(lang =='')\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar key = WSManager.getToken();\r\n\t\tvar url = \"common/export_language/\"+lang+\"/?\"+NC.ADMIN_AUTH_KEY+\"=\"+key;\r\n\t\twindow.open(NC.baseURL+NC.ADMIN_FOLDER_NAME+url);\r\n  };\r\n  \r\n  uploadCSV() {\r\n    this.setState({ isUploadingFlag: true });\r\n    var data = new FormData();\r\n    data.append(\"file\", this.state.updatedCSV);    \r\n    var xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n    xhr.addEventListener(\"readystatechange\", function () {\r\n        if (this.readyState === 4) {          \r\n            var response = JSON.parse(this.responseText);            \r\n            globalThis.setState({ isUploadingFlag: false });\r\n            if (response != '' && response.response_code === NC.successCode) {\r\n               notify.show(\"File uploaded\", \"success\", 5000);\r\n            }\r\n            else {\r\n              notify.show(response.message, \"error\", 5000);\r\n            }\r\n        }\r\n    });\r\n    \r\n    var auth_key = WSManager.getToken();\r\n    xhr.open(\"POST\", NC.baseURL +NC.DO_UPLOAD_LANG+this.state.current_lang+'/'+NC.ADMIN_AUTH_KEY+'='+auth_key);\r\n    xhr.send(data);\r\n  }\r\n\r\n  uploadMaster() {\r\n    this.setState({ isUploadingFlag: true });\r\n    var data = new FormData();\r\n    data.append(\"file\", this.state.updatedMaster);    \r\n    var xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n    xhr.addEventListener(\"readystatechange\", function () {\r\n        if (this.readyState === 4) {          \r\n            var response = JSON.parse(this.responseText);            \r\n            globalThis.setState({ isUploadingFlag: false });\r\n            if (response != '' && response.response_code === NC.successCode) {\r\n               notify.show(\"File uploaded\", \"success\", 5000);\r\n            }\r\n            else {\r\n              notify.show(response.message, \"error\", 5000);              \r\n            }\r\n        }\r\n    });\r\n    \r\n    var auth_key = WSManager.getToken();\r\n    xhr.open(\"POST\", NC.baseURL +NC.DO_UPLOAD_MASTER_FILE+this.state.current_lang+'/'+NC.ADMIN_AUTH_KEY+'='+auth_key);\r\n    xhr.send(data);\r\n  }\r\n\r\n\r\n  onDropCSV(e) {\r\n    \r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let mImage = e.target.files[0];\r\n    if(e.target.name == 'importLanguage')\r\n    {\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          updatedCSV: mImage,          \r\n        },function(){\r\n            this.uploadCSV();\r\n        });\r\n      }\r\n    } \r\n    reader.readAsDataURL(mImage)    \r\n  }\r\n\r\n  onDropMaster(e) {    \r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let mImage = e.target.files[0];\r\n    if(e.target.name == 'importMasterLanguage')\r\n    {\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          updatedMaster: mImage,\r\n        },function(){\r\n            this.uploadMaster();\r\n        });\r\n      }\r\n    }    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <div>\r\n        <Row>\r\n              <Col xl=\"6\" sm=\"8\">\r\n                <Select\r\n                clearable={false}\r\n                  className=\"sports-seletor\"\r\n                  name=\"selected_language\"\r\n                  placeholder=\"Select Language\"\r\n                  menuIsOpen={true}\r\n                  value={this.state.current_lang}\r\n                  options={this.state.language_list}\r\n                  onChange={(value) => this.selectedlanguage(value)}\r\n                />\r\n              </Col>          \r\n        </Row>\r\n        <hr></hr>\r\n        <Row>\r\n              <Col xl=\"6\" sm=\"8\">\r\n                <Button className=\"btn-secondary\" onClick={() => this.exportLang(this.state.current_lang)}>Export {this.state.current_lang_label}</Button>\r\n                                \r\n              </Col>\r\n        </Row>\r\n        <hr></hr>\r\n        <Row>\r\n              <Col xl=\"6\" sm=\"8\">\r\n                <Input className=\"d-none\" id=\"importLanguage\" type=\"file\" name=\"importLanguage\" placeholder=\"import language\"\r\n                          accept=\"csv/*\"\r\n                          ref={(ref) => this.upload = ref}\r\n                          onChange={this.onDropCSV.bind(this)}\r\n                      />\r\n                      <label className=\"btn-secondary\" htmlFor=\"importLanguage\">Import  {this.state.current_lang_label}</label>\r\n                                \r\n              </Col>\r\n        </Row>\r\n        <hr></hr>\r\n        <Row>\r\n              <Col xl=\"6\" sm=\"8\">\r\n              <Input className=\"d-none\" id=\"importMasterLanguage\" type=\"file\" name=\"importMasterLanguage\" placeholder=\"import master language\"                          ref={(ref) => this.upload = ref}\r\n                          onChange={this.onDropMaster.bind(this)}\r\n                      />\r\n              <label className=\"btn-secondary\" htmlFor=\"importMasterLanguage\">Upload   {this.state.current_lang_label} Master FIle to Bucket</label>\r\n              </Col>\r\n        </Row>\r\n        </div>\r\n       \r\n       </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}