{"version":3,"sources":["components/CustomComponent.jsx","views/Marketing/Marketing.config.js","Modals/PromoteFixture.jsx","views/Marketing/CommunicationDashboard/CampaignDashboard.jsx"],"names":["MomentDateComponent","data","date","format","WSManager","getUtcToLocal","GET_FILTER_RESULT_TEST","GET_DEPOSIT_PROMOCODES","GET_SEGEMENTATION_TEMPLATE_LIST","GET_RECENT_COMMUNICATION_LIST","NOTIFY_BY_SELECTION","NOTIFY_BY_SELECTION_COUNT","GET_RECENT_COMMUNICATION_DETAIL","GET_CD_BALANCE","ADD_NOTIFICATION_ENTITY","EXPORT_FILTER_DATA","GET_LIVE_UPCOMING_MATCHS","RENDER_EMAIL_BODY","GET_CITY_NAMES","GET_PREFERENCE_LIST","UPDATE_PREFERENCE_LIST","CREATE_USER_BASE_LIST","DELETE_USER_BASE_LIST","GET_SINGLE_USER_BASE_LIST","CREATE_NEW_CATEGORY","GET_USER_COUNT","GET_USER_BASE_LIST","GET_CUSTOME_TEMPLATE","GET_TEMPLATE_CATEGORY","CREATE_NEW_TEMPLATE","UPDATE_USER_BASE_LIST","GET_DELAYED_FIXTURES","UTM_SOURCE_SMS","UTM_MEDIUM","userBaseType","1","all_user","text","2","login","3","signup","4","fixture_participation","userBases","sourceByTemplate","121","120","124","131","132","fixtureChannelMap","email_fixture_model","message_fixture_model","notification_fixture_model","notification_landing_pages","label","value","GenderOptions","id","name","extend","obj","src","key","hasOwnProperty","PromoteFixure","props","handleFixtureNotificationType","e","target","fixturePromoteParam","_","cloneDeep","state","MODULE_C","setState","console","log","get_fixture_cd_type_possible_counts","notificationData","param","email_template_id","Rest","NC","then","responseJson","response_code","FixtureData","email_count","notification_count","sms_count","fixtureNotifyBySelection","seasonGameUid","season_game_uid","posting","fixture_promote_model","notify","show","message","IsPromoteFixtureHide","history","push","toggleFixturePromoteModal","val","cd_balance","IsPromoteFixtureShow","fixtureObj","IsFixturePromoteHide","this","Modal","isOpen","toggle","className","ModalHeader","Col","lg","ModalBody","Row","Style","home_flag","home","away","season_scheduled_date","away_flag","Input","type","onChange","checked","for","md","Card","Button","outline","disabled","color","onClick","season_game_uids","React","Component","CampaignDashboard","getDepositPromotionsPromocodes","depositPromocodes","promocodes","buySms","isLoading","buy_current_entity","notify_sms_value","amount","notify_sms_amount","entity_name","buy_sms_modal","notify_entity_value","updateSmsBalance","buyNotification","notify_notification_value","notify_notification_amount","buy_notification_modal","updateNotificationBalance","buyNotifyEntity","notify_email_amount","buy_communication_entity_modal","updateEmailBalance","notifyEntityValueChange","event","notify_email_price","notifySMSValueChange","notify_sms_price","notifyNotificationValueChange","notify_notification_price","handleNotificationType","get_cd_type_possible_counts","sortRecentComminications","sortField","sortOrder","recentCommunicationParams","sort_field","sort_order","getRecentCommunication","moment","utc","local","getFormatedDate","toggleRecentCModal","tab","isEmpty","isUndefined","template_name","activeTab","communication_review_modal","recent_communication_id","email_body","recent_communication_detail","replace","Date","getFullYear","RC_obj_detail","TempDate","params","for_str","stringified","queryString","stringify","PromoteFixtureHide","PromoteFixtureShow","toggleCResendCModal","email","notification","cd_email_template_id","notification_type","source_id","userbase","getSegmentationTemplate","templates","result","map","display_label","detail","templateList","notifyBySelection","communication_resend_modal","Resend_obj_detail","from_date","to_date","handlePromocodeChange","selectedOption","promo_code_id","handleChange","editSchedule","DealCatId","deal_id","Base64","encode","amt","selected_sport","LS","get","modal","recent_communication_list","preview_modal","length","fixtures","currentPage","pageSize","pagesCount","minPage","maxPage","fixture_image_path","SentCount","bind","toggle_","togglePrimary","dataSet","Array","Math","ceil","random","a","i","index","preventDefault","sports_id","total","CD_ONE_EMAIL_RATE","CD_ONE_SMS_RATE","CD_ONE_NOTIFICATION_RATE","_isUndefined","cd_sent_count","setCdBalance","primary","sm","email_sent","text-align","sms_sent","notification_sent","align-text","xs","CardBody","Table","responsive","scope","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","user_details","notification_delivered_count","notification_viewed_count","added_date","Images","EYE","colspan","NODATA","Pagination","aria-label","PaginationItem","PaginationLink","handleRecentCommunicationPagination","first","href","previous","page","active","next","last","list_name","Nav","tabs","NavItem","NavLink","classnames","TabContent","TabPane","tabId","subject","dangerouslySetInnerHTML","__html","message_body","notification_message","class","options","connect","dispatch","actionTypes"],"mappings":"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","file":"static/js/158.fc41a034.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport WSManager from '../helper/WSManager';\r\nexport function MomentDateComponent({ data }) {\r\n    let date = data.date;\r\n    let format = data.format;\r\n    return (date ? <Moment date={WSManager.getUtcToLocal(date)} format={format} /> : '')\r\n}","// export const GET_FILTER_RESULT_TEST = \"adminapi/communication_dashboard/user_segmentation/get_filter_result_test/false\";\r\nexport const GET_FILTER_RESULT_TEST = \"adminapi/communication_dashboard/user_segmentation/get_filter_result_test\";\r\nexport const GET_DEPOSIT_PROMOCODES = \"adminapi/communication_dashboard/user_segmentation/get_deposit_promocodes\";\r\nexport const GET_SEGEMENTATION_TEMPLATE_LIST = \"adminapi/communication_dashboard/user_segmentation/get_segementation_template_list\";\r\nexport const GET_RECENT_COMMUNICATION_LIST = \"adminapi/communication_dashboard/user_segmentation/get_recent_communication_list\";\r\n\r\nexport const NOTIFY_BY_SELECTION = \"adminapi/communication_dashboard/user_segmentation/notify_by_selection\";\r\nexport const NOTIFY_BY_SELECTION_COUNT = \"adminapi/communication_dashboard/user_segmentation/notify_by_selection_counts\";\r\nexport const RECENT_COMMUNICATION = \"adminapi/communication_dashboard/user_segmentation/resent_communication\";\r\nexport const GET_RECENT_COMMUNICATION_DETAIL = \"adminapi/communication_dashboard/user_segmentation/get_recent_communication_detail\";\r\nexport const GET_CD_BALANCE = \"adminapi/communication_dashboard/user_segmentation/get_cd_balance\";\r\nexport const ADD_NOTIFICATION_ENTITY = \"adminapi/communication_dashboard/user_segmentation/add_notify_entity\";\r\nexport const EXPORT_FILTER_DATA = \"adminapi/communication_dashboard/user_segmentation/export_filter_data\";\r\nexport const GET_LIVE_UPCOMING_MATCHS = \"adminapi/communication_dashboard/new_campaign/get_live_upcoming_fixtures\";\r\nexport const RENDER_EMAIL_BODY = \"adminapi/communication_dashboard/new_campaign/render_cd_body\";\r\n\r\nexport const GET_CITY_NAMES = \"adminapi/communication_dashboard/user_segmentation/get_city_names\";\r\nexport const GET_PREFERENCE_LIST = \"adminapi/communication_dashboard/user_segmentation/get_preference_list\";\r\nexport const UPDATE_PREFERENCE_LIST = \"adminapi/communication_dashboard/user_segmentation/update_preference_list\";\r\nexport const CREATE_USER_BASE_LIST = \"adminapi/communication_dashboard/user_segmentation/create_user_base_list\";\r\nexport const DELETE_USER_BASE_LIST = \"adminapi/communication_dashboard/user_segmentation/delete_user_base_list\";\r\nexport const GET_SINGLE_USER_BASE_LIST = \"adminapi/communication_dashboard/user_segmentation/get_single_user_base_list\";\r\nexport const CREATE_NEW_CATEGORY = \"adminapi/communication_dashboard/user_segmentation/create_new_category\";\r\nexport const GET_USER_COUNT = \"adminapi/communication_dashboard/user_segmentation/get_user_count\";\r\nexport const GET_USER_BASE_LIST = \"adminapi/communication_dashboard/user_segmentation/get_user_base_list\";\r\nexport const GET_CUSTOME_TEMPLATE = \"adminapi/communication_dashboard/user_segmentation/get_custome_template\";\r\nexport const GET_TEMPLATE_CATEGORY = \"adminapi/communication_dashboard/user_segmentation/get_template_category\";\r\nexport const CREATE_NEW_TEMPLATE = \"adminapi/communication_dashboard/user_segmentation/create_new_template\";\r\nexport const UPDATE_USER_BASE_LIST = \"adminapi/communication_dashboard/user_segmentation/update_user_base_list\";\r\nexport const GET_DELAYED_FIXTURES = \"adminapi/communication_dashboard/user_segmentation/get_delayed_fixtures\";\r\n\r\nexport const UTM_SOURCE_SMS = 'SMS';\r\nexport const UTM_SOURCE_NOTIFICATION = 'noti';\r\nexport const UTM_MEDIUM = 'VtechAdmin';\r\nexport const userBaseType = {\r\n  1: {\r\n    all_user: 1,\r\n    text: 'All User'\r\n  },\r\n  2: {\r\n    login: 1,\r\n    text: 'Login'\r\n  },\r\n  3: {\r\n    signup: 1,\r\n    text: 'Signup'\r\n  },\r\n  4: {\r\n    fixture_participation: 1,\r\n    text: 'By Fixture Participation'\r\n  }\r\n}\r\n\r\nexport const userBases = {\r\n  1: {\r\n    all_user: 1\r\n  },\r\n  2: {\r\n    login: 1\r\n  },\r\n  3: {\r\n    signup: 1\r\n  },\r\n  4: {\r\n    fixture_participation: 1\r\n  }\r\n}\r\n\r\nexport const sourceByTemplate = {\r\n  121: 'contest_id',\r\n  120: 'promo_code_id',\r\n  124: 'season_game_uid',\r\n  131: 'season_game_uid',\r\n  132: 'season_game_uid'\r\n}\r\n\r\nexport const fixtureChannelMap = {\r\n  email_fixture_model: 'email',\r\n  message_fixture_model: 'message',\r\n  notification_fixture_model: 'notification'\r\n}\r\n\r\n//Lobby, Wallet, My Profile, My contests, Refer a Friend.\r\nexport const notification_landing_pages = [{\r\n    label: 'Lobby',\r\n    value: 1\r\n  },\r\n  {\r\n    label: 'Wallet',\r\n    value: 2\r\n  },\r\n  {\r\n    label: 'My Profile',\r\n    value: 3\r\n  },\r\n  {\r\n    label: 'My contests',\r\n    value: 4\r\n  },\r\n  {\r\n    label: 'Refer a Friend',\r\n    value: 5\r\n  },\r\n  {\r\n    label: 'Contest Listing',\r\n    value: 6\r\n  },\r\n  {\r\n    label: 'Add Fund',\r\n    value: 7\r\n  },\r\n]\r\n\r\nexport const GenderOptions = [\r\n  {id: '1',name: 'Male'},\r\n  {id: '2',name: 'Female'},\r\n  {id: '3',name: 'Other'},\r\n];\r\n\r\nexport const extend = (obj, src) => {\r\n  for (var key in src) {\r\n    if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n  }\r\n  return obj;\r\n}\r\n","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, Col, Row, Card, Input } from 'reactstrap';\r\nimport * as NC from \"../helper/NetworkingConstants\";\r\nimport * as MODULE_C from \"../views/Marketing/Marketing.config\";\r\nimport _ from 'lodash';\r\nimport { notify } from 'react-notify-toast';\r\nimport WSManager from \"../helper/WSManager\";\r\n\r\nexport default class PromoteFixure extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fixturePromoteParam: {\r\n        email_fixture_model: false,\r\n        message_fixture_model: false,\r\n        notification_fixture_model: false\r\n      },\r\n      cd_balance: {},\r\n      fixture_promote_model: this.props.IsPromoteFixtureShow || false,\r\n      FixtureData: this.props.FixtureData ? { ...this.props.FixtureData.fixtureObj, email_count: 0, sms_count: 0, notification_count: 0 } : {}\r\n    };\r\n  }\r\n\r\n  handleFixtureNotificationType = (e) => {\r\n\r\n    let value = e.target.value;\r\n    let id = e.target.id;\r\n    var fixturePromoteParam = _.cloneDeep(this.state.fixturePromoteParam);\r\n    fixturePromoteParam[MODULE_C.fixtureChannelMap[id]] = value == 'false' ? true : false;\r\n    fixturePromoteParam[id] = value == 'false' ? true : false;\r\n\r\n    this.setState({ fixturePromoteParam: fixturePromoteParam }, () => {\r\n      console.log(\"this.state.fixturePromoteParam:\", this.state.fixturePromoteParam);\r\n      this.get_fixture_cd_type_possible_counts(this.state.fixturePromoteParam);\r\n    });\r\n  }\r\n\r\n  get_fixture_cd_type_possible_counts = (notificationData) => {\r\n\r\n    var param = MODULE_C.extend(notificationData, MODULE_C.userBaseType[1]);//1 for all user\r\n    param.email_template_id = 4;\r\n    WSManager.Rest(NC.baseURL + MODULE_C.NOTIFY_BY_SELECTION_COUNT, param).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n\r\n        this.setState({\r\n\r\n          FixtureData: {\r\n            ...this.state.FixtureData,\r\n            email_count: responseJson.data.email_count,\r\n            notification_count: responseJson.data.notification_count,\r\n            sms_count: responseJson.data.sms_count\r\n          }\r\n\r\n        });\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  fixtureNotifyBySelection = (seasonGameUid) => {\r\n    let param = { ...this.state.fixturePromoteParam, season_game_uid: seasonGameUid };\r\n    console.log('param:::::', param);\r\n    WSManager.Rest(NC.baseURL + MODULE_C.NOTIFY_BY_SELECTION, param).then((responseJson) => {\r\n\r\n      this.setState({ posting: false });\r\n      if (responseJson.response_code === NC.successCode) {\r\n        this.setState({ fixture_promote_model: false })\r\n        notify.show(responseJson.message, \"success\", 3000);\r\n        this.props.IsPromoteFixtureHide();\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/401');\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleFixturePromoteModal = (key, val) => {\r\n\r\n    this.setState({\r\n      fixture_promote_model: !this.state.fixture_promote_model,\r\n    });\r\n\r\n    this.props.IsPromoteFixtureHide();\r\n  }\r\n  render() {\r\n\r\n    const { IsFixturePromoteHide } = this.props;\r\n\r\n    const { fixturePromoteParam, FixtureData } = this.state;\r\n    return (\r\n      <Modal isOpen={this.state.fixture_promote_model} toggle={this.toggleFixturePromoteModal} className={this.props.className}\r\n      >\r\n        <ModalHeader toggle={IsFixturePromoteHide} className=\"resend\">\r\n          <Col lg={12}>\r\n            <h5 className=\"resend title\"> PROMOTE</h5></Col>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {\r\n            <Row className=\"usertime\">\r\n              <Col lg={12} className=\"resendvs\">\r\n                <Col className=\"img1\"><img Style='width:58px; height:58px;' src={FixtureData.home_flag} /></Col>\r\n                <Col className=\"resendvsmatch\">\r\n                  <h3 Style=\"font-size:18px;font-weight:bold;color: #000000;\">{FixtureData.home} vs {FixtureData.away} </h3>\r\n                  <h6 Style=\"font-size:12px;font-weight:bold;color: #000000;\">{FixtureData.season_scheduled_date}</h6>\r\n                </Col>\r\n                <Col className=\"img2\"> <img Style='width:58px; height:58px; ' src={FixtureData.away_flag} /></Col>\r\n              </Col>\r\n            </Row>\r\n          }\r\n          <Row className=\"communication\">\r\n            <Col lg={12}>\r\n              <div className=\"comchannel\">Communication Channel</div>\r\n              <div className=\"customcontrol\">\r\n                <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                  <Input type=\"checkbox\" id=\"email_fixture_model\" className=\"custom-control-input\" onChange={this.handleFixtureNotificationType}\r\n                    checked={fixturePromoteParam.email_fixture_model}\r\n                    value={fixturePromoteParam.email_fixture_model}></Input>\r\n                  <label className=\"custom-control-label\" for=\"email_fixture_model\">E-MAIL</label>\r\n                </div>\r\n                <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                  <Input type=\"checkbox\" id=\"message_fixture_model\" className=\"custom-control-input\" onChange={this.handleFixtureNotificationType}\r\n                    checked={fixturePromoteParam.message_fixture_model}\r\n                    value={fixturePromoteParam.message_fixture_model}></Input>\r\n                  <label className=\"custom-control-label\" for=\"message_fixture_model\">SMS</label>\r\n                </div>\r\n                <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                  <Input type=\"checkbox\" id=\"notification_fixture_model\" className=\"custom-control-input\" onChange={this.handleFixtureNotificationType}\r\n                    checked={fixturePromoteParam.notification_fixture_model}\r\n                    value={fixturePromoteParam.notification_fixture_model}></Input>\r\n                  <label className=\"custom-control-label\" for=\"notification_fixture_model\">Notification</label>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Col>\r\n            <Row className=\"select preview\"></Row>\r\n            <Row className=\"popcardrow\">\r\n              <Col md={4}>\r\n                <Card className=\"popcard\">\r\n                  <h6 className=\"popcard6\">E-MAIL</h6>\r\n                  <h2 className=\"popcard8\"> {this.state.FixtureData.email_count}</h2>\r\n                </Card>\r\n              </Col>\r\n              <Col md={4}>\r\n                <Card className=\"popcard\">\r\n                  <h6 className=\"popcard6\">SMS</h6>\r\n                  <h2 className=\"popcard8\">{this.state.FixtureData.sms_count}</h2>\r\n                </Card>\r\n              </Col>\r\n              <Col md={4}>\r\n                <Card className=\"popcard\">\r\n                  <h6 className=\"popcard6\">Notification</h6>\r\n                  <h2 className=\"popcard8\">{this.state.FixtureData.notification_count}</h2>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Row>\r\n            <Col lg={12} className=\"resend\">\r\n              <Button className=\"resendbtnpop\" outline disabled={!fixturePromoteParam.email_template_id} color=\"danger\" onClick={() => this.fixtureNotifyBySelection(FixtureData.season_game_uids)}>Send</Button>\r\n            </Col>\r\n          </Row>\r\n        </ModalBody>\r\n      </Modal>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport {\r\n  Card, CardBody, Col, Row, Input, Button, Label, Table, TabContent, TabPane, Nav, NavItem, NavLink, Modal, ModalBody, ModalHeader, Pagination, PaginationItem, PaginationLink\r\n} from 'reactstrap';\r\nimport Moment from 'react-moment';\r\nimport _ from 'lodash';\r\nimport * as NC from \"../../../helper/NetworkingConstants\";\r\nimport * as MODULE_C from \"../Marketing.config\";\r\nimport WSManager from \"../../../helper/WSManager\";\r\nimport moment from 'moment';\r\nimport LS from 'local-storage';\r\nimport Images from '../../../components/images';\r\nimport { notify } from 'react-notify-toast';\r\nimport classnames from 'classnames';\r\nimport queryString from 'query-string';\r\nimport { connect } from 'react-redux';\r\nimport * as  actionTypes from '../../../appConstants/ActionTypes';\r\nimport PromoteFixtureModal from '../../../Modals/PromoteFixture';\r\nimport HF, { _isUndefined } from '../../../helper/HelperFunction';\r\nimport { MomentDateComponent } from \"../../../components/CustomComponent\";\r\nimport { Base64 } from 'js-base64';\r\nclass CampaignDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected_sport: (LS.get('selected_sport')) ? LS.get('selected_sport') : NC.sportsId,\r\n      modal: false,\r\n      recent_communication_list: [],\r\n      preview_modal: false,\r\n      cd_balance: {},\r\n      communication_review_modal: false,\r\n      communication_resend_modal: false,\r\n      RC_obj_detail: {},\r\n      fixtureObj: { email_count: 0, sms_count: 0, notification_count: 0 },\r\n      Resend_obj_detail: {},\r\n      notificationData: {},\r\n      fixturePromoteParam: {\r\n        email_fixture_model: false,\r\n        message_fixture_model: false,\r\n        notification_fixture_model: false\r\n      },\r\n      templateList: [],\r\n      userbase: null,\r\n      recent_communication_id: null,\r\n      buy_communication_entity_modal: false,\r\n      buy_sms_modal: false,\r\n      buy_current_entity: null,\r\n      notify_entity_value: null,\r\n      notify_sms_value: null,\r\n      notify_sms_price: 0.2,\r\n      notify_sms_amount: 0,\r\n      buy_notification_modal: false,\r\n      notify_notification_value: null,\r\n      notify_notification_price: 0,\r\n      notify_notification_amount: 0,\r\n      isLoading: false,\r\n      activeTab: '1',\r\n      length: 9,\r\n      userBaseType: MODULE_C.userBaseType,\r\n      fixtures: [],\r\n      fixture_promote_model: false,\r\n      recentCommunicationParams: {\r\n        currentPage: 0,\r\n        pageSize: 10,\r\n        pagesCount: 1,\r\n        sort_order: 'DESC',\r\n        sort_field: 'recent_communication_id'\r\n      },\r\n      depositPromocodes: [],\r\n      notify_email_price: 0.2,\r\n      notify_email_amount: 0,\r\n      minPage: 1,\r\n      maxPage: 5,\r\n      fixture_image_path: \"\",\r\n      SentCount : []\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.toggle_ = this.toggle_.bind(this);\r\n\r\n    this.togglePrimary = this.togglePrimary.bind(this);\r\n\r\n\r\n    this.dataSet = [...Array(Math.ceil(500 + Math.random() * 500))].map(\r\n      (a, i) => \"Record \" + (i + 1)\r\n    );\r\n\r\n    this.pageSize = 50;\r\n    this.pagesCount = Math.ceil(this.dataSet.length / this.pageSize);\r\n\r\n  }\r\n\r\n  getDepositPromotionsPromocodes = () => {\r\n    WSManager.Rest(NC.baseURL + MODULE_C.GET_DEPOSIT_PROMOCODES, {}).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n        this.setState({ depositPromocodes: responseJson.data.promocodes });\r\n\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/login');\r\n      } else {\r\n        this.setState({ posting: false });\r\n      }\r\n    })\r\n  }\r\n\r\n  handleRecentCommunicationPagination(e, index) {\r\n\r\n    e.preventDefault();\r\n\r\n    var minPage = 1;\r\n    var maxPage = 5;\r\n    if (index >= 1 && index < 5) {\r\n      maxPage = 5;\r\n      minPage = 1;\r\n    }\r\n\r\n    if (index >= 5) {\r\n      minPage = index - 2;\r\n      maxPage = index + 2;\r\n    }\r\n\r\n    this.setState({\r\n      recentCommunicationParams: { ...this.state.recentCommunicationParams, currentPage: index },\r\n      minPage: minPage,\r\n      maxPage: maxPage\r\n    },\r\n      () => {\r\n        this.getRecentCommunication();\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  buySms = () => {\r\n\r\n    if (this.state.isLoading) {\r\n      return false;\r\n    }\r\n\r\n    const param = {\r\n      type: this.state.buy_current_entity,\r\n      value: this.state.notify_sms_value,\r\n      amount: this.state.notify_sms_amount,\r\n      entity_name: 'SMS'\r\n    }\r\n\r\n    this.setState({ isLoading: true });\r\n    WSManager.Rest(NC.baseURL + MODULE_C.ADD_NOTIFICATION_ENTITY, param).then((responseJson) => {\r\n      this.setState({ isLoading: false });\r\n      if (responseJson.response_code === NC.successCode) {\r\n        this.setState({\r\n          buy_sms_modal: false,\r\n          cd_balance: responseJson.data.cd_balance,\r\n          notify_entity_value: null\r\n        });\r\n\r\n        this.props.updateSmsBalance(param.value);\r\n\r\n        notify.show(responseJson.message, \"success\", 5000);\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/login');\r\n      }\r\n    });\r\n  }\r\n\r\n  buyNotification = () => {\r\n\r\n    if (this.state.isLoading) {\r\n      return false;\r\n    }\r\n\r\n    const param = {\r\n      type: this.state.buy_current_entity,\r\n      value: this.state.notify_notification_value,\r\n      amount: this.state.notify_notification_amount,\r\n      entity_name: 'Notification'\r\n    }\r\n\r\n    this.setState({ isLoading: true });\r\n    WSManager.Rest(NC.baseURL + MODULE_C.ADD_NOTIFICATION_ENTITY, param).then((responseJson) => {\r\n      this.setState({ isLoading: false });\r\n      if (responseJson.response_code === NC.successCode) {\r\n        this.setState({\r\n          buy_notification_modal: false,\r\n          cd_balance: responseJson.data.cd_balance,\r\n          notify_entity_value: null\r\n        });\r\n\r\n        this.props.updateNotificationBalance(param.value);\r\n\r\n        notify.show(responseJson.message, \"success\", 5000);\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/login');\r\n      }\r\n    });\r\n  }\r\n\r\n  buyNotifyEntity = () => {\r\n\r\n    if (this.state.isLoading) {\r\n      return false;\r\n    }\r\n\r\n    const param = {\r\n      type: this.state.buy_current_entity,\r\n      value: this.state.notify_entity_value,\r\n      amount: this.state.notify_email_amount,\r\n      entity_name: 'Email'\r\n    }\r\n\r\n    this.setState({ isLoading: true });\r\n    WSManager.Rest(NC.baseURL + MODULE_C.ADD_NOTIFICATION_ENTITY, param).then((responseJson) => {\r\n      this.setState({ isLoading: false });\r\n      if (responseJson.response_code === NC.successCode) {\r\n        this.setState({\r\n          buy_communication_entity_modal: false,\r\n          cd_balance: responseJson.data.cd_balance,\r\n          notify_entity_value: null\r\n        });\r\n        this.props.updateEmailBalance(param.value);\r\n        notify.show(responseJson.message, \"success\", 5000);\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/login');\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  notifyEntityValueChange = (event) => {\r\n\r\n    this.setState({\r\n      notify_entity_value: event.target.value,\r\n      notify_email_amount: this.state.notify_email_price * event.target.value\r\n    });\r\n  }\r\n\r\n  notifySMSValueChange = (event) => {\r\n\r\n    this.setState({\r\n      notify_sms_value: event.target.value,\r\n      notify_sms_amount: this.state.notify_sms_price * event.target.value\r\n    });\r\n  }\r\n\r\n  notifyNotificationValueChange = (event) => {\r\n\r\n    this.setState({\r\n      notify_notification_value: event.target.value,\r\n      notify_notification_amount: this.state.notify_notification_price * event.target.value\r\n    });\r\n  }\r\n\r\n  handleNotificationType = (e) => {\r\n\r\n    let value = e.target.value;\r\n    let id = e.target.id;\r\n\r\n\r\n    var notificationData = _.cloneDeep(this.state.notificationData);\r\n    notificationData[id] = value == 'false' ? true : false;\r\n\r\n    this.setState({ notificationData: notificationData }, () => {\r\n\r\n      this.get_cd_type_possible_counts(this.state.notificationData);\r\n    });\r\n  }\r\n\r\n  handleFixtureNotificationType = (e) => {\r\n\r\n    let value = e.target.value;\r\n    let id = e.target.id;\r\n\r\n\r\n    var fixturePromoteParam = _.cloneDeep(this.state.fixturePromoteParam);\r\n    fixturePromoteParam[MODULE_C.fixtureChannelMap[id]] = value == 'false' ? true : false;\r\n    fixturePromoteParam[id] = value == 'false' ? true : false;\r\n\r\n    this.setState({ fixturePromoteParam: fixturePromoteParam }, () => {\r\n\r\n      this.get_fixture_cd_type_possible_counts(this.state.fixturePromoteParam);\r\n    });\r\n  }\r\n\r\n  sortRecentComminications = (sortField) => {\r\n\r\n    var sortOrder = 'DESC';\r\n    if (sortField == this.state.recentCommunicationParams.sort_field) {\r\n      sortOrder = (this.state.recentCommunicationParams.sort_order == 'DESC') ? 'ASC' : 'DESC';\r\n    }\r\n\r\n    this.setState({\r\n      recentCommunicationParams: { ...this.state.recentCommunicationParams, sort_order: sortOrder, sort_field: sortField }\r\n    }, () => {\r\n      this.getRecentCommunication();\r\n    });\r\n  }\r\n\r\n  getRecentCommunication() {\r\n    let param = { ...this.state.recentCommunicationParams, sports_id: this.state.selected_sport };\r\n    WSManager.Rest(NC.baseURL + MODULE_C.GET_RECENT_COMMUNICATION_LIST, param).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n\r\n\r\n        this.setState({\r\n          recent_communication_list: responseJson.data.recent_communication_list.result,\r\n          cd_balance: responseJson.data.cd_balance,\r\n          fixtures: (responseJson.data.fixtures && responseJson.data.fixtures.data && responseJson.data.fixtures.data.length > 0) ? responseJson.data.fixtures : [],\r\n          recentCommunicationParams: { ...this.state.recentCommunicationParams, pagesCount: Math.ceil(responseJson.data.recent_communication_list.total / 10) },\r\n\r\n          notify_email_price: responseJson.data.CD_ONE_EMAIL_RATE,\r\n          notify_sms_price: responseJson.data.CD_ONE_SMS_RATE,\r\n          notify_notification_price: responseJson.data.CD_ONE_NOTIFICATION_RATE,\r\n          fixture_image_path: responseJson.data.fixture_image_path,\r\n          SentCount: !_isUndefined(responseJson.data.cd_sent_count) ? responseJson.data.cd_sent_count : [],\r\n        });\r\n\r\n        this.props.setCdBalance(responseJson.data.cd_balance);\r\n\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/login');\r\n      }\r\n    });\r\n  }\r\n\r\n  getUtcToLocal = (date) => {\r\n    return moment.utc(date).local().format();\r\n  }\r\n\r\n  getFormatedDate = (date) => {\r\n    return moment(date).format('LLLL');\r\n  }\r\n\r\n\r\n  toggle_(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  }\r\n\r\n  toggleRecentCModal = (key, val) => {\r\n    let tab = '1'\r\n    if (!_.isEmpty(val) && !_.isUndefined(val.template_name)) {\r\n      if (val.template_name == 'custom-sms') {\r\n        tab = '2'\r\n      }\r\n      if (val.template_name == 'custom-notification') {\r\n        tab = '3'\r\n      }\r\n\r\n    }\r\n\r\n    this.setState({\r\n      activeTab: tab,\r\n      communication_review_modal: !this.state.communication_review_modal,\r\n    });\r\n\r\n    if (!val) {\r\n      return false;\r\n    }\r\n    //get data\r\n    WSManager.Rest(NC.baseURL + MODULE_C.GET_RECENT_COMMUNICATION_DETAIL, { recent_communication_id: val.recent_communication_id }).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n        var email_body = responseJson.data.recent_communication_detail.email_body;\r\n        email_body = email_body.replace(\"{{offer_percentage}}\", 10);\r\n        email_body = email_body.replace(\"{{promo_code}}\", \"FIRSTDEPOSIT\");\r\n        email_body = email_body.replace(\"{{amount}}\", 10);\r\n        email_body = email_body.replace(\"{{year}}\", (new Date()).getFullYear());\r\n        email_body = email_body.replace(\"{{SITE_TITLE}}\", 'Fantasy Sports');\r\n        email_body = email_body.replace(\"{{contest_name}}\", 'Demo');\r\n\r\n        this.setState({\r\n          RC_obj_detail: { ...responseJson.data.recent_communication_detail, email_body: email_body }\r\n        });\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/login');\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleFixturePromoteModal = (key, val) => {\r\n    let TempDate = moment(WSManager.getUtcToLocal(val.season_scheduled_date)).format(\"D-MMM-YYYY hh:mm A\")\r\n    var params = {};\r\n    params.email_template_id = 4;\r\n\r\n    params.season_game_uid = val.season_game_uid;\r\n    params.all_user = 1;\r\n    params.for_str = 'for ' + val.home + ' vs ' + val.away + ' (' + TempDate + ')';\r\n    const stringified = queryString.stringify(params);\r\n    this.props.history.push(`/marketing/new_campaign?${stringified}`);\r\n    return false;\r\n  }\r\n\r\n  PromoteFixtureHide = () => {\r\n    this.setState({\r\n      fixture_promote_model: false\r\n    });\r\n  }\r\n\r\n  PromoteFixtureShow = () => {\r\n    this.setState({\r\n      fixture_promote_model: true\r\n    });\r\n  }\r\n\r\n  get_fixture_cd_type_possible_counts = (notificationData) => {\r\n\r\n    var param = MODULE_C.extend(notificationData, MODULE_C.userBaseType[1]);//1 for all user\r\n\r\n    param.email_template_id = 4;\r\n    WSManager.Rest(NC.baseURL + MODULE_C.NOTIFY_BY_SELECTION_COUNT, param).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n\r\n        this.setState({\r\n\r\n          fixtureObj: {\r\n            ...this.state.fixtureObj,\r\n            email_count: responseJson.data.email_count,\r\n            notification_count: responseJson.data.notification_count,\r\n            sms_count: responseJson.data.sms_count\r\n          },\r\n\r\n        }, () => {\r\n\r\n        });\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  toggleCResendCModal = (key, val) => {\r\n    var params = {};\r\n    if (val.email_count && val.email_count > 0) {\r\n      params.email = true;\r\n    }\r\n\r\n    if (val.sms_count && val.sms_count > 0) {\r\n      params.message = true;\r\n    }\r\n\r\n    if (val.notification_count && val.notification_count > 0) {\r\n      params.notification = true;\r\n    }\r\n\r\n    if (val.cd_email_template_id) {\r\n      params.email_template_id = val.cd_email_template_id;\r\n    }\r\n\r\n    if (MODULE_C.sourceByTemplate[val.notification_type]) {\r\n      params[MODULE_C.sourceByTemplate[val.notification_type]] = val.source_id;\r\n    }\r\n    params = { ...params, ...MODULE_C.userBases[val.userbase] };\r\n    const stringified = queryString.stringify(params);\r\n\r\n    this.props.history.push(`/marketing/new_campaign?${stringified}`);\r\n    return false;\r\n  }\r\n\r\n  togglePrimary() {\r\n    this.setState({\r\n      primary: !this.state.primary,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRecentCommunication();\r\n  }\r\n\r\n\r\n  getSegmentationTemplate = (val) => {\r\n    var param = {};\r\n\r\n    if (val.cd_email_template_id) {\r\n      param.cd_email_template_id = val.cd_email_template_id;\r\n    }\r\n\r\n    WSManager.Rest(NC.baseURL + MODULE_C.GET_SEGEMENTATION_TEMPLATE_LIST, param).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n        const templates = [];\r\n        responseJson.data.result.map((data, key) => {\r\n          templates.push({ value: data.cd_email_template_id, label: data.display_label, detail: data })\r\n          return '';\r\n        })\r\n        this.setState({ templateList: templates });\r\n        this.setState({ notificationData: { ...this.state.notificationData, email_template_id: val.cd_email_template_id } });\r\n\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/login');\r\n      } else {\r\n        this.setState({ posting: false });\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  notifyBySelection = () => {\r\n\r\n    this.setState({ communication_resend_modal: true })\r\n\r\n    let notificationData = MODULE_C.extend(this.state.notificationData, MODULE_C.userBaseType[this.state.notificationData.userbase])\r\n\r\n    let param = { ...notificationData };\r\n    WSManager.Rest(NC.baseURL + MODULE_C.NOTIFY_BY_SELECTION, param).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n        notify.show(responseJson.message, \"success\", 5000);\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/login');\r\n      } else {\r\n        this.setState({ posting: false });\r\n      }\r\n    })\r\n  }\r\n\r\n  fixtureNotifyBySelection = (seasonGameUid) => {\r\n    let param = { ...this.state.fixturePromoteParam, season_game_uid: seasonGameUid };\r\n\r\n    WSManager.Rest(NC.baseURL + MODULE_C.NOTIFY_BY_SELECTION, param).then((responseJson) => {\r\n\r\n      this.setState({ posting: false });\r\n      if (responseJson.response_code === NC.successCode) {\r\n        this.setState({ fixture_promote_model: false })\r\n        notify.show(responseJson.message, \"success\", 5000);\r\n      }\r\n      else if (responseJson.response_code == NC.sessionExpireCode) {\r\n        this.props.history.push('/login');\r\n      }\r\n    })\r\n  }\r\n\r\n  get_cd_type_possible_counts = (notificationData) => {\r\n\r\n    var param = MODULE_C.extend(notificationData, MODULE_C.userBaseType[this.state.Resend_obj_detail.userbase]);\r\n    param.from_date = this.state.Resend_obj_detail.from_date;\r\n    param.to_date = this.state.Resend_obj_detail.to_date;\r\n\r\n    WSManager.Rest(NC.baseURL + MODULE_C.NOTIFY_BY_SELECTION_COUNT, notificationData).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n\r\n        this.setState({\r\n\r\n          Resend_obj_detail: {\r\n            ...this.state.Resend_obj_detail,\r\n            email_count: responseJson.data.email_count,\r\n            notification_count: responseJson.data.notification_count,\r\n            sms_count: responseJson.data.sms_count\r\n          },\r\n\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  handlePromocodeChange = (selectedOption) => {\r\n    let value = selectedOption.value;\r\n    this.setState({\r\n      notificationData: { ...this.state.notificationData, promo_code_id: value },\r\n    });\r\n  }\r\n\r\n  handleChange = (selectedOption) => {\r\n\r\n    if (!selectedOption) {\r\n      this.setState({\r\n        notificationData: {}\r\n      });\r\n      return false;\r\n    }\r\n\r\n    let value = selectedOption.value;\r\n\r\n    //check for deposit template\r\n    if (selectedOption && selectedOption.detail && selectedOption.detail.template_name === 'promotion-for-deposit') {\r\n\r\n      this.setState({\r\n        notificationData: { ...this.state.notificationData, email_template_id: value, promo_code_id: '' },\r\n        depositPromocodes: [],\r\n      }, () => {\r\n        this.getDepositPromotionsPromocodes();\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        depositPromocodes: [],\r\n        notificationData: { ...this.state.notificationData, email_template_id: value, promo_code_id: '' }\r\n      });\r\n    }\r\n  }\r\n\r\n  editSchedule = (val) => {\r\n\r\n    var params = {};\r\n    params.email_template_id = this.state.DealCatId;\r\n    params.all_user = 1;\r\n    params.deal_id = Base64.encode(val.deal_id);\r\n    params.amt = Base64.encode(val.amount);\r\n    params.for_str = ' For Deal '\r\n\r\n    const stringified = queryString.stringify(params);\r\n    this.props.history.push(`/marketing/new_campaign?${stringified}`);\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      recent_communication_list,\r\n      cd_balance,\r\n      notificationData,\r\n      templateList,\r\n      fixtures,\r\n      fixtureObj,\r\n      recentCommunicationParams,\r\n      minPage,\r\n      maxPage,\r\n      SentCount\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"animated fadeIn campaign-dashboard\">\r\n        <div className=\"new campaign\">\r\n          <Row className=\"commrow\" >\r\n            <Col sm={6} >\r\n              <h2 className=\"h2-cls\">Communication Dashboard</h2>\r\n            </Col>\r\n\r\n            <Col sm={6}>\r\n              <Button className='btn-secondary-outline btn-new-campaign' onClick={() => { this.props.history.push('new_campaign') }}>New Campaign</Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n\r\n        <Row className=\"remainingsrow\">\r\n          <Col md={12}>\r\n            <Card className=\"remainings\">\r\n\r\n              <Col className=\"remainingscol\">\r\n                <div className=\"col-sm-4\">\r\n                  {\r\n                    <h2 className=\"balanceremaning\">\r\n                      {!_isUndefined(SentCount.email_sent) ? SentCount.email_sent : 0}\r\n                    </h2>\r\n                  }\r\n                  <label className=\"labelremaining\" text-align=\"center\"><text className=\"textcls\">Total emails sent</text>\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"col-sm-4\">\r\n                  <h2 className=\"balanceremaning\">\r\n                    {!_isUndefined(SentCount.sms_sent) ? SentCount.sms_sent : 0}\r\n                  </h2>\r\n                  <label className=\"labelremaining\"><text className=\"textcls\" >\r\n                    Total SMS sent\r\n                    </text>\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"col-sm-4\">\r\n                  <h2 className=\"balanceremaning\">\r\n                    {!_isUndefined(SentCount.notification_sent) ? SentCount.notification_sent : 0}\r\n                  </h2>\r\n                  <label className=\"labelremaining\" align-text=\"center\"><text className=\"textcls\">Total notifications sent</text>\r\n                  </label>\r\n                </div>\r\n              </Col>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg=\"12\">\r\n            <h5 className=\"recom\">Recent Communication</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"12\" lg=\"12\">\r\n            <Card className=\"recentcom\">\r\n              <CardBody>\r\n                <Table responsive className=\"communication-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">\r\n                        <div className=\"dropdownuserdetail\" onClick={() => this.sortRecentComminications('user_details')}>\r\n                          <button className=\"btn tbl-btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Userbase\r\n                           </button>\r\n                          <i className={(this.state.recentCommunicationParams.sort_field == 'user_details' && this.state.recentCommunicationParams.sort_order == 'DESC') ? 'fa fa-sort-desc' : ((this.state.recentCommunicationParams.sort_field == 'user_details' && this.state.recentCommunicationParams.sort_order == 'ASC') ? 'fa fa-sort-asc' : '')} ></i>\r\n                        </div>\r\n                      </th>\r\n\r\n\r\n                      <th scope=\"col\">\r\n                        <div className=\"dropdown\" onClick={() => this.sortRecentComminications('template_name')}>\r\n                          <button className=\"btn tbl-btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Templates\r\n                           </button>\r\n                          <i className={(this.state.recentCommunicationParams.sort_field == 'template_name' && this.state.recentCommunicationParams.sort_order == 'DESC') ? 'fa fa-sort-desc' : ((this.state.recentCommunicationParams.sort_field == 'template_name' && this.state.recentCommunicationParams.sort_order == 'ASC') ? 'fa fa-sort-asc' : '')} ></i>\r\n                          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\"></div>\r\n                        </div>\r\n                      </th>\r\n\r\n                      <th scope=\"col\">\r\n                        <div className=\"dropdown\" onClick={() => this.sortRecentComminications('email_count')}>\r\n                          <button className=\"btn tbl-btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Emails\r\n                           </button>\r\n                          <i className={(this.state.recentCommunicationParams.sort_field == 'email_count' && this.state.recentCommunicationParams.sort_order == 'DESC') ? 'fa fa-sort-desc' : ((this.state.recentCommunicationParams.sort_field == 'email_count' && this.state.recentCommunicationParams.sort_order == 'ASC') ? 'fa fa-sort-asc' : '')} ></i>\r\n                          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\"></div>\r\n                        </div>\r\n                      </th>\r\n\r\n                      <th scope=\"col\">\r\n                        <div className=\"dropdown\" onClick={() => this.sortRecentComminications('sms_count')}>\r\n                          <button className=\"btn tbl-btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            SMS\r\n                           </button>\r\n                          <i className={(this.state.recentCommunicationParams.sort_field == 'sms_count' && this.state.recentCommunicationParams.sort_order == 'DESC') ? 'fa fa-sort-desc' : ((this.state.recentCommunicationParams.sort_field == 'sms_count' && this.state.recentCommunicationParams.sort_order == 'ASC') ? 'fa fa-sort-asc' : '')} ></i>\r\n                          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\"></div>\r\n                        </div>\r\n                      </th>\r\n\r\n                      <th scope=\"col\">\r\n                        <div className=\"dropdown\" onClick={() => this.sortRecentComminications('notification_count')}>\r\n                          <button className=\"btn tbl-btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Notification\r\n                           </button>\r\n                          <i className={(this.state.recentCommunicationParams.sort_field == 'notification_count' && this.state.recentCommunicationParams.sort_order == 'DESC') ? 'fa fa-sort-desc' : ((this.state.recentCommunicationParams.sort_field == 'notification_count' && this.state.recentCommunicationParams.sort_order == 'ASC') ? 'fa fa-sort-asc' : '')} ></i>\r\n                          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\"></div>\r\n                        </div>\r\n                      </th>\r\n                      <th scope=\"col\">\r\n                        <div className=\"dropdown\">\r\n                          Delivered\r\n                          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\"></div>\r\n                        </div>\r\n                      </th>\r\n                      <th scope=\"col\">\r\n                        <div className=\"dropdown\">\r\n                          Viewed\r\n                          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\"></div>\r\n                        </div>\r\n                      </th>\r\n                      <th scope=\"col\">\r\n                        <div className=\"dropdown\" onClick={() => this.sortRecentComminications('added_date')}>\r\n                          <button className=\"btn tbl-btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            DateTime\r\n                           </button>\r\n                          <i className={(this.state.recentCommunicationParams.sort_field == 'added_date' && this.state.recentCommunicationParams.sort_order == 'DESC') ? 'fa fa-sort-desc' : ((this.state.recentCommunicationParams.sort_field == 'added_date' && this.state.recentCommunicationParams.sort_order == 'ASC') ? 'fa fa-sort-asc' : '')} ></i>\r\n                          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\"></div>\r\n                        </div>\r\n                      </th>\r\n\r\n                      <th scope=\"col\">\r\n                        <div className=\"dropdown\">\r\n                          <button className=\"btn tbl-btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Action\r\n                           </button>\r\n                          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\"></div>\r\n                        </div>\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n\r\n                    {\r\n                      recent_communication_list && recent_communication_list.length > 0 &&\r\n                      _.map(recent_communication_list, (val, key) => {\r\n                        if (key < this.state.length) {\r\n                          return (\r\n                            <tr key={key}>\r\n                              <td>{val.user_details}\r\n                              </td>\r\n                              <td>{val.template_name}</td>\r\n                              <td className=\"sent-count\">{val.email_count}</td>\r\n                              <td className=\"sent-count\">{val.sms_count}</td>\r\n                              <td>{val.notification_count}</td>\r\n                              <td>{val.notification_delivered_count}</td>\r\n                              <td>{val.notification_viewed_count}</td>\r\n                              <td>\r\n                                <MomentDateComponent data={{ date: val.added_date, format: \"D-MMM-YYYY hh:mm A\" }} />\r\n                              </td>\r\n                              <td Style=\"display:flex;\">\r\n                                <span onClick={() => this.toggleRecentCModal(key, val)} className=\"shape magnifying-glass\" >\r\n                                  <img src={Images.EYE} />\r\n                                </span>\r\n                                {/* <span onClick={() => this.editSchedule(val)} className=\"shape\" >\r\n                                  <i className=\"icon-edit font-xl\"></i>\r\n                                </span> */}\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        }\r\n\r\n                      })\r\n                    }\r\n                    {\r\n                      <div>\r\n                      </div>\r\n                    }\r\n                    {\r\n                      (!recent_communication_list || recent_communication_list.length == 0) &&\r\n                      <tr>\r\n                        <td colspan={7}>\r\n                          <div className=\"no-data-img\">\r\n                            <img className=\"img-cover\" src={Images.NODATA} />\r\n                            <br />\r\n                            <br />\r\n                            <text Style=\"color:#9B9B9B;\" className=\"nodata\">No Record Found!</text>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    }\r\n\r\n                  </tbody>\r\n                </Table>\r\n                <Row className=\"viewrow\">\r\n                  <Col lg={12}>\r\n                    {\r\n                      this.state.length == 3 ?\r\n                        <text className=\"viewallcd\" onClick={() => this.setState({ length: recent_communication_list.length })}>View All</text>\r\n                        :\r\n                        <text className=\"viewallcd\" onClick={() => this.setState({ length: 3 })}>View Less</text>\r\n                    }\r\n                    {\r\n                      this.state.length > 3 &&\r\n                      <div className=\"pull-right\">\r\n                        <Pagination aria-label=\"Page navigation example\" className=\"custom-pagination\">\r\n                          <PaginationItem disabled={recentCommunicationParams.currentPage <= 0}>\r\n\r\n                            <PaginationLink\r\n                              onClick={e => this.handleRecentCommunicationPagination(e, 0)}\r\n                              first\r\n                              href=\"#\"\r\n                            />\r\n                          </PaginationItem>\r\n\r\n                          <PaginationItem disabled={recentCommunicationParams.currentPage <= 0}>\r\n                            <PaginationLink\r\n                              onClick={e => this.handleRecentCommunicationPagination(e, recentCommunicationParams.currentPage - 1)}\r\n                              previous\r\n                              href=\"#\"\r\n                            />\r\n                          </PaginationItem>\r\n                          {[...Array(recentCommunicationParams.pagesCount)].map((page, i) =>\r\n                            ((i + 1) >= minPage && (i + 1) <= maxPage) &&\r\n                            <PaginationItem active={i === recentCommunicationParams.currentPage} key={i}>\r\n                              <PaginationLink onClick={e => this.handleRecentCommunicationPagination(e, i)} href=\"#\">\r\n                                {i + 1}\r\n                              </PaginationLink>\r\n                            </PaginationItem>\r\n                          )}\r\n                          <PaginationItem disabled={recentCommunicationParams.currentPage >= recentCommunicationParams.pagesCount - 1}>\r\n                            <PaginationLink\r\n                              onClick={e => this.handleRecentCommunicationPagination(e, recentCommunicationParams.currentPage + 1)}\r\n                              next\r\n                              href=\"#\"\r\n                            />\r\n                          </PaginationItem>\r\n                          <PaginationItem disabled={recentCommunicationParams.currentPage >= recentCommunicationParams.pagesCount}>\r\n                            <PaginationLink\r\n                              onClick={e => this.handleRecentCommunicationPagination(e, recentCommunicationParams.pagesCount - 1)}\r\n                              last\r\n                              href=\"#\"\r\n                            />\r\n                          </PaginationItem>\r\n                        </Pagination>\r\n                      </div>\r\n                    }\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* ///Email Modal\\\\\\ */}\r\n        <Modal\r\n          isOpen={this.state.communication_review_modal}\r\n          toggle={this.toggleRecentCModal}\r\n          className=\"promtn-modal\"\r\n        >\r\n          <ModalHeader toggle={this.toggleRecentCModal} className=\"promotion\">\r\n            Promotion\r\n            </ModalHeader>\r\n          <ModalBody>\r\n\r\n            <Row >\r\n              <Col lg={6} className=\"allusercol\">\r\n                <h3 className=\"pr-ub-name\">\r\n                  {this.state.RC_obj_detail.list_name}\r\n                </h3>\r\n                <div className=\"pr-ub-date\">\r\n                  <MomentDateComponent data={{ date: this.state.RC_obj_detail.added_date, format: \"D-MMM-YYYY hh:mm A\" }} />\r\n                </div>\r\n              </Col>\r\n\r\n              <Col lg={6} className=\"allusercol\">\r\n                {\r\n                  this.state.activeTab === '1' &&\r\n                  <div className=\"tabpreview\">\r\n                    <div className=\"pr-sent-title\"> Email sent</div>\r\n                    <div className=\"pr-ub-name float-right\">{this.state.RC_obj_detail.email_count}</div>\r\n                  </div>\r\n                }\r\n                {\r\n                  this.state.activeTab === '2' &&\r\n                  <div className=\"tabpreview\">\r\n                    <div className=\"pr-sent-title\"> SMS sent</div>\r\n                    <div className=\"pr-ub-name float-right\">{this.state.RC_obj_detail.sms_count}</div>\r\n                  </div>\r\n                }\r\n                {\r\n                  this.state.activeTab === '3' &&\r\n                  <div className=\"tabpreview\">\r\n                    <div className=\"pr-sent-title\"> Notification sent</div>\r\n                    <div className=\"pr-ub-name float-right\">{this.state.RC_obj_detail.notification_count}</div>\r\n                  </div>\r\n                }\r\n              </Col>\r\n            </Row>\r\n\r\n            <div className=\"popuppreviewtab\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '1' })}\r\n                    onClick={() => { this.toggle_('1'); }}\r\n                  >\r\n                    Email\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '2' })}\r\n                    onClick={() => { this.toggle_('2'); }}\r\n                  >\r\n                    SMS\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '3' })}\r\n                    onClick={() => { this.toggle_('3'); }}\r\n                  >\r\n                    Notification\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n              </Nav>\r\n              <TabContent activeTab={this.state.activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                  <Row>\r\n                    <Col sm=\"12\" className=\"temptab p-0\">\r\n                      <div className=\"subjecttemp mb-2\">\r\n                        <text className=\"subject\">Subject -\r\n                          <text className=\"subject1\">   {this.state.RC_obj_detail.subject}\r\n                          </text>\r\n                        </text>\r\n                      </div>\r\n                      <div className=\"emailbody\" dangerouslySetInnerHTML={{ __html: this.state.RC_obj_detail.email_body }}>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"2\">\r\n                  <Row>\r\n                    <Col sm=\"12\" className=\"temptab p-0\">\r\n                      <div className=\"pr-body-text\">\r\n                        {this.state.RC_obj_detail.message_body}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"3\">\r\n                  <Row>\r\n                    <Col sm=\"12\" className=\"temptab p-0\">\r\n                      <div className=\"pr-body-text\">\r\n                        {this.state.RC_obj_detail.notification_message}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              </TabContent>\r\n            </div>\r\n            <div className=\"templatepreview\">\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n\r\n\r\n        {/* ///Resend Modal\\\\\\ */}\r\n        <Modal isOpen={this.state.communication_resend_modal} toggle={this.toggleCResendCModal} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggleCResendCModal} className=\"resend\">\r\n            <Col lg={12}>\r\n              <h5 className=\"resend title\"> RESEND</h5></Col>\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            {\r\n              <Row className=\"usertime\">\r\n                <Col lg={12}>\r\n                  <div>Campaign Type</div>\r\n                  <div>{this.state.Resend_obj_detail.user_details} </div>\r\n                  <span className=\"allusers\">\r\n                    {\r\n                      this.state.Resend_obj_detail.from_date && this.state.Resend_obj_detail.to_date &&\r\n                      <span>\r\n                        (<MomentDateComponent data={{ date: this.state.Resend_obj_detail.from_date, format: \"D-MMM-YYYY hh:mm A\" }} /> -\r\n                        <MomentDateComponent data={{ date: this.state.Resend_obj_detail.to_date, format: \"D-MMM-YYYY hh:mm A\" }} />)\r\n                        </span>\r\n                    }\r\n                    {\r\n                      !this.state.Resend_obj_detail.from_date && !this.state.Resend_obj_detail.to_date &&\r\n                      <span>\r\n                        (<MomentDateComponent data={{ date: this.state.Resend_obj_detail.added_date, format: \"DD/MM/YYYY\" }} />)\r\n                      </span>\r\n                    }\r\n\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            }\r\n            <Row className=\"communication\">\r\n              <Col lg={12}>\r\n                <div className=\"comchannel\">Communication Channel</div>\r\n\r\n                <div className=\"customcontrol\">\r\n\r\n                  <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                    <Input type=\"checkbox\" id=\"email\" className=\"custom-control-input\" onChange={this.handleNotificationType}\r\n                      checked={notificationData.email}\r\n                      value={notificationData.email}></Input>\r\n                    <label className=\"custom-control-label\" for=\"email\">E-MAIL</label>\r\n                  </div>\r\n\r\n                  <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                    <Input type=\"checkbox\" id=\"message\" className=\"custom-control-input\" onChange={this.handleNotificationType}\r\n                      checked={notificationData.message}\r\n                      value={notificationData.message}></Input>\r\n                    <label className=\"custom-control-label\" for=\"message\">SMS</label>\r\n                  </div>\r\n\r\n                  <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                    <Input type=\"checkbox\" id=\"notification\" className=\"custom-control-input\" onChange={this.handleNotificationType}\r\n                      checked={notificationData.notification}\r\n                      value={notificationData.notification}></Input>\r\n                    <label className=\"custom-control-label\" for=\"notification\">Notification</label>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Col>\r\n              <Row className=\"select preview\">\r\n                <Col md={5} className=\"tempselect\">\r\n                  <div className=\"templates1\">Templates</div>\r\n                  <Select class=\"form-control\"\r\n                    value={notificationData.email_template_id}\r\n                    onChange={this.handleChange}\r\n                    options={templateList}>\r\n                  </Select>\r\n                  {\r\n                    this.state.depositPromocodes.length > 0 &&\r\n                    <Select class=\"form-control\"\r\n                      value={notificationData.promo_code_id}\r\n                      onChange={this.handlePromocodeChange}\r\n                      options={this.state.depositPromocodes}>\r\n                      <div className=\"Select-placeholder\">Select Promocode</div>\r\n                    </Select>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"popcardrow\">\r\n                <Col md={4}>\r\n                  <Card className=\"popcard\">\r\n                    <h6 className=\"popcard6\">E-MAIL</h6>\r\n                    <h2 className=\"popcard8\"> {this.state.Resend_obj_detail.email_count}</h2>\r\n                    {/* <h6 className=\"popcard7\">Credit remaining:{cd_balance.email_balance}</h6> */}\r\n                  </Card>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <Card className=\"popcard\">\r\n                    <h6 className=\"popcard6\">SMS</h6>\r\n                    <h2 className=\"popcard8\">{this.state.Resend_obj_detail.sms_count}</h2>\r\n                    {/* <h6 className=\"popcard7\">Credit remaining:{cd_balance.sms_balance}</h6> */}\r\n                  </Card>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <Card className=\"popcard\">\r\n                    <h6 className=\"popcard6\">Notification</h6>\r\n                    <h2 className=\"popcard8\">{this.state.Resend_obj_detail.notification_count}</h2>\r\n                    {/* <h6 className=\"popcard7\">Credit remaining:{cd_balance.notification_balance}</h6> */}\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Row>\r\n              <Col lg={12} className=\"resend\">\r\n                <Button className=\"resendbtnpop\" outline disabled={!notificationData.email_template_id} color=\"danger\" onClick={() => this.notifyBySelection()}>Resend</Button>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n        {/* /////Resend Modal (Promote btnmodal)\\\\\\\\ */}\r\n        {\r\n          this.state.fixture_promote_model &&\r\n          <PromoteFixtureModal IsPromoteFixtureShow={this.state.fixture_promote_model} IsPromoteFixtureHide={this.PromoteFixtureHide} FixtureData={{ fixtureObj: fixtureObj }} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCdBalance: (cd_balance) => dispatch({ type: actionTypes.SET_CD_BALANCE, cd_balance: cd_balance }),\r\n    updateEmailBalance: (val) => dispatch({ type: actionTypes.UPDATE_EMAIL_BALANCE, value: val }),\r\n    updateSmsBalance: (val) => dispatch({ type: actionTypes.UPDATE_SMS_BALANCE, value: val }),\r\n    updateNotificationBalance: (val) => dispatch({ type: actionTypes.UPDATE_NOTIFICATION_BALANCE, value: val })\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return state;\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CampaignDashboard);\r\n\r\n"],"sourceRoot":""}