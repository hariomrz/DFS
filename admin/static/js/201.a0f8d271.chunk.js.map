{"version":3,"sources":["views/Merchandise/Merchandise.jsx"],"names":["Merchandise","props","handleInputChange","event","name","target","value","setState","validateForm","NameValid","state","MName","ValueValid","MValue","FileNameValid","fileName","length","MNameMSg","match","MValueMSg","formValid","_","isUndefined","isNull","onChangeImage","uploadFor","merchandiseId","URL","createObjectURL","files","this","file","data","FormData","editCase","append","Previous_Img","WSManager","multipartPost","NC","then","Response","response_code","IMAGE_NAME","image_name","catch","error","console","log","notify","show","resetFile","addMerchandise","params","price","Rest","getMerchandiseList","message","updateMerchandise","merchandise_id","EditItemData","showCancelBtn","sort_field","sort_order","items_perpage","PERPAGE","current_page","CURRENT_PAGE","MerchandiseList","merchandise_list","NextOffset","next_offset","editMerchandise","item","editFor","reload","window","scrollTo","top","behavior","resetValue","className","xs","isEmpty","accept","type","id","onChange","e","onClick","src","htmlFor","maxLength","disabled","map","idx","key","alt","Component"],"mappings":"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","file":"static/js/201.a0f8d271.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Col, Row, Input, Button } from 'reactstrap';\r\nimport _ from 'lodash';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\n\r\nclass Merchandise extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reload: true,\r\n            showCancelBtn: false,\r\n            MName: '',\r\n            MValue: '0',\r\n            fileName: '',\r\n            formValid: false,\r\n            MNameMSg: true,\r\n            MValueMSg: true,\r\n            MerchandiseList: [],\r\n            PERPAGE: NC.ITEMS_PERPAGE,\r\n            CURRENT_PAGE: 1,\r\n            Previous_Img: '',\r\n            EditItemData: [],\r\n            editCase: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMerchandiseList();\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => this.validateForm(name, value)\r\n        )\r\n    }\r\n\r\n    validateForm = (name, value) => {\r\n        let NameValid = this.state.MName\r\n        let ValueValid = this.state.MValue\r\n        let FileNameValid = this.state.fileName\r\n\r\n        switch (name) {\r\n            case 'MName':\r\n                NameValid = (value.length > 0 && value.length <= 50) ? true : false;\r\n                this.setState({ MNameMSg: NameValid })\r\n                break;\r\n            case 'MValue':\r\n                ValueValid = (value.length > 10 && !value.match(/^[0-9]*$/)) ? false : true;\r\n                this.setState({ MValueMSg: ValueValid })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            formValid: (NameValid && ValueValid && !_.isUndefined(FileNameValid) && !_.isNull(FileNameValid))\r\n        })\r\n    }\r\n\r\n    onChangeImage = (event, uploadFor, merchandiseId) => {\r\n        this.setState({\r\n            fileName: URL.createObjectURL(event.target.files[0]),\r\n        }, function () {\r\n            this.validateForm()\r\n        });\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n        var data = new FormData();\r\n        if (this.state.editCase) {\r\n            data.append(\"merchandise_id\", merchandiseId)\r\n        }\r\n        data.append(\"file\", file);\r\n        data.append(\"source\", uploadFor);\r\n        data.append(\"previous_img\", this.state.Previous_Img);\r\n\r\n        WSManager.multipartPost(NC.baseURL + NC.UPLOAD_MERCHANDISE_IMG, data)\r\n            .then(Response => {\r\n                if (Response.response_code == NC.successCode) {\r\n                    this.setState({\r\n                        IMAGE_NAME: Response.data.image_name\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        fileName: null\r\n                    }, this.validateForm);\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"486\");\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000);\r\n            });\r\n    }\r\n\r\n    resetFile = () => {\r\n        this.setState({\r\n            fileName: null\r\n        }, function () {\r\n            this.validateForm()\r\n        });\r\n    }\r\n\r\n    addMerchandise = () => {\r\n        this.setState({ formValid : false })\r\n        let { MName, MValue, IMAGE_NAME } = this.state\r\n        let params = {\r\n            name: MName,\r\n            price: MValue,\r\n            image_name: IMAGE_NAME\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.ADD_MERCHANDISE, params).then(Response => {\r\n            this.getMerchandiseList();\r\n            if (Response.response_code == NC.successCode) {\r\n                notify.show(Response.message, 'success', 5000)\r\n                this.setState({\r\n                    MName: '',\r\n                    MValue: '0',\r\n                    fileName: '',\r\n                    IMAGE_NAME: ''\r\n                })\r\n            }\r\n            this.setState({ formValid: true })\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    updateMerchandise = () => {\r\n        let { MName, MValue, IMAGE_NAME, EditItemData } = this.state\r\n        let params = {\r\n            name: MName,\r\n            price: MValue,\r\n            image_name: IMAGE_NAME,\r\n            merchandise_id: EditItemData.merchandise_id\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.UPDATE_MERCHANDISE, params).then(Response => {\r\n            this.getMerchandiseList();\r\n            if (Response.response_code == NC.successCode) {\r\n                notify.show(Response.message, 'success', 5000)\r\n                this.setState({\r\n                    MName: '',\r\n                    MValue: '',\r\n                    IMAGE_NAME: '',\r\n                    fileName: '',\r\n                    showCancelBtn: false\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n        this.setState({\r\n            editCase: false\r\n        })\r\n\r\n    }\r\n\r\n    getMerchandiseList = () => {\r\n        let { PERPAGE, CURRENT_PAGE } = this.state\r\n        let params = {\r\n            sort_field: \"added_date\",\r\n            sort_order: \"DESC\",\r\n            items_perpage: PERPAGE,\r\n            current_page: CURRENT_PAGE,\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_MERCHANDISE_LIST, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                this.setState({\r\n                    MerchandiseList: Response.data.merchandise_list,\r\n                    NextOffset: Response.data.next_offset,\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    editMerchandise = (item) => {\r\n        let editFor = item.merchandise_id\r\n        this.setState({\r\n            showCancelBtn: true,\r\n            EditItemData: item,\r\n            editCase: true\r\n        })\r\n        let params = {\r\n            merchandise_id: editFor\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_MERCHANDISE_BY_ID, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                this.setState({\r\n                    MName: Response.data.name,\r\n                    MValue: Response.data.price,\r\n                    IMAGE_NAME: Response.data.image_name,\r\n                    fileName: NC.S3 + NC.MERCHANDISEIMG + Response.data.image_name,\r\n                    Previous_Img: Response.data.image_name,\r\n                    reload: false\r\n                }, () => {\r\n                        window.scrollTo({\r\n                            top: 0,\r\n                            behavior: \"smooth\"\r\n                        })\r\n\r\n                    this.setState({\r\n                        reload: true\r\n                    })\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    resetValue = () => {\r\n        this.setState({\r\n            reload: false,\r\n            MName: '',\r\n            MValue: '0',\r\n            fileName: '',\r\n            IMAGE_NAME: ''\r\n        }, () => {\r\n            this.setState({\r\n                reload: true\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            fileName,\r\n            MNameMSg,\r\n            MValueMSg,\r\n            MName,\r\n            MValue,\r\n            formValid,\r\n            MerchandiseList,\r\n            reload,\r\n            showCancelBtn,\r\n            EditItemData\r\n        } = this.state\r\n\r\n        return (\r\n            <div className=\"animated fadeIn add-merchandise-container\">\r\n\r\n                <div className=\"form-container\">\r\n                    <div className=\"header-primary\">\r\n                        Add Merchandise\r\n                    </div>\r\n                    {reload &&\r\n                        <div className=\"form-body add-rewards\">\r\n                            <Row className=\"pb-3\">\r\n                                <Col xs={8} className=\"border-right\">\r\n                                    <figure className=\"upload-img\">\r\n                                        {!_.isEmpty(fileName) ?\r\n                                            <Fragment>\r\n                                                <a\r\n                                                    onClick={() => this.resetFile()}\r\n                                                >\r\n                                                    <i className={ showCancelBtn ? \"icon-delete\" : \"icon-close\"}></i>\r\n                                                </a>\r\n                                                <img className=\"img-cover\" src={fileName} />\r\n                                            </Fragment>\r\n                                            :\r\n                                            <Fragment>\r\n                                                {this.state.editCase ?\r\n                                                    <Fragment>\r\n                                                        <Input\r\n                                                            accept=\"image/x-png,image/gif,image/jpeg,image/bmp,image/jpg\"\r\n                                                            type=\"file\"\r\n                                                            name='merchandise_image'\r\n                                                            id=\"merchandise_image\"\r\n                                                            className=\"gift_image\"\r\n                                                            onChange={(e) => this.onChangeImage(e, 'edit', EditItemData.merchandise_id)}\r\n                                                        />\r\n                                                        <i onChange={(e) => this.onChangeImage(e, 'edit', EditItemData.merchandise_id)} className=\"icon-camera\"></i>\r\n                                                    </Fragment>\r\n                                                    :\r\n                                                    <Fragment>\r\n                                                        <Input\r\n                                                            accept=\"image/x-png,image/gif,image/jpeg,image/bmp,image/jpg\"\r\n                                                            type=\"file\"\r\n                                                            name='merchandise_image'\r\n                                                            id=\"merchandise_image\"\r\n                                                            className=\"gift_image\"\r\n                                                            onChange={(e) => this.onChangeImage(e, 'add', '')}\r\n                                                        />\r\n                                                        <i onChange={(e) => this.onChangeImage(e, 'add', '')} className=\"icon-camera\"></i>\r\n                                                    </Fragment>\r\n\r\n                                                }\r\n                                            </Fragment>\r\n                                        }\r\n                                    </figure>\r\n                                    <div className=\"figure-help-text\">Please upload image with maximum size of 150 by 150.</div>\r\n                                    <div className=\"input-box\">\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"MName\">Name</label>\r\n                                            <Input\r\n                                                maxLength={50}\r\n                                                name='MName'\r\n                                                value={MName}\r\n                                                onChange={this.handleInputChange}\r\n                                            />\r\n                                            \r\n                                            {!MNameMSg &&\r\n                                                <span className=\"color-red\">\r\n                                                    Please enter valid name.\r\n                                                </span>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"MValue\">Value</label>\r\n                                            <Input\r\n                                                maxLength={10}\r\n                                                name='MValue'\r\n                                                value={MValue}\r\n                                                onChange={this.handleInputChange}\r\n                                            />\r\n                                            <div className=\"field-info-text\">Value contains only number.</div>                                            \r\n                                        </div>\r\n                                        {showCancelBtn ?\r\n                                            <Button\r\n                                                disabled={!formValid}\r\n                                                className=\"btn-secondary-outline publish-btn float-right\"\r\n                                                onClick={() => this.updateMerchandise()}\r\n                                            >Update</Button>\r\n                                            :\r\n                                            <Button\r\n                                                disabled={!formValid}\r\n                                                className=\"btn-secondary-outline publish-btn float-right\"\r\n                                                onClick={this.addMerchandise}\r\n                                            >Save</Button>\r\n                                        }\r\n                                    </div>\r\n                                </Col>\r\n                                <Col xs={4} className=\"text-center\">\r\n                                    <div className=\"uploaded-logo-view\">\r\n                                        {fileName &&\r\n                                            <img className=\"img-cover\" src={fileName} />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"uploaded-label\">\r\n                                        {MName}\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                    <Row className=\"added-merchandise-list-wrap\">\r\n                        <Col xs={12}>\r\n                            <div className=\"added-merchandise-list\">\r\n                                {_.map(MerchandiseList, (item, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"merchandise-info-wrap\" id={'name' + idx}>\r\n                                            <div className=\"merchandise-img-wrap\">\r\n                                                <a\r\n                                                    onClick={() => this.editMerchandise(item)}\r\n                                                >\r\n                                                    <i className=\"icon-edit\"></i>\r\n                                                </a>\r\n                                                <img src={NC.S3 + NC.MERCHANDISEIMG + item.image_name} alt=\"\" />\r\n                                            </div>\r\n                                            <div className=\"merchandise-related-data\">\r\n                                                <div className=\"merchandise-label\">{item.name}</div>\r\n                                                <div className=\"amt\">{item.price}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n\r\n                                }\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Merchandise;"],"sourceRoot":""}