{"version":3,"sources":["views/Report/ParticipantReport.jsx"],"names":["ParticipantReport","props","GetContestFilterData","setState","posting","params","state","selected_sport","WSManager","Rest","NC","then","responseJson","response_code","data","tempGroupList","value","label","group_list","map","lObj","lKey","push","group_id","group_name","tempLeagList","league_list","league_id","league_name","groupList","LeagueList","getContest","SelectedCollection","SelectedGroup","_","isEmpty","notify","show","tempContestList","result","contest_id","contest_name","contestList","getTotalCounts","SelectedContest","RealTeams","real_teams","SystemTeams","system_teams","TotalUsers","users","getAllCollections","collectionType","SelectedLeague","sports_id","ResponseJson","Temp","item","collection_master_id","collection_name","CollectionList","catch","error","exportReport","query_string","console","log","window","open","getReportUser","PERPAGE","CURRENT_PAGE","UserReportList","TotalUser","total","loadTeam","lineup_master_contest_id","l_m_contest_id","teamPosting","activeUser","TeamList","lineup","handleLeagueChange","name","handleCollectionChange","handleCategoryChange","handleContestChange","searchByUser","e","Keyword","target","SearchCodeReq","startDate","endDate","FromDate","Date","now","ToDate","sortField","isDescOrder","TotalDeposit","AllSportsList","SelectedLSports","contestName","LS","get","debounce","bind","this","current_page","length","className","md","isSearchable","class","options","menuIsOpen","onChange","id","onClick","idx","key","game_rank","user_name","is_systemuser","total_score","colSpan","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange","full_name","is_playing","position","team_abbr","captain","score","Component"],"mappings":"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","file":"static/js/210.590a3845.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, Button, Table, Input } from 'reactstrap';\r\nimport _ from 'lodash';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport Select from 'react-select';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Loader from '../../components/Loader';\r\nimport Moment from 'react-moment';\r\nimport LS from 'local-storage';\r\nexport default class ParticipantReport extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            TotalUser: 0,\r\n            // PERPAGE: NC.ITEMS_PERPAGE,\r\n            PERPAGE: 10,\r\n            CURRENT_PAGE: 1,\r\n            startDate: '',\r\n            endDate: '',\r\n            FromDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\r\n            ToDate: new Date(),\r\n            UserReportList: [],\r\n            Keyword: '',\r\n            sortField: 'first_name',\r\n            isDescOrder: true,\r\n            SelectedLeague: '',\r\n            LeagueList: [],\r\n            TotalDeposit: '',\r\n            AllSportsList: [],\r\n            SelectedLSports: '',\r\n            contestName: '',\r\n            contestName: '',\r\n            CollectionList: [],\r\n            SelectedCollection: '',\r\n            SelectedGroup: '',\r\n            collectionType: 1,\r\n            posting: false,\r\n            teamPosting: false,\r\n            TeamList: [],\r\n            contestList: [],\r\n            selected_sport: (LS.get('selected_sport')) ? LS.get('selected_sport') : NC.sportsId,\r\n            RealTeams: 0,\r\n            SystemTeams: 0,\r\n            TotalUsers: 0,\r\n            activeUser: null,\r\n            SelectedGroup: { value: '', label: \"All\" }\r\n        }\r\n        this.SearchCodeReq = _.debounce(this.SearchCodeReq.bind(this), 500);\r\n    }\r\n    componentDidMount() {\r\n        this.GetContestFilterData()\r\n    }\r\n\r\n    GetContestFilterData = () => {\r\n        this.setState({ posting: true })\r\n        let params = { \"sports_id\": this.state.selected_sport };\r\n        WSManager.Rest(NC.baseURL + NC.GET_CONTEST_FILTER, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                responseJson = responseJson.data;\r\n\r\n                let tempGroupList = [{ value: '', label: 'All' }];\r\n                if (responseJson.group_list) {\r\n                    responseJson.group_list.map(function (lObj, lKey) {\r\n                        tempGroupList.push({ value: lObj.group_id, label: lObj.group_name });\r\n                    });\r\n                }\r\n\r\n                let tempLeagList = [];\r\n                if (responseJson.league_list) {\r\n                    responseJson.league_list.map(function (lObj, lKey) {\r\n                        tempLeagList.push({ value: lObj.league_id, label: lObj.league_name });\r\n                    });\r\n                }\r\n\r\n                this.setState({ groupList: tempGroupList, LeagueList: tempLeagList });\r\n            }\r\n            this.setState({ posting: false })\r\n        })\r\n    }\r\n\r\n    getContest = () => {\r\n        let { selected_sport, SelectedCollection, SelectedGroup } = this.state\r\n        if (_.isEmpty(SelectedCollection))\r\n        {\r\n            notify.show(\"Pleae select league and match first\", \"error\", 3000)\r\n            return false\r\n        }\r\n        let params = {\r\n            \"group_id\": SelectedGroup.value,\r\n            \"sports_id\": selected_sport,\r\n            \"collection_master_id\": SelectedCollection.value,\r\n        };\r\n        WSManager.Rest(NC.baseURL + NC.NR_GET_COLLECTION_CONTEST, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                responseJson = responseJson.data;\r\n\r\n                let tempContestList = [];\r\n                if (responseJson.result) {\r\n                    responseJson.result.map(function (lObj, lKey) {\r\n                        tempContestList.push({ value: lObj.contest_id, label: lObj.contest_name });\r\n                    });\r\n                }\r\n                this.setState({ contestList: tempContestList });\r\n            }\r\n        })\r\n    }\r\n\r\n    getTotalCounts = () => {\r\n        let { selected_sport, SelectedContest } = this.state\r\n        let params = {\r\n            \"sports_id\": selected_sport,\r\n            \"contest_id\": SelectedContest.value,\r\n        };\r\n        WSManager.Rest(NC.baseURL + NC.NR_GET_CONTEST_PARTICIPANT_REPORT, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                responseJson = responseJson.data;\r\n                this.setState({\r\n                    RealTeams: responseJson.real_teams,\r\n                    SystemTeams: responseJson.system_teams,\r\n                    TotalUsers: responseJson.users,\r\n                })\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    getAllCollections = () => {\r\n        const { collectionType, selected_sport, SelectedLeague } = this.state\r\n        let params = {\r\n            league_id: SelectedLeague.value,\r\n            sports_id: selected_sport\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.NR_GET_ALL_COLLECTIONS, params).then(ResponseJson => {\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n\r\n                const Temp = []\r\n                _.map(ResponseJson.data, (item) => {\r\n                    Temp.push({\r\n                        value: item.collection_master_id, label: item.collection_name\r\n                    })\r\n                })\r\n                this.setState({\r\n                    CollectionList: Temp\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    exportReport = () => {\r\n        const { SelectedContest } = this.state\r\n        if (!_.isEmpty(SelectedContest))\r\n        {\r\n            var query_string = SelectedContest.value;\r\n            // let sessionKey = WSManager.getToken();\r\n            // query_string += \"&Sessionkey\" + \"=\" + sessionKey;\r\n    \r\n            console.log(\"Ex_url :\", NC.S3 + 'lineup/' + query_string + '.pdf');                            \r\n\r\n            window.open(NC.S3 + 'lineup/' + query_string + '.pdf', '_blank');\r\n        }else{\r\n            notify.show(\"Please select contest.\", \"error\", 3000)\r\n        }\r\n    }\r\n\r\n    getReportUser = () => {\r\n        this.setState({ posting: true })\r\n        const { PERPAGE, CURRENT_PAGE, SelectedContest } = this.state\r\n        let params = {\r\n            \"items_perpage\": PERPAGE,\r\n            \"total_items\": 0,\r\n            \"current_page\": CURRENT_PAGE,\r\n            // \"contest_id\": \"733\",\r\n            // \"game_id\": \"733\"\r\n            \"contest_id\": SelectedContest.value,\r\n            \"game_id\": SelectedContest.value\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_GAME_LINEUP_DETAIL, params).then(ResponseJson => {\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n                this.setState({\r\n                    posting: false,\r\n                    UserReportList: ResponseJson.data.result,\r\n                    TotalUser: ResponseJson.data.total,\r\n                },()=>{\r\n                        if (!_.isEmpty(this.state.UserReportList))\r\n                        this.loadTeam(this.state.UserReportList[0].lineup_master_contest_id)\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    loadTeam = (l_m_contest_id) => {\r\n        this.setState({ \r\n            teamPosting: true, \r\n            activeUser: l_m_contest_id, \r\n            TeamList: [], \r\n        })\r\n        let { SelectedLeague } = this.state\r\n        let params = {\r\n            \"lineup_master_contest_id\": l_m_contest_id,\r\n            \"league_id\": SelectedLeague.value\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_LINEUP_DETAIL, params).then(ResponseJson => {\r\n\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n                this.setState({\r\n                    teamPosting: false,\r\n                    TeamList: ResponseJson.data.lineup,\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    handleLeagueChange = (value, name) => {\r\n        if (value != null)\r\n            this.setState({\r\n                [name]: value,\r\n                CURRENT_PAGE: 1,\r\n                SelectedCollection: '',\r\n                SelectedContest: '',\r\n                UserReportList : [],\r\n                TeamList : [],\r\n            }, this.getAllCollections)\r\n    }\r\n\r\n    handleCollectionChange = (value, name) => {\r\n        if (value != null)\r\n            this.setState({\r\n                [name]: value,\r\n                CURRENT_PAGE: 1,\r\n                SelectedContest: '',\r\n                UserReportList: [],\r\n                TeamList: [],\r\n            }, this.getContest)\r\n    }\r\n\r\n    handleCategoryChange = (value, name) => {\r\n        if (value != null)\r\n            this.setState({\r\n                [name]: value,\r\n                CURRENT_PAGE: 1,\r\n                UserReportList: [],\r\n                TeamList: [],\r\n            }, this.getContest)\r\n    }\r\n\r\n    handleContestChange = (value, name) => {\r\n        if (value != null)\r\n            this.setState({\r\n                [name]: value,\r\n                CURRENT_PAGE: 1,\r\n                UserReportList : [],\r\n                TeamList : []\r\n            }, () => {\r\n                this.getReportUser()\r\n                this.getTotalCounts()\r\n            })\r\n    }\r\n\r\n    handlePageChange(current_page) {\r\n        if (this.state.CURRENT_PAGE != current_page) {\r\n            this.setState({\r\n                CURRENT_PAGE: current_page\r\n            }, () => {\r\n                this.getReportUser();\r\n            });\r\n        }\r\n    }\r\n\r\n    searchByUser = (e) => {\r\n        this.setState({ Keyword: e.target.value }, this.SearchCodeReq)\r\n    }\r\n\r\n    SearchCodeReq() {\r\n        if (this.state.Keyword.length > 2)\r\n            this.getReportUser()\r\n    }\r\n\r\n\r\n    render() {\r\n        const { posting, UserReportList, CURRENT_PAGE, PERPAGE, TotalUser, Keyword, isDescOrder, SelectedLeague, LeagueList, CollectionList, SelectedCollection, groupList, SelectedGroup, TeamList, teamPosting, contestList, SelectedContest, RealTeams, SystemTeams, TotalUsers, activeUser } = this.state\r\n        return (\r\n            <Fragment>\r\n                <div className=\"animated fadeIn participants-rp\">\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <h1 className=\"h1-cls\">Participant Report</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"user-deposit-amount\">\r\n                        <Row className=\"mt-4\">\r\n                            <Col md={2}>\r\n                                <div>\r\n                                    <label className=\"filter-label\">Select League</label>\r\n                                    <Select\r\n                                        isSearchable={true}\r\n                                        class=\"form-control\"\r\n                                        options={LeagueList}\r\n                                        menuIsOpen={true}\r\n                                        value={SelectedLeague}\r\n                                        onChange={e => this.handleLeagueChange(e, 'SelectedLeague')}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <div>\r\n                                    <label className=\"filter-label\">Select Match</label>\r\n                                    <Select\r\n                                        isSearchable={true}\r\n                                        class=\"form-control\"\r\n                                        options={CollectionList}\r\n                                        menuIsOpen={true}\r\n                                        value={SelectedCollection}\r\n                                        onChange={e => this.handleCollectionChange(e, 'SelectedCollection')}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <div>\r\n                                    <label className=\"filter-label\">Select Category</label>\r\n                                    <Select\r\n                                        isSearchable={true}\r\n                                        class=\"form-control\"\r\n                                        id=\"group_id\"\r\n                                        name=\"group_id\"\r\n                                        options={groupList}\r\n                                        menuIsOpen={true}\r\n                                        value={SelectedGroup}\r\n                                        onChange={e => this.handleCategoryChange(e, 'SelectedGroup')}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <div>\r\n                                    <label className=\"filter-label\">Contest Name</label>\r\n                                    <Select\r\n                                        isSearchable={true}\r\n                                        class=\"form-control\"\r\n                                        id=\"contest_id\"\r\n                                        name=\"contest_id\"\r\n                                        options={contestList}\r\n                                        menuIsOpen={true}\r\n                                        value={SelectedContest}\r\n                                        onChange={e => this.handleContestChange(e, 'SelectedContest')}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"prp-head-wrap\">\r\n                            <Col md={9}>\r\n                                <div className=\"prp-head-info\">\r\n                                    <div className=\"prp-title\">Number of User</div>\r\n                                    <div className=\"prp-count\">{TotalUsers}</div>\r\n                                </div>\r\n                                <div className=\"prp-head-info\">\r\n                                    <div className=\"prp-title\">User Teams</div>\r\n                                    <div className=\"prp-count\">{RealTeams}</div>\r\n                                </div>\r\n                                <div className=\"prp-head-info\">\r\n                                    <div className=\"prp-title\">System Teams</div>\r\n                                    <div className=\"prp-count\">{SystemTeams}</div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={3} className=\"mt-4\">\r\n                                <i className=\"export-list icon-export\" onClick={e => this.exportReport()}></i>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <div className=\"prp-header\">Participant Details</div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={7} className=\"table-responsive common-table\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"pointer\">Rank</th>\r\n                                            <th className=\"pointer\">User Name</th>\r\n                                            <th className=\"pointer\">Pts</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {\r\n                                        (UserReportList.length > 0) ?\r\n                                            _.map(UserReportList, (item, idx) => {\r\n                                                return (\r\n                                                    <tbody key={idx}>\r\n                                                        <tr className={`cursor-pointer ${activeUser == item.lineup_master_contest_id ? 'activeUser' : ''}`} onClick={() => this.loadTeam(item.lineup_master_contest_id)}>\r\n                                                            <td>{item.game_rank}</td>\r\n                                                            <td className=\"contest-d-main\">\r\n                                                                {item.user_name}\r\n                                                                {\r\n                                                                    item.is_systemuser === '1' &&\r\n                                                                    <span className=\"cont-su-flag\">S</span>\r\n                                                                }\r\n                                                            </td>\r\n                                                            <td>{item.total_score}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                )\r\n                                            })\r\n                                            :\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan='22'>\r\n                                                        {!posting ?\r\n                                                            <div className=\"no-records\">\r\n                                                                {NC.NO_RECORDS}\r\n                                                                <br />\r\n                                                                <i>{NC.PRP_REPORT_MSG}</i>\r\n                                                            </div>\r\n                                                            :\r\n                                                            <Loader />\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                    }\r\n                                </Table>\r\n                                {\r\n                                    TotalUser > PERPAGE && (\r\n                                        <div className=\"custom-pagination lobby-paging\">\r\n                                            <Pagination\r\n                                                activePage={CURRENT_PAGE}\r\n                                                itemsCountPerPage={PERPAGE}\r\n                                                totalItemsCount={TotalUser}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={e => this.handlePageChange(e)}\r\n                                            />\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </Col>\r\n                            <Col md={5} className=\"table-responsive common-table\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"pointer\">Player Name</th>\r\n                                            <th></th>\r\n                                            <th className=\"pointer\">Pts</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {\r\n                                        (TeamList.length > 0) ?\r\n                                            _.map(TeamList, (lineup, idx) => {\r\n                                                return (\r\n                                                    <tbody key={idx}> \r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                <div>\r\n                                                                    {lineup.full_name}\r\n                                                                    <span className={`ply-status ${(lineup.is_playing == 1) ? 'playing' : (lineup.is_playing == 0) ? 'not-playing' : ''}`}></span>\r\n                                                                </div>\r\n                                                                <div className=\"prp-ply-detail\">\r\n                                                                    <span>{lineup.position}</span>\r\n                                                                    <span className=\"prp-sepr\"></span>\r\n                                                                    <span>{lineup.team_abbr}</span>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {\r\n                                                                    lineup.captain == 0 && ''\r\n                                                                }\r\n                                                                {\r\n                                                                    lineup.captain == 1 && \r\n                                                                    <div className=\"prp-c-vc\">C</div>\r\n                                                                }\r\n                                                                {\r\n                                                                    lineup.captain == 2 && \r\n                                                                    <div className=\"prp-c-vc\">V</div>\r\n                                                                }\r\n                                                            </td>\r\n                                                            <td>{lineup.score}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                )\r\n                            })\r\n                            :\r\n                                            <tbody>\r\n                                    <tr>\r\n                                        <td colSpan='22'>\r\n                                            {TeamList.length == 0 && !teamPosting ?\r\n                                                            <div className=\"no-records\">\r\n                                                                {NC.NO_RECORDS}\r\n                                                            </div>\r\n                                                :\r\n                                                <Loader />\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                }\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                </div>\r\n\r\n\r\n                </div>\r\n            </Fragment >\r\n        )\r\n    }\r\n}"],"sourceRoot":""}