{"version":3,"sources":["helper/WSCalling.jsx","views/GameCenter/Multigame/CreateCollection.jsx"],"names":["getAllSport","data","params","WSManager","Rest","NC","createLeague","editLeague","getLeagues","getNewLeagues","publishMatchPickem","getPickemParticipants","getCoinConfigApi","saveCoinConfig","createPlayer","editPlayer","getPlayers","savePlayerImage","multipartPost","createPickem","getPickem","getUnpubMatches","pickemResult","deletePickem","getTrendingPickems","getPickemCounts","getCoinsVsUsersGraph","getTopTeamGraph","getUsers_SU","createUsers_SU","getContestDetail_SU","getContestJoined_SU","getSystemUsersForContest_SU","joinSystemUsers_SU","deleteUsers_SU","updateUsers_SU","do_upload_SU","getSeasonDetails","getRoles","addRoles","rolesList","getRolesDetails","deleteRoles","updateRoles","remove_image_SU","get_all_avatars","change_avatar_status","createGroup","updateGroup","getGroup","uploadGroupIcon","deleteGroup","getAllNetworkContest","publishNetworkContest","getNetworkContestDetails","getNetworkContestParticipants","saveSports","updateSports","deletePTSports","enableSports","PT_CreateTournment","PT_getUpcomingFixtures","PT_getTournamentMasterData","PT_getAllTournament","PT_getTournamentFixtures","PT_getTournamentEditData","PT_addMatchesToTournament","PT_updateTournamentSeasonResult","PT_removeTournamentLogo","PT_updateTournamentResult","PT_removeTournamentBanner","getErpMasterData","getErpDashboardData","getErpTransactionList","saveErpTransaction","updateErpTransaction","deleteErpTransaction","getErpCategoryList","ErpSaveCategory","ErpUpdateCategory","PT_getTournamentParticipants","PT_getTournamentLeaderboard","PT_cancelTournament","PT_deleteTournamentPickem","getNGContestDetail_SU","getNGContestJoined_SU","getNGSystemUsersForContest_SU","joinNGSystemUsers_SU","getReferralRank","getAppUsageData","getAllSeasonWeek","getWeekSeason","DFST_getTournamentMasterData","DFST_removeTournamentLogo","DFST_removeTournamentBanner","DFST_getAllTournament","DFST_CreateTournment","DFST_getUpcomingFixtures","DFST_getTournamentFixtures","DFST_getTournamentParticipants","DFST_getTournamentSeasonParticipants","DFST_getTournamentEditData","DFST_updateTournament","DFST_getTournamentLeaderboard","DFST_getSeasonLeaderboard","DFST_cancelTournament","DFST_deleteTournamentMatch","getSmsTemplate","updateSmsTemplate","updateNewMasterScoringPoints","changeScrWinStatus","getScratchCardList","deleteScratchCard","xpGetLevelList","xpGetBadgeList","xpAddRewards","xpDeleteLevel","LB_geTMasterData","LB_getLeaderboardList","LB_toggleLeaderboardById","LB_leaderboardByDetails","LB_leaderboardUserList","LB_getLiveUpcomingLeagues","xpUpdateLevel","xpDeleteReward","xpUpdateReward","xpGetActivitiesList","xpDelActivity","xpGetActivityMastList","xpAddActivity","xpUpdateActivity","xpActivitiesLeaderboard","addScratchCard","updateScratchCard","joinMultiSystemUsers_SU","Createtemplate","props","handleSelect","eleObj","dropName","contestTemplate","_","clone","state","value","legId","GetFixtures","WeeklyLeagues","includes","setState","WeekStatus","weekCheck","MatchList","GetSportLeagueList","posting","selected_sport","then","responseJson","response_code","tempArr","_isUndefined","result","map","lObj","lKey","push","league_id","label","league_abbr","leagueList","soccer_weekly_leagues","leagueId","d","moment","Date","getUtcToLocal","season_scheduled_date","season_game_uid","home","away","format","fixtureList","selectedFixture","handleFieldVal","e","tindex","element_id","removeErrorClass","target","name","cloneDeep","CreateCollection","selectedWeek","selectWeekFixture","selectWeekDate","notify","show","collection_name","length","season_schedule_dates","i","j","validateFormFields","message","history","pathname","toggle1","isShowBonusToolTip1","toggle2","isShowBonusToolTip2","toggleWeek","WeekTTOpen","handleWeekCheck","GetWeek","handleWeekChange","GetSeasonWeek","tempWeek","_isEmpty","item","ws","week_start","we","week_end","week","WeekList","catch","error","fx_ids","fx_date","toggle","bind","selectedLeague","LS","get","isShowBonusToolTip","multiSelectClassName","this","Select_Props","is_disabled","is_searchable","is_clearable","menu_is_open","class_name","sel_options","place_holder","selected_value","modalCallback","className","id","xs","lg","md","src","Images","INFO","placement","isOpen","placeholder","options","onChange","minLength","maxLength","type","disabled","overrideStrings","selectSomeItems","selected","onSelectedChanged","parseInt","checked","SelectProps","isEmpty","_Map","index","key","home_flag","away_flag","getUtcToLocalFormat","scheduled_date_time","onClick","Component"],"mappings":"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","file":"static/js/183.702a9e7e.chunk.js","sourcesContent":["import WSManager from './WSManager';\r\nimport * as NC from './NetworkingConstants';\r\n\r\n/*Pickem */\r\nexport function getAllSport(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_ALL_SPORTS, params);\r\n}\r\n\r\n/*Pickem */\r\nexport function createLeague(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.CREATE_LEAGUE, params);\r\n}\r\nexport function editLeague(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.EDIT_LEAGUE, params);\r\n}\r\n\r\nexport function getLeagues(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_LEAGUES, params);\r\n}\r\n\r\nexport function getNewLeagues(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_LEAGUES_NEW, params);\r\n}\r\n\r\nexport function publishMatchPickem(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PUBLISH_MATCH_PICKEM, params);\r\n}\r\n\r\nexport function getPickemParticipants(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_PICKEM_PARTICIPANTS, params);\r\n}\r\n\r\nexport function getCoinConfigApi(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_COIN_CONFIG, params);\r\n}\r\n\r\nexport function saveCoinConfig(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.SAVE_COIN_CONFIG, params);\r\n}\r\n\r\nexport function createPlayer(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.CREATE_TEAM_STATS, params);\r\n}\r\n\r\nexport function editPlayer(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.EDIT_TEAM, params);\r\n}\r\n\r\nexport function getPlayers(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_TEAMS, params);\r\n}\r\n\r\nexport function savePlayerImage(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.multipartPost(NC.baseURL + NC.DO_UPLOAD_FLAG, params);\r\n}\r\n\r\nexport function createPickem(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.CREATE_PICKEM, params);\r\n}\r\n\r\nexport function getPickem(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_ALL_PICKEM, params);\r\n}\r\n\r\nexport function getUnpubMatches(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_UNPUBLISHED_MATCHES, params);\r\n}\r\n\r\nexport function pickemResult(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.UPDATE_PICKEM_RESULT, params);\r\n}\r\n\r\nexport function deletePickem(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DELETE_PICKEM, params);\r\n}\r\n\r\nexport function getTrendingPickems(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_TRENDING_PICKEMS, params);\r\n}\r\n\r\nexport function getPickemCounts(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_PICKEM_COUNTS, params);\r\n}\r\n\r\nexport function getCoinsVsUsersGraph(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PEM_GET_COINS_VS_USERS_GRAPH, params);\r\n}\r\n\r\nexport function getTopTeamGraph(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PEM_GET_TOP_TEAM_GRAPH, params);\r\n}\r\n\r\nexport function getUsers_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_USERS, params);\r\n}\r\n\r\nexport function createUsers_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.CREATE_USER, params);\r\n}\r\n\r\nexport function getContestDetail_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_CONTEST_DETAIL, params);\r\n}\r\n\r\nexport function getContestJoined_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_CONTEST_JOINED_SYSTEM_USERS, params);\r\n}\r\n\r\nexport function getSystemUsersForContest_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_SYSTEM_USERS_FOR_CONTEST, params);\r\n}\r\n\r\nexport function joinSystemUsers_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.JOIN_SYSTEM_USERS, params);\r\n}\r\n\r\nexport function deleteUsers_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DELETE_USER, params);\r\n}\r\n\r\nexport function updateUsers_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.UPDATE_USER, params);\r\n}\r\n\r\nexport function do_upload_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.multipartPost(NC.baseURL + NC.SU_DO_UPLOAD, params);\r\n}\r\n\r\nexport function getSeasonDetails(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_SEASON_DETAILS, params);\r\n}\r\n\r\n\r\n//Admin roles\r\nexport function getRoles(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_ADMIN_ROLES, params);\r\n}\r\n\r\nexport function addRoles(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ADD_ROLES, params);\r\n}\r\n\r\nexport function rolesList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ROLES_LIST, params);\r\n}\r\n\r\nexport function getRolesDetails(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_ROLES_DETAIL, params);\r\n}\r\n\r\nexport function deleteRoles(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DELETE_ROLES, params);\r\n}\r\n\r\nexport function updateRoles(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.UPDATE_ROLES, params);\r\n}\r\n\r\nexport function remove_image_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.SU_REMOVE_PROFILE_IMAGE, params);\r\n}\r\n// Start New Communication Dashboard\r\nexport function getTempList_CD(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_SEGEMENTATION_TEMPLATE_LIST, params);\r\n}\r\n// End New Communication Dashboard\r\n\r\nexport function get_all_avatars(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_ALL_AVATARS, params);\r\n}\r\n\r\nexport function change_avatar_status(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.CHANGE_AVATAR_STATUS, params);\r\n}\r\n\r\nexport function avatar_do_upload(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.AVATAR_DO_UPLOAD, params);\r\n}\r\n\r\nexport function submit_avatars(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.SUBMIT_AVATARS, params);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Start code for Add contest category\r\n\r\nexport function createGroup(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.CREATE_GROUP, params);\r\n}\r\n\r\nexport function updateGroup(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.UPDATE_GROUP, params);\r\n}\r\n\r\nexport function getGroup(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_GROUP, params);\r\n}\r\n\r\nexport function uploadGroupIcon(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.multipartPost(NC.baseURL + NC.UPLOAD_GROUP_ICON, params);\r\n}\r\n\r\nexport function removeGroupIcon(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.REMOVE_GROUP_ICON, params);\r\n}\r\n\r\nexport function deleteGroup(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DELETE_GROUP, params);\r\n}\r\n//End code for Add contest category\r\n\r\nexport function getAllNetworkContest(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_ALL_NETWORK_CONTEST, params);\r\n}\r\n\r\nexport function publishNetworkContest(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PUBLISH_NETWORK_CONTEST, params);\r\n}\r\n\r\nexport function getNetworkContestDetails(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_NETWORK_CONTEST_DETAILS, params);\r\n}\r\n\r\nexport function getGameLineupDetail(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_GAME_LINEUP_DETAIL, params);\r\n}\r\n\r\nexport function getNetworkContestParticipants(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_NETWORK_CONTEST_PARTICIPANTS, params);\r\n}\r\n\r\n//Pickem Tournament\r\nexport function saveSports(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_SAVE_SPORTS, params);\r\n}\r\n\r\nexport function updateSports(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_UPDATE_SPORTS, params);\r\n}\r\n\r\nexport function deletePTSports(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_UPDATE_SPORTS, params);\r\n}\r\n\r\nexport function enableSports(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_ENABLE_SPORTS, params);\r\n}\r\n\r\nexport function PT_CreateTournment(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_CREATE_TOURNAMENT, params);\r\n}\r\n\r\nexport function PT_getUpcomingFixtures(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_GET_UPCOMING_FIXTURES, params);\r\n}\r\n\r\nexport function PT_getTournamentMasterData(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_GET_TOURNAMENT_MASTER_DATA, params);\r\n}\r\n\r\nexport function PT_getAllTournament(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_GET_ALL_TOURNAMENT, params);\r\n}\r\n\r\nexport function PT_getTournamentFixtures(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_GET_TOURNAMENT_FIXTURES, params);\r\n}\r\n\r\nexport function PT_getTournamentEditData(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_GET_TOURNAMENT_EDIT_DATA, params);\r\n}\r\n\r\nexport function PT_addMatchesToTournament(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_ADD_MATCHES_TO_TOURNAMENT, params);\r\n}\r\n\r\nexport function PT_deletePickem(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_DELETE_PICKEM, params);\r\n}\r\n\r\nexport function PT_updateTournamentSeasonResult(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_UPDATE_TOURNAMENT_SEASON_RESULT, params);\r\n}\r\n\r\nexport function PT_removeTournamentLogo(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_REMOVE_TOURNAMENT_LOGO, params);\r\n}\r\n\r\nexport function PT_updateTournamentResult(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_UPDATE_TOURNAMENT_RESULT, params);\r\n}\r\n\r\nexport function PT_removeTournamentBanner(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_REMOVE_TOURNAMENT_BANNER, params);\r\n}\r\n//start ERP finance\r\nexport function getErpMasterData(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ERP_GET_MASTER_DATA, params);\r\n}\r\n\r\nexport function getErpDashboardData(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ERP_GET_DASHBOARD_DATA, params);\r\n}\r\n\r\nexport function getErpTransactionList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ERP_GET_TRANSACTION_LIST, params);\r\n}\r\n\r\nexport function saveErpTransaction(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ERP_SAVE_TRANSACTION, params);\r\n}\r\n\r\nexport function updateErpTransaction(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ERP_UPDATE_TRANSACTION, params);\r\n}\r\n\r\nexport function deleteErpTransaction(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ERP_DELETE_TRANSACTION, params);\r\n}\r\n\r\nexport function getErpCategoryList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ERP_GET_CATEGORY_LIST, params);\r\n}\r\n\r\nexport function ErpSaveCategory(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ERP_SAVE_CATEGORY, params);\r\n}\r\n\r\nexport function ErpUpdateCategory(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ERP_UPDATE_CATEGORY, params);\r\n}\r\n\r\n\r\nexport function PT_getTournamentParticipants(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_GET_TOURNAMENT_PARTICIPANTS, params);\r\n}\r\n\r\nexport function PT_getTournamentLeaderboard(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_GET_TOURNAMENT_LEADERBOARD, params);\r\n}\r\n\r\nexport function PT_cancelTournament(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_CANCEL_TOURNAMENT, params);\r\n}\r\n\r\nexport function PT_deleteTournamentPickem(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.PT_DELETE_TOURNAMENT_PICKEM, params);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Netwok game system user\r\nexport function getNGContestDetail_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.NG_GET_CONTEST_DETAIL, params);\r\n}\r\n\r\nexport function getNGContestJoined_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.NG_GET_CONTEST_JOINED_SYSTEM_USERS, params);\r\n}\r\n\r\nexport function getNGSystemUsersForContest_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.NG_GET_SYSTEM_USERS_FOR_CONTEST, params);\r\n}\r\n\r\nexport function joinNGSystemUsers_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.NG_JOIN_SYSTEM_USERS, params);\r\n}\r\n//Leaderboards\r\nexport function getReferralRank(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_REFERRAL_RANK, params);\r\n}\r\n\r\nexport function getAppUsageData(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_APP_USAGE_DATA, params);\r\n}\r\n\r\nexport function getAllSeasonWeek(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_ALL_SEASON_WEEKS, params);\r\n}\r\n\r\nexport function getWeekSeason(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_WEEK_SEASONS, params);\r\n}\r\n\r\n//Dfs Tournament\r\nexport function DFST_getTournamentMasterData(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_GET_TOURNAMENT_MASTER_DATA, params);\r\n}\r\n\r\nexport function DFST_removeTournamentLogo(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_REMOVE_TOURNAMENT_LOGO, params);\r\n}\r\n\r\nexport function DFST_removeTournamentBanner(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_REMOVE_TOURNAMENT_BANNER, params);\r\n}\r\n\r\nexport function DFST_getAllTournament(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_GET_ALL_TOURNAMENT, params);\r\n}\r\n\r\nexport function DFST_CreateTournment(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_CREATE_TOURNAMENT, params);\r\n}\r\n\r\nexport function DFST_getUpcomingFixtures(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_GET_UPCOMING_FIXTURES, params);\r\n}\r\n\r\nexport function DFST_getTournamentFixtures(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_GET_TOURNAMENT_FIXTURES, params);\r\n}\r\n\r\nexport function DFST_getTournamentParticipants(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_GET_TOURNAMENT_PARTICIPANTS, params);\r\n}\r\n\r\nexport function DFST_getTournamentSeasonParticipants(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_GET_TOURNAMENT_SEASON_PARTICIPANTS, params);\r\n}\r\n\r\nexport function DFST_getTournamentEditData(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_GET_TOURNAMENT_EDIT_DATA, params);\r\n}\r\n\r\nexport function DFST_updateTournament(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_UPDATE_TOURNAMENT, params);\r\n}\r\n\r\nexport function DFST_getTournamentLeaderboard(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_GET_TOURNAMENT_LEADERBOARD, params);\r\n}\r\n\r\nexport function DFST_getSeasonLeaderboard(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_GET_TOURNAMENT_SEASON_LEADERBOARD, params);\r\n}\r\n\r\nexport function DFST_cancelTournament(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_CANCEL_TOURNAMENT, params);\r\n}\r\n\r\nexport function DFST_deleteTournamentMatch(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DFST_DELETE_TOURNAMENT_FIXTURE, params);\r\n}\r\n\r\nexport function getSmsTemplate(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_SMS_TEMPLATE, params);\r\n}\r\n\r\nexport function updateSmsTemplate(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.UPDATE_SMS_TEMPLATE, params);\r\n    }\r\n\r\nexport function updateNewMasterScoringPoints(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.UPDATE_NEW_MASTER_SCORING_POINTS, params);\r\n}\r\n\r\nexport function changeScrWinStatus(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.CHANGE_SCRATCH_WIN_STATUS, params);\r\n}\r\n\r\nexport function getScratchCardList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.GET_SCRATCH_CARD_LIST, params);\r\n}\r\n\r\nexport function deleteScratchCard(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.DELETE_SCRATCH_CARD, params);\r\n}\r\n\r\n//XP Module\r\nexport function xpGetLevelList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_GET_LEVEL_LIST, params);\r\n}\r\n\r\nexport function xpGetBadgeList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_GET_BADGE_MASTER_LIST, params);\r\n}\r\n\r\nexport function xpAddRewards(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_ADD_REWARD, params);\r\n}\r\n\r\nexport function xpDeleteLevel(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_DELETE_LEVEL, params);\r\n}\r\nexport function LB_geTMasterData(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.LB_GET_MASTER_DATA, params);\r\n}\r\n\r\nexport function LB_geSportLeague(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.LB_GET_SPORT_LEAGUES, params);\r\n}\r\n\r\nexport function LB_getLeaderboardList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.LB_GET_LEADERBOARD_LIST, params);\r\n}\r\n\r\nexport function LB_toggleLeaderboardById(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.LB_TOGGLE_LEADERBOARD_BY_ID, params);\r\n}\r\nexport function LB_leaderboardByDetails(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.LB_TOGGLE_LEADERBOARD_DETAILS, params);\r\n}\r\nexport function LB_leaderboardUserList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.LB_TOGGLE_LEADERBOARD_USER_LIST, params);\r\n}\r\nexport function LB_getLiveUpcomingLeagues(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.LB_GET_LIVE_UPCOMING_LEAGUES, params);\r\n}\r\nexport function LB_getPrizeDetails(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.LB_GET_PRIZE_DETAIL, params);\r\n}\r\n\r\n\r\n\r\n\r\nexport function xpUpdateLevel(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_UPDATE_LEVELS, params);\r\n}\r\n\r\nexport function xpDeleteReward(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_DELETE_REWARD, params);\r\n}\r\n\r\nexport function xpUpdateReward(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_UPDATE_REWARD, params);\r\n}\r\n\r\nexport function xpGetActivitiesList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_GET_ACTIVITIES_LIST, params);\r\n}\r\n\r\nexport function xpDelActivity(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_DELETE_ACTIVITY, params);\r\n}\r\n\r\nexport function xpGetActivityMastList(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_GET_ACTIVITIES_MASTER_LIST, params);\r\n}\r\n\r\nexport function xpAddActivity(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_ADD_ACTIVITY, params);\r\n}\r\n\r\nexport function xpUpdateActivity(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_UPDATE_ACTIVITY, params);\r\n}\r\n\r\nexport function xpLevelLeaderboard(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_LEVEL_LEADERBOARD, params);\r\n}\r\n\r\nexport function xpActivitiesLeaderboard(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.XP_ACTIVITIES_LEADERBOARD, params);\r\n}\r\n\r\nexport function addScratchCard(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.ADD_SCRATCH_CARD, params);\r\n}\r\n\r\nexport function updateScratchCard(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.UPDATE_SCRATCH_CARD, params);\r\n}\r\n\r\nexport function joinMultiSystemUsers_SU(data) {\r\n    let params = data ? data : {}\r\n    return WSManager.Rest(NC.baseURL + NC.JOIN_MULTIPLE_SYSTEM_USERS, params);\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Tooltip } from 'reactstrap';\r\nimport _ from 'lodash';\r\nimport * as NC from \"../../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../../helper/WSManager\";\r\nimport moment from 'moment';\r\nimport LS from 'local-storage';\r\nimport MultiSelect from \"@khanacademy/react-multi-select\";\r\nimport Images from '../../../components/images';\r\nimport { notify } from 'react-notify-toast';\r\nimport { getAllSeasonWeek, getWeekSeason } from '../../../helper/WSCalling';\r\nimport SelectDropdown from \"../../../components/SelectDropdown\";\r\nimport { _isUndefined, _isEmpty, _Map } from '../../../helper/HelperFunction';\r\nclass Createtemplate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.toggle1 = this.toggle1.bind(this);\r\n    this.toggle2 = this.toggle2.bind(this);\r\n    this.state = {\r\n      selectedLeague: [],\r\n      selectedFixture: [],\r\n      leagueList: [],\r\n      fixtureList: [],\r\n      selected_sport: (LS.get('selected_sport')) ? LS.get('selected_sport') : NC.sportsId,\r\n      contestTemplate: { league_id: 0, collection_name: '' },\r\n      isShowBonusToolTip: false,\r\n      isShowBonusToolTip1: false,\r\n      isShowBonusToolTip2: false,\r\n      multiSelectClassName: \"multi-select\",\r\n      selectedWeek: '',\r\n      WeekList: [],\r\n      MatchList: [],\r\n      selectWeekFixture: [],\r\n      selectWeekDate: [],\r\n      WeeklyLeagues: [],\r\n      WeekTTOpen :  false,\r\n    };\r\n  }\r\n\r\n  handleSelect = (eleObj, dropName) => {\r\n    if (eleObj != null) {\r\n      let contestTemplate = _.clone(this.state.contestTemplate);\r\n      contestTemplate[dropName] = eleObj.value;\r\n      let legId = false\r\n      if (dropName == \"league_id\") {\r\n        this.GetFixtures(eleObj.value);\r\n        legId = this.state.WeeklyLeagues.includes(eleObj.value);\r\n      }\r\n      this.setState({\r\n        contestTemplate: contestTemplate,\r\n        WeekStatus: legId,\r\n        weekCheck : false,\r\n        MatchList : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.GetSportLeagueList();\r\n  }\r\n\r\n  GetSportLeagueList = () => {\r\n    this.setState({ posting: true })\r\n    let params = {\r\n      \"sports_id\": this.state.selected_sport,\r\n      'for_collection': \"1\"\r\n    }\r\n    WSManager.Rest(NC.baseURL + NC.GET_ALL_LEAGUE_LIST, params).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n        responseJson = responseJson.data;\r\n\r\n        let tempArr = [];\r\n        if (!_isUndefined(responseJson.result)) {\r\n          responseJson.result.map(function (lObj, lKey) {\r\n            tempArr.push({ value: lObj.league_id, label: lObj.league_abbr });\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          leagueList: tempArr,\r\n          WeeklyLeagues: !_isUndefined(responseJson.soccer_weekly_leagues) ? responseJson.soccer_weekly_leagues : [],\r\n        })\r\n      }\r\n      this.setState({ posting: false })\r\n    })\r\n  }\r\n\r\n  GetFixtures = (leagueId) => {\r\n    this.setState({ posting: true })\r\n    let params = {\r\n      \"sports_id\": this.state.selected_sport,\r\n      'league_id': leagueId\r\n    }\r\n    WSManager.Rest(NC.baseURL + NC.GET_ALL_FIXTURE_LIST, params).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n        responseJson = responseJson.data.result;\r\n        let tempArr = [];\r\n        responseJson.map(function (lObj, lKey) {\r\n          let d = moment(new Date(WSManager.getUtcToLocal(lObj.season_scheduled_date)));\r\n          tempArr.push({ value: lObj.season_game_uid, label: lObj.home + ' VS ' + lObj.away + ' (' + d.format(\"YYYY-DD-MM h:mm A\") + ')', season_scheduled_date: lObj.season_scheduled_date });\r\n        });\r\n        this.setState({ fixtureList: tempArr, selectedFixture: [] })\r\n      }\r\n      this.setState({ posting: false })\r\n    })\r\n  }\r\n\r\n  handleFieldVal = (e, tindex, element_id) => {\r\n    if (e) {\r\n      WSManager.removeErrorClass(\"contest_template_form\", element_id);\r\n      let name = '';\r\n      let value = '';\r\n      name = e.target.name;\r\n      value = e.target.value;\r\n      let contestTemplate = _.cloneDeep(this.state.contestTemplate)\r\n      contestTemplate[tindex] = value\r\n      this.setState({\r\n        contestTemplate: contestTemplate\r\n      })\r\n    }\r\n  }\r\n\r\n  CreateCollection = () => {\r\n    let { selectedWeek, selectWeekFixture, selectWeekDate } = this.state\r\n    let contestTemplate = _.cloneDeep(this.state.contestTemplate);\r\n    if (this.state.contestTemplate.league_id == 0) {\r\n      notify.show(\"Select atleast one league.\", \"error\", 3000);\r\n      return false\r\n    }\r\n    if (this.state.contestTemplate.collection_name == \"\") {\r\n      notify.show(\"Please enter match club name.\", \"error\", 3000);\r\n      return false\r\n    } else if (this.state.contestTemplate.collection_name.length < 3) {\r\n      notify.show(\"Please enter atleast 3 character.\", \"error\", 3000);\r\n      return false\r\n    }\r\n\r\n    var season_schedule_dates = [];\r\n    if (selectedWeek) {\r\n      contestTemplate['fixture_ids'] = selectWeekFixture;\r\n      season_schedule_dates = selectWeekDate\r\n    } else {\r\n      contestTemplate['fixture_ids'] = this.state.selectedFixture;\r\n      for (var i = 0; i < this.state.fixtureList.length; i++) {\r\n        for (var j = 0; j < this.state.selectedFixture.length; j++) {\r\n          if (this.state.selectedFixture[j] == this.state.fixtureList[i].value) {\r\n            season_schedule_dates.push(this.state.fixtureList[i].season_scheduled_date)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (contestTemplate['fixture_ids'] <= 0) {\r\n      notify.show(\"Select atleast one fixture.\", \"error\", 3000);\r\n      return false\r\n    }\r\n\r\n    contestTemplate['season_scheduled_date'] = season_schedule_dates;\r\n    contestTemplate['sports_id'] = this.state.selected_sport;\r\n    if (WSManager.validateFormFields(\"contest_template_form\")) {\r\n      this.setState({ posting: true })\r\n      let params = contestTemplate;\r\n\r\n      WSManager.Rest(NC.baseURL + NC.CREATE_COLLECTION, params).then((responseJson) => {\r\n        if (responseJson.response_code === NC.successCode) {\r\n          notify.show(responseJson.message, \"success\", 5000);\r\n          this.props.history.push({ pathname: '/contest/createtemplatecollectioncontest/' + this.state.contestTemplate.league_id + '/' + responseJson.data })\r\n        }\r\n        this.setState({ posting: false })\r\n      })\r\n\r\n    } else {\r\n      notify.show(\"Please fill required fields.\", \"error\", 3000);\r\n      return false;\r\n    }\r\n\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isShowBonusToolTip: !this.state.isShowBonusToolTip\r\n    });\r\n  }\r\n\r\n  toggle1 = () => {\r\n    this.setState({\r\n      isShowBonusToolTip1: !this.state.isShowBonusToolTip1\r\n    });\r\n  }\r\n\r\n  toggle2 = () => {\r\n    this.setState({\r\n      isShowBonusToolTip2: !this.state.isShowBonusToolTip2\r\n    });\r\n  }\r\n  toggleWeek = () => {\r\n    this.setState({\r\n      WeekTTOpen: !this.state.WeekTTOpen\r\n    });\r\n  }\r\n\r\n  handleWeekCheck = (e) => {\r\n    if (e) {\r\n      this.setState({\r\n        weekCheck: !this.state.weekCheck,\r\n        selectedFixture: [],\r\n        selectedWeek: '',\r\n      }, () => {\r\n        this.GetWeek()\r\n      })\r\n    }\r\n  }\r\n\r\n  handleWeekChange = (value) => {\r\n    this.setState({ selectedWeek: value.value }, () => {\r\n      this.GetSeasonWeek()\r\n    })\r\n  }\r\n\r\n  GetWeek = () => {\r\n    let { contestTemplate, selected_sport } = this.state\r\n    let params = {\r\n      \"sports_id\": selected_sport,\r\n      \"league_id\": contestTemplate.league_id\r\n    }\r\n    getAllSeasonWeek(params).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n        let tempWeek = [];\r\n        if (!_isUndefined(responseJson.data) && !_isEmpty(responseJson.data)) {\r\n          responseJson.data.map(function (item) {\r\n            let ws = moment(new Date(item.week_start)).format('DD-MM-YYYY')\r\n            let we = moment(new Date(item.week_end)).format('DD-MM-YYYY')\r\n            tempWeek.push({\r\n              value: item.week,\r\n              label: 'Week ' + item.week + ' (' + ws + '-' + we + ')'\r\n            });\r\n          })\r\n          this.setState({ WeekList: tempWeek })\r\n        }\r\n\r\n      }\r\n    }).catch(error => {\r\n      notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n    })\r\n  }\r\n\r\n  GetSeasonWeek = () => {\r\n    let { contestTemplate, selected_sport, selectedWeek } = this.state\r\n    let params = {\r\n      \"sports_id\": selected_sport,\r\n      \"league_id\": contestTemplate.league_id,\r\n      \"week\": selectedWeek,\r\n    }\r\n\r\n    getWeekSeason(params).then((responseJson) => {\r\n      if (responseJson.response_code === NC.successCode) {\r\n        let fx_ids = []\r\n        let fx_date = []\r\n        if (!_isEmpty(responseJson.data.result) && !_isUndefined(responseJson.data.result)) {\r\n          fx_ids = _.map(responseJson.data.result, 'season_game_uid')\r\n          fx_date = _.map(responseJson.data.result, 'season_scheduled_date')\r\n        }\r\n\r\n        this.setState({\r\n          MatchList: responseJson.data.result ? responseJson.data.result : [],\r\n          selectWeekFixture: fx_ids,\r\n          selectWeekDate: fx_date,\r\n        })\r\n      }\r\n    }).catch(error => {\r\n      notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      leagueList,\r\n      fixtureList,\r\n      contestTemplate,\r\n      selectedFixture,\r\n      multiSelectClassName,\r\n      weekCheck,\r\n      selectedWeek,\r\n      selected_sport,\r\n      WeekList,\r\n      posting,\r\n      MatchList,\r\n      WeekStatus,\r\n      WeekTTOpen,\r\n    } = this.state\r\n\r\n    const Select_Props = {\r\n      is_disabled: false,\r\n      is_searchable: true,\r\n      is_clearable: false,\r\n      menu_is_open: false,\r\n      class_name: \"week-select\",\r\n      sel_options: WeekList,\r\n      place_holder: \"Select Week\",\r\n      selected_value: selectedWeek,\r\n      modalCallback: this.handleWeekChange\r\n    }\r\n\r\n    return (\r\n      <div className=\"animated fadeIn create-template create-mtl-game\">\r\n        <form id=\"contest_template_form\">\r\n          <Row className=\"mb-1\">\r\n            <Col xs=\"12\" lg=\"12\">\r\n              <Card className=\"recentcom\">\r\n                <CardHeader className=\"contestcreate\">\r\n                  <h5 className=\"DFScontest\">Create Match Club</h5>\r\n                </CardHeader>\r\n\r\n                <CardBody className=\"contestcard\">\r\n                  <Row>\r\n                    <Col md={4}>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"fixturevs\">Select League\r\n                        <span className=\"btn-information\"><img id=\"TooltipExample1\" className=\"infobtn\" src={Images.INFO} />\r\n                            <Tooltip placement=\"right\" isOpen={this.state.isShowBonusToolTip} target=\"TooltipExample1\" toggle={this.toggle}>\r\n                              Select League\r\n                            </Tooltip>\r\n                          </span>\r\n                        </label>\r\n                        <Select\r\n                          className=\"\"\r\n                          id=\"league_id\"\r\n                          name=\"league_id\"\r\n                          placeholder=\"Select League\"\r\n                          value={contestTemplate.league_id}\r\n                          options={leagueList}\r\n                          onChange={(e) => this.handleSelect(e, 'league_id')}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-3\">\r\n                    <Col md={4}>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"fixturevs\">Enter match club name\r\n                          <span className=\"btn-information\"><img id=\"TooltipExample2\" className=\"infobtn\" src={Images.INFO} />\r\n                            <Tooltip placement=\"right\" isOpen={this.state.isShowBonusToolTip1} target=\"TooltipExample2\" toggle={this.toggle1}>\r\n                              Enter match club name\r\n                            </Tooltip>\r\n                          </span>\r\n                        </label>\r\n                        <input minLength={30} maxLength={30} type=\"text\" className=\"contestname required\" id=\"collection_name\" name=\"collection_name\" onChange={(e) => this.handleFieldVal(e, 'collection_name', 'collection_name')} placeholder=\"Match club name\"></input>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-3\">\r\n                    <Col md={4}>\r\n                      <div className=\"form-group multiselect-wrapper\">\r\n                        <label className=\"fixturevs \">Select Fixtures\r\n                        <span className=\"btn-information\"><img id=\"TooltipExample3\" className=\"infobtn\" src={Images.INFO} />\r\n                            <Tooltip placement=\"right\" isOpen={this.state.isShowBonusToolTip2} target=\"TooltipExample3\" toggle={this.toggle2}>\r\n                              It does not show fixtures with pending salary review\r\n                            </Tooltip>\r\n                          </span>\r\n                        </label>\r\n                        <MultiSelect\r\n                          disabled={weekCheck}\r\n                          className={multiSelectClassName}\r\n                          id=\"selectedFixture\"\r\n                          name=\"selectedFixture\"\r\n                          placeholder=\"All Fixture(s)\"\r\n                          overrideStrings={{\r\n                            selectSomeItems: \"Select Fixture(s)\"\r\n                          }}\r\n                          options={fixtureList}\r\n                          selected={selectedFixture}\r\n                          onSelectedChanged={selectedFixture => this.setState({ selectedFixture })}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    parseInt(selected_sport) === 5 &&\r\n                    <Row className=\"mt-3\">\r\n                      <Col md={4}>\r\n                        <div className=\"common-cus-checkbox week-match-club\">                  \r\n                          {/* <label className=\"com-chekbox-container\"> */}\r\n                          <label className={`com-chekbox-container ${WeekStatus ? '' : 'check-disable'}`}>\r\n                            <span className=\"week-text\">\r\n                              Weekly match club                              \r\n                            </span>\r\n                            <input\r\n                              disabled={!WeekStatus}\r\n                              type=\"checkbox\"\r\n                              name='WeeklMmatch'\r\n                              id='WeeklyMatch'\r\n                              // defaultChecked={weekCheck}\r\n                              checked={weekCheck}\r\n                              onChange={(e) => this.handleWeekCheck(e)}\r\n                            />\r\n                            <span className=\"com-chekbox-checkmark\"></span>\r\n                          </label>\r\n                          <span className=\"btn-information\">\r\n                            <img id=\"WeekTT\" className=\"infobtn\" src={Images.INFO} />\r\n                            <Tooltip\r\n                              placement=\"right\"\r\n                              isOpen={WeekTTOpen}\r\n                              target=\"WeekTT\"\r\n                              toggle={this.toggleWeek}>Only available for English league, Spanish league , Champion league and Italian league.</Tooltip>\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  }\r\n                  {\r\n                    weekCheck &&\r\n                    <Row className=\"mt-3\">\r\n                      <Col md={4}>\r\n                        <SelectDropdown SelectProps={Select_Props} />\r\n                      </Col>\r\n                    </Row>\r\n                  }\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {\r\n            !_.isEmpty(selectedWeek) &&\r\n            <Row className=\"mb-20\">\r\n              <Col lg={12}>\r\n                {\r\n                  !_isEmpty(MatchList) &&\r\n                  _Map(MatchList, (item, index) => {\r\n                    return (\r\n                      <div className=\"common-fixture float-left\" key={index}>\r\n                        <div className=\"bg-card\">\r\n                          <div>\r\n                            <img className=\"com-fixture-flag float-left\" src={NC.S3 + NC.FLAG + item.home_flag}></img>\r\n                            <img className=\"com-fixture-flag float-right\" src={NC.S3 + NC.FLAG + item.away_flag}></img>\r\n                            <div className=\"com-fixture-container\">\r\n                              <div className=\"com-fixture-name\">{(item.home) ? item.home : 'TBA'} VS {(item.away) ? item.away : 'TBA'}</div>\r\n                              <div className=\"com-fixture-time\">\r\n                                {WSManager.getUtcToLocalFormat(item.scheduled_date_time, 'D-MMM-YYYY hh:mm A')}\r\n                              </div>\r\n                              <div className=\"com-fixture-title\">{item.league_abbr}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </Col>\r\n            </Row>\r\n          }\r\n          <Card className=\"\">\r\n            <CardBody className=\"\">\r\n              <Row>\r\n                <Col lg={12} className=\"\">\r\n                  <Button\r\n                    disabled={posting}\r\n                    onClick={() => { this.CreateCollection() }} className=' btn-secondary-outline'>Create match club</Button>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Createtemplate;"],"sourceRoot":""}