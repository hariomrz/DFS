{"version":3,"sources":["views/Cms/AppBanner.jsx"],"names":["AppBanner","props","handleNameChange","e","name","target","value","setState","match","validURL","this","validateForm","onChangeImage","event","fileName","URL","createObjectURL","files","file","data","FormData","append","WSManager","multipartPost","NC","then","responseJson","fileUplode","image_url","ImageName","file_name","catch","error","notify","show","resetFile","preventDefault","updateBannerStatus","idx","app_banner_id","status","ActionPosting","tempBannerList","state","AppBannersList","param","Rest","response_code","message","map","item","index","deleteToggle","setFalg","deleteIndex","deleteItem","prevState","DeleteModalOpen","deleteAppBanner","DeleteActionPosting","banner_title","title","banner_image","banner_link","link","_","remove","TotalBanner","PERPAGE","CURRENT_PAGE","NewBannerToggle","dropdownOpen","getAppBanner","items_perpage","total_items","current_page","sort_order","sort_field","result","total","flag","AddBannerPosting","isEmpty","is_preview","is_remove","uploadbtn","image_name","size_tip","NewBannerTogle","className","md","onClick","key","src","alt","disabled","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","handlePageChange","type","placeholder","createBanner","isOpen","toggle","color","Component"],"mappings":"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","file":"static/js/191.2b845535.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, Table, Input, Button, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport _ from 'lodash';\r\nimport Pagination from \"react-js-pagination\";\r\nexport default class AppBanner extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            TotalBanner: 0,\r\n            PERPAGE: 5,\r\n            CURRENT_PAGE: 1,\r\n            NewBannerToggle: false,\r\n            title: '',\r\n            link: '',\r\n            fileUplode: '',\r\n            fileName: '',\r\n            validURL: false,\r\n            dropdownOpen: false,\r\n            ActionPosting: false,\r\n            DeleteActionPosting: false,\r\n            DeleteModalOpen: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getAppBanner()\r\n    }\r\n\r\n    getAppBanner() {\r\n        const { PERPAGE, CURRENT_PAGE } = this.state\r\n        const param = {\r\n            items_perpage: PERPAGE,\r\n            total_items: 0,\r\n            current_page: CURRENT_PAGE,\r\n            sort_order: \"DESC\",\r\n            sort_field: \"AB.created_date\",\r\n            AppBannersList: []\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.GET_APP_BANNERS, param).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                this.setState({\r\n                    AppBannersList: responseJson.data.result,\r\n                    TotalBanner: responseJson.data.total\r\n                });\r\n            }\r\n        }).catch((error) => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 5000);\r\n        })\r\n    }\r\n\r\n    NewBannerTogle(flag) {\r\n        this.setState({ NewBannerToggle: flag })\r\n    }\r\n\r\n    handleNameChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value })\r\n        if (name == \"link\" && !value.match(/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/)) {\r\n            this.setState({\r\n                validURL: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                validURL: false\r\n            }, function () {\r\n                this.validateForm()\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeImage = (event) => {\r\n        this.setState({\r\n            fileName: URL.createObjectURL(event.target.files[0]),\r\n        }, function () {\r\n            this.validateForm()\r\n        });\r\n\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n        var data = new FormData();\r\n        data.append(\"userfile\", file);\r\n        WSManager.multipartPost(NC.baseURL + NC.APP_BANNER_UPLOAD, data)\r\n            .then(responseJson => {\r\n                this.setState({\r\n                    fileUplode: responseJson.data.image_url,\r\n                    ImageName: responseJson.data.file_name\r\n                });\r\n            }).catch(error => {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000);\r\n            });\r\n    }\r\n    resetFile = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            fileName: null,\r\n            fileUplode: null,\r\n        }, function () {\r\n            this.validateForm()\r\n        });\r\n    }\r\n\r\n    validateForm() {\r\n        const { title, link, fileName } = this.state\r\n        this.setState({ AddBannerPosting: false })\r\n        if ((!_.isEmpty(title)) && (!_.isEmpty(link) && !_.isEmpty(fileName))) {\r\n            this.setState({ AddBannerPosting: true })\r\n        }\r\n    }\r\n\r\n    createBanner() {\r\n        const { title, link, fileUplode, ImageName } = this.state\r\n        this.setState({ AddBannerPosting: false })\r\n        let param = {\r\n            banner_title: title,\r\n            banner_link: link,\r\n            banner_image: fileUplode,\r\n            is_preview: 1,\r\n            is_remove: 1,\r\n            uploadbtn: 0,\r\n            image_name: ImageName,\r\n            size_tip: \"\"\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.ADD_APP_BANNER, param).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                notify.show(responseJson.message, \"success\", 3000);\r\n                this.setState({\r\n                    link: null,\r\n                    title: null,\r\n                    fileUplode: '',\r\n                    fileName: '',\r\n                    AddBannerPosting: true\r\n                }, function () {\r\n                    this.NewBannerTogle(false)\r\n                    this.getAppBanner()\r\n                });\r\n            }\r\n        }).catch((error) => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000);\r\n        })\r\n    }\r\n    handlePageChange(current_page) {\r\n        this.setState({\r\n            CURRENT_PAGE: current_page\r\n        }, () => {\r\n            this.getAppBanner();\r\n        });\r\n    }\r\n    updateBannerStatus = (idx, app_banner_id, status) => {\r\n        this.setState({ ActionPosting: true })\r\n        let tempBannerList = this.state.AppBannersList\r\n        const param = {\r\n            status: status,\r\n            app_banner_id: app_banner_id\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.UPDATE_STATUS, param).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n                tempBannerList.map((item, index) => {\r\n                    tempBannerList[index].status = 0\r\n                    this.setState({ tempBannerList })\r\n                })\r\n                tempBannerList[idx].status = status\r\n                this.setState({\r\n                    AppBannersList: tempBannerList,\r\n                    ActionPosting: false\r\n                })\r\n            }\r\n        }).catch((error) => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 5000);\r\n        })\r\n    }\r\n\r\n    deleteToggle = (setFalg, idx, item, ) => {\r\n        if (setFalg) {\r\n            this.setState({\r\n                deleteIndex: idx,\r\n                deleteItem: item,\r\n            })\r\n        }\r\n        this.setState(prevState => ({\r\n            DeleteModalOpen: !prevState.DeleteModalOpen\r\n        }));\r\n    }\r\n\r\n    deleteAppBanner = () => {\r\n        const { deleteIndex, deleteItem, AppBannersList } = this.state\r\n        this.setState({ DeleteActionPosting: true })\r\n        const param = {\r\n            app_banner_id: deleteItem.app_banner_id,\r\n            banner_title: deleteItem.title,\r\n            banner_image: \"\",\r\n            banner_link: deleteItem.link,\r\n            status: \"0\",\r\n            image_url: \"\"\r\n        }\r\n\r\n        let tempBannerList = AppBannersList\r\n        WSManager.Rest(NC.baseURL + NC.DELETE_APP_BANNER, param).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                _.remove(tempBannerList, function (item, idx) {\r\n                    return idx == deleteIndex\r\n                })\r\n                this.deleteToggle(false, {}, {})\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n                this.setState({\r\n                    AppBannersList: tempBannerList,\r\n                    DeleteActionPosting: false\r\n                })\r\n            }\r\n        }).catch((error) => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 5000);\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { NewBannerToggle, AddBannerPosting, validURL, title, link, AppBannersList, CURRENT_PAGE, TotalBanner, PERPAGE, ActionPosting, DeleteActionPosting } = this.state\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    !NewBannerToggle &&\r\n                    <div className=\"mt-4 app-banner\">\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <h1 className=\"h1-cls\">App Banner</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"filters-box\">\r\n                            <Col md={12}>\r\n                                <div className=\"filters-area\">\r\n                                    <Button className=\"btn-secondary\" onClick={() => this.NewBannerTogle(true)}>New App Banner</Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"animated fadeIn\">\r\n                            <Col md={12} className=\"table-responsive common-table\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"left-th pl-4\">Title</th>\r\n                                            <th>Image</th>\r\n                                            <th>Link</th>\r\n                                            <th>Status</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {\r\n                                        _.map(AppBannersList, (item, idx) => {\r\n                                            return (\r\n                                                <tbody key={idx}>\r\n                                                    <tr>\r\n                                                        <td className=\"pl-4\">{item.banner_title}</td>\r\n                                                        <td>\r\n                                                            <figure className=\"app-banner-img\">\r\n                                                                <img src={item.image_url} className=\"img-cover\" alt=\"\" />\r\n                                                            </figure>\r\n                                                        </td>\r\n                                                        <td>{item.banner_link}</td>\r\n                                                        <td>\r\n                                                            {item.status == 1 ?\r\n                                                                <i className=\"icon-verified active\"></i>\r\n                                                                :\r\n                                                                <i className=\"icon-inactive\"></i>\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <UncontrolledDropdown>\r\n                                                                <DropdownToggle disabled={ActionPosting} className=\"icon-action\" />\r\n                                                                <DropdownMenu>\r\n                                                                    {item.status == 1\r\n                                                                        ?\r\n                                                                        <DropdownItem onClick={() => this.updateBannerStatus(idx, item.app_banner_id, 0)}>Inactive</DropdownItem>\r\n                                                                        :\r\n                                                                        <DropdownItem onClick={() => this.updateBannerStatus(idx, item.app_banner_id, 1)}>Active</DropdownItem>\r\n                                                                    }\r\n                                                                    <DropdownItem onClick={() => { this.deleteToggle(true, idx, item) }}>Delete</DropdownItem>\r\n                                                                </DropdownMenu>\r\n                                                            </UncontrolledDropdown>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                        {TotalBanner > PERPAGE &&\r\n                            <div className=\"custom-pagination userlistpage-paging float-right\">\r\n                                <Pagination\r\n                                    activePage={CURRENT_PAGE}\r\n                                    itemsCountPerPage={PERPAGE}\r\n                                    totalItemsCount={TotalBanner}\r\n                                    pageRangeDisplayed={5}\r\n                                    onChange={e => this.handlePageChange(e)}\r\n                                />\r\n                            </div>}\r\n                    </div>\r\n                }\r\n                {\r\n                    NewBannerToggle &&\r\n                    <div className=\"mt-4\">\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <h1 className=\"h1-cls\">New Banner</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"animated fadeIn new-banner\">\r\n                            <Col md={12} className=\"input-row\">\r\n                                <Row>\r\n                                    <Col md={3} className=\"b-input-label\">Title<span className=\"asterrisk\">*</span></Col>\r\n                                    <Col md={9}>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name='title'\r\n                                            placeholder=\"Title\"\r\n                                            onChange={this.handleNameChange}\r\n                                            value={title}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col md={12} className=\"input-row\">\r\n                                <Row>\r\n                                    <Col md={3} className=\"b-input-label\">Link<span className=\"asterrisk\">*</span></Col>\r\n                                    <Col md={9}>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name='link'\r\n                                            placeholder=\"Target Url\"\r\n                                            onChange={this.handleNameChange}\r\n                                            value={link}\r\n                                        />\r\n                                        {validURL &&\r\n                                            <span className=\"error-text\">Please upload valid Link</span>\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col md={12} className=\"input-row\">\r\n                                <Row>\r\n                                    <Col md={3} className=\"b-input-label\">Image<span className=\"asterrisk\">*</span></Col>\r\n                                    <Col md={9}>\r\n                                        <Input\r\n                                            type=\"file\"\r\n                                            name='banner_image'\r\n                                            onChange={this.onChangeImage}\r\n                                        />\r\n                                        {this.state.fileName && (\r\n                                            <div>\r\n                                                <Button className=\"btn-secondary mt-4 mb-3\" onClick={this.resetFile}>Remove</Button>\r\n                                                <img className=\"img-cover\" src={this.state.fileName} />\r\n                                            </div>\r\n                                        )}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col md={12} className=\"banner-action\">\r\n                                <Button disabled={!AddBannerPosting} className=\"btn-secondary mr-3\" onClick={() => this.createBanner()}>Save</Button>\r\n                                <Button className=\"btn-secondary-outline\" onClick={() => this.NewBannerTogle(false)}>Cancel</Button>\r\n                            </Col>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <Modal isOpen={this.state.DeleteModalOpen} toggle={this.deleteToggle}>\r\n                        <ModalHeader>Delete App Banner</ModalHeader>\r\n                        <ModalBody>Are you sure to delete this App banner data?</ModalBody>\r\n                        <ModalFooter>\r\n                            <Button disabled={DeleteActionPosting} color=\"secondary\" onClick={() => this.deleteAppBanner()}>Yes</Button>{' '}\r\n                            <Button color=\"primary\" onClick={this.deleteToggle}>No</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}