{"version":3,"sources":["components/CustomComponent.jsx","views/UserManagement/VerifyDocument/VerifyDocument.jsx","views/UserManagement/Wallet/Wallet.jsx","views/UserManagement/ChangeStatus/ChangeStatus.jsx","views/UserManagement/Manageuser/Manageuser.jsx"],"names":["MomentDateComponent","data","date","format","WSManager","getUtcToLocal","VerifyDocument","props","getUserBankData","setState","posting","params","user_unique_id","userDetail","user_id","Rest","NC","then","responseJson","response_code","bank_data","Verify","state","pan_verified","pan_rejected_reason","notify","show","message","_","isNull","getKeyValueInLocal","includes","HeaderNotification","reloadNotCount","VerifyBank","bank_verified","bank_rejected_reason","is_bank_verified","handleChange","e","name","target","value","LargeImgModalToggle","enlarge_img","EnlargeImg","ImgModalOpen","openLargeImgModal","className","isOpen","toggle","style","top","onMouseLeave","src","alt","editKycBankDtl","bank_document","first_name","last_name","bank_name","ac_number","ifsc_code","micr_code","BankEditImage","BankEditImageName","BankAccNumber","BankName","BankIfscCode","NameOnBank","editBankFlag","editKycPanDtl","pan_image","pan_no","dob","PanEditImage","PanEditImageName","PanCardNumber","NameOnPanCard","DateOfBirth","isUndefined","Date","editPanFlag","checkFormValidation","nDate","moment","isEmpty","match","length","PanKycPosting","checkBankFormValidation","BankKycPosting","handleDateFilter","dateType","handleInputChange","bankValidation","retVal","handleBankInputChange","onChangePanImage","event","URL","createObjectURL","files","file","FormData","append","multipartPost","Response","file_name","catch","error","onChangeBankImage","resetFile","resetBankFile","updatePanCardDtl","nameflag","updatePanDtl","CallUsrDtl","updateBankDtl","is_pan_verified","branch_name","AUTO_KYC_ALLOW","HF","getMasterData","auto_kyc_enable","auto_pan_attempted","auto_bank_attempted","Today","get18YearOldDate","handleOptionChange","bind","handleBankChange","this","PanName","NameOnBankDtl","md","address","onClick","onMouseEnter","Images","no_image","accept","type","id","onChange","DEF_ADDPHOTO","getIntVersion","WebkitBoxOrient","maxLength","width","maxDate","selected","showYearDropdown","showMonthDropdown","disabled","checked","placeholder","upi_id","closeACverifyModal","Component","Wallet","getUserDetail","console","log","phone_verfied","updateWallet","balance","transaction_amount_type","amount","transaction_type","Math","abs","walletData","userDetailData","update_method","modalCallback","user_balance_reason","modalIsOpen","userFullName","htmlFor","getCurrencyCode","parseInt","bonus_balance","winning_balance","ChangeStatus","makeInactive","reason","inactive_reason","status","closeStatusModal","StatusmodalIsOpen","user_full_name","method","rows","handleTextInput","options","label","TooltipItem","item","icon","placement","useState","tooltipOpen","setTooltipOpen","Manageuser","getUserList","tempFilter","filter","from_date","to_date","result","total","userslist","exportUser","StartDate","EndDate","tempFromDate","tempToDate","query_string","is_flag","pending_pan_approval","items_perpage","current_page","sort_order","sort_field","keyword","getToken","window","open","handleChangeUserStatus","closeWalletModal","WalletmodalIsOpen","AutoToolTipToggle","flag","isShowAutoToolTip","update_transaction_balance","reloadPanModalData","user","tempUdtl","reloadBankModalData","getFirstDateOfMonth","balanceModalIsOpen","ACverifymodalIsOpen","UserStatus","LoaderPosting","walletRoleAccess","handleChangeEnd","openStatusModal","openACverifyModal","openWalletModal","SearchCodeReq","debounce","url","location","search","urlParams","queryString","parse","pending","fullname","Wallet_props","handleSearch","placeholderText","dateFormat","minDate","searchable","clearable","class","handleSelect","handleClick","map","idx","key","href","user_name","city","history","push","phone_no","email_verified","email","title","makeActive","FLAG_ENABLE","colSpan","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange"],"mappings":"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","file":"static/js/125.ac51ec2d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport WSManager from '../helper/WSManager';\r\nexport function MomentDateComponent({ data }) {\r\n    let date = data.date;\r\n    let format = data.format;\r\n    return (date ? <Moment date={WSManager.getUtcToLocal(date)} format={format} /> : '')\r\n}","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, Input, Button, Modal, ModalBody } from 'reactstrap';\r\nimport Images from \"../../../components/images\";\r\nimport * as NC from \"../../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport HeaderNotification from '../../../components/HeaderNotification';\r\nimport _ from 'lodash';\r\nimport HF from '../../../helper/HelperFunction';\r\nimport Moment from 'react-moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport { MomentDateComponent } from \"../../../components/CustomComponent\";\r\n\r\nclass VerifyDocument extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let bank_data = {\r\n            first_name: '',\r\n            last_name: '',\r\n            bank_name: '',\r\n            ac_number: '',\r\n            ifsc_code: '',\r\n            micr_code: '',\r\n            branch_name: '',\r\n            ImgModalOpen: false,\r\n        }\r\n\r\n        this.state = {\r\n            pan_verified: (this.props.userDetail.pan_verified) ? '1' : this.props.userDetail.pan_verified,\r\n            is_pan_verified: (this.props.userDetail.pan_verified) ? this.props.userDetail.pan_verified : '',\r\n            bank_data: bank_data,\r\n            bank_verified: (this.props.userDetail.is_bank_verified || this.props.userDetail.is_bank_verified == null) ? '1' : this.props.userDetail.is_bank_verified,\r\n            pan_rejected_reason: (this.props.userDetail.pan_rejected_reason) ? this.props.userDetail.pan_rejected_reason : '',\r\n            bank_rejected_reason: (this.props.userDetail.bank_rejected_reason) ? this.props.userDetail.bank_rejected_reason : '',\r\n            // AUTO_KYC_ALLOW: !_.isNull(WSManager.getKeyValueInLocal('AUTO_KYC_ALLOW')) ? WSManager.getKeyValueInLocal('AUTO_KYC_ALLOW') : 0,\r\n            AUTO_KYC_ALLOW: (!_.isUndefined(HF.getMasterData().auto_kyc_enable) && HF.getMasterData().auto_kyc_enable == '1') ? 1 : 0,\r\n            auto_pan_attempted: this.props.userDetail.auto_pan_attempted,\r\n            auto_bank_attempted: this.props.userDetail.auto_bank_attempted,\r\n\r\n            // auto_pan_attempted: \"1\",\t\r\n            // auto_bank_attempted: \"1\",\r\n            editPanFlag: false,\r\n            DateOfBirth: '',\r\n            PanEditImage: null,\r\n            PanKycPosting: true,\r\n            editBankFlag: false,\r\n            BankEditImage: null,\r\n            BankEditImageName: '',\r\n            BankKycPosting: true,\r\n            Today: HF.get18YearOldDate()\r\n        }\r\n        this.handleOptionChange = this.handleOptionChange.bind(this)\r\n        this.handleBankChange = this.handleBankChange.bind(this)\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getUserBankData();\r\n    }\r\n    getUserBankData = () => {\r\n        this.setState({ posting: true })\r\n        let params = { user_unique_id: this.props.userDetail.user_id }\r\n        WSManager.Rest(NC.baseURL + NC.GET_USER_BANK_DATA, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                if (responseJson.data) {\r\n                    this.setState({ bank_data: responseJson.data })\r\n                }\r\n            }\r\n            this.setState({ posting: false })\r\n        });\r\n\r\n    }\r\n\r\n    handleOptionChange(e) {\r\n        this.setState({\r\n            pan_verified: e.target.value\r\n        });\r\n    }\r\n    handleBankChange(e) {\r\n        this.setState({\r\n            bank_verified: e.target.value\r\n        });\r\n    }\r\n\r\n    Verify = () => {\r\n        let { pan_verified, pan_rejected_reason } = this.state\r\n        let { userDetail } = this.props\r\n        this.setState({ posting: true })\r\n        let params = {\r\n            user_unique_id: userDetail.user_unique_id,\r\n            pan_verified: pan_verified,\r\n            pan_rejected_reason: pan_rejected_reason\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.VERIFY_USER_PANCARD, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                userDetail.pan_verified = pan_verified\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n            }\r\n            this.setState({ posting: false }, () => {\r\n                if (!_.isNull(WSManager.getKeyValueInLocal(\"module_access\"))) {\r\n                    if (WSManager.getKeyValueInLocal(\"module_access\").includes(\"dashboard\")) {\r\n                        HeaderNotification.reloadNotCount()\r\n                    }\r\n                }\r\n            })\r\n        });\r\n    }\r\n    VerifyBank = () => {\r\n        this.setState({ posting: true })\r\n        let { bank_verified, bank_rejected_reason } = this.state\r\n        let { userDetail } = this.props\r\n\r\n        let params = {\r\n            user_unique_id: userDetail.user_unique_id,\r\n            bank_verified: bank_verified,\r\n            bank_rejected_reason: bank_rejected_reason\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.VERIFY_BANK, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                userDetail.is_bank_verified = bank_verified\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n            }\r\n            this.setState({ posting: false }, () => {\r\n                if (!_.isNull(WSManager.getKeyValueInLocal(\"module_access\"))) {\r\n                    if (WSManager.getKeyValueInLocal(\"module_access\").includes(\"dashboard\")) {\r\n                        HeaderNotification.reloadNotCount()\r\n                    }\r\n                }\r\n            })\r\n        });\r\n    }\r\n    handleChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    LargeImgModalToggle = (enlarge_img) => {\r\n        this.setState({\r\n            EnlargeImg: enlarge_img,\r\n        })\r\n        this.setState({\r\n            ImgModalOpen: !this.state.ImgModalOpen\r\n        });\r\n    }\r\n    openLargeImgModal = () => {\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    className=\"modal-md large_img_modal\"\r\n                    isOpen={this.state.ImgModalOpen}\r\n                    toggle={this.LargeImgModalToggle}\r\n                    style={{ top: \"12%\" }}\r\n                >\r\n                    <ModalBody\r\n                        className=\"p-0\"\r\n                        onMouseLeave={() => this.LargeImgModalToggle('')}\r\n                    >\r\n                        <img className=\"img-cover\" src={this.state.EnlargeImg} alt=\"\" />\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    editKycBankDtl = () => {\r\n        let { bank_document } = this.props.userDetail\r\n\r\n        let { first_name, last_name, bank_name, ac_number, ifsc_code, micr_code } = this.state.bank_data;\r\n\r\n        this.setState({\r\n            // BankEditImage: (bank_document) ? NC.S3 + NC.PAN + bank_document : Images.no_image,\r\n            BankEditImage: (bank_document) ? NC.S3 + NC.PAN + bank_document : '',\r\n            BankEditImageName: bank_document,\r\n            BankAccNumber: ac_number,\r\n            BankName: bank_name,\r\n            BankIfscCode: ifsc_code,\r\n            NameOnBank: (first_name) ? first_name + ' ' + last_name : '',\r\n            editBankFlag: !this.state.editBankFlag,\r\n        })\r\n    }\r\n\r\n    editKycPanDtl = () => {\r\n        let { pan_image, pan_no, first_name, last_name, dob } = this.props.userDetail\r\n        this.setState({\r\n            // PanEditImage: (pan_image) ? NC.S3 + NC.PAN + pan_image : Images.no_image,\r\n            PanEditImage: (pan_image) ? NC.S3 + NC.PAN + pan_image : '',\r\n            PanEditImageName: pan_image,\r\n            PanCardNumber: pan_no,\r\n            NameOnPanCard: ((first_name) ? first_name : '--') + ' ' + (last_name ? last_name : ''),\r\n            DateOfBirth: (!_.isUndefined(dob) && !_.isNull(dob)) ? new Date(dob) : '',\r\n            editPanFlag: !this.state.editPanFlag,\r\n        })\r\n    }\r\n\r\n    checkFormValidation = () => {\r\n        let { PanCardNumber, NameOnPanCard, DateOfBirth, PanEditImageName } = this.state\r\n\r\n        let nDate = DateOfBirth ? moment(new Date(DateOfBirth)).format(\"YYYY-MM-DD\") : ''\r\n        if (\r\n            (!_.isEmpty(PanCardNumber) && PanCardNumber.match(/^([a-zA-Z]{5})(\\d{4})([a-zA-Z]{1})$/))\r\n            &&\r\n            (!_.isEmpty(NameOnPanCard) && this.state.NameOnPanCard.length > 3 && this.state.NameOnPanCard.length < 30)\r\n            &&\r\n            !_.isEmpty(PanEditImageName)\r\n            &&\r\n\r\n            !_.isEmpty(nDate)\r\n        ) {\r\n            this.setState({ PanKycPosting: false });\r\n        }else{\r\n            this.setState({ PanKycPosting: true });\r\n        }\r\n    }\r\n\r\n    checkBankFormValidation = () => {\r\n        let { BankAccNumber, NameOnBank, BankName, BankEditImageName, BankIfscCode } = this.state\r\n        if (\r\n            (!_.isEmpty(BankAccNumber) && (BankAccNumber.length > 8))\r\n            &&\r\n            (!_.isEmpty(NameOnBank) && (NameOnBank.length > 2))\r\n            &&\r\n            (!_.isEmpty(BankName) && (BankName.length > 3))\r\n            &&\r\n            (!_.isEmpty(BankIfscCode) && (BankIfscCode.length > 10) && BankIfscCode.match(/^[A-Z]{4}0[A-Z0-9]{6}$/))\r\n            &&\r\n            !_.isEmpty(BankEditImageName)\r\n        ) {\r\n            this.setState({ BankKycPosting: false });\r\n        } else {\r\n            this.setState({ BankKycPosting: true });\r\n        }\r\n    }\r\n\r\n    handleDateFilter = (date, dateType) => {\r\n\r\n        this.setState({ [dateType]: date }, () => {\r\n\r\n\r\n            this.checkFormValidation()\r\n        })\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        let { name, value } = e.target\r\n        this.setState({ [name]: value }, () => {\r\n            if (_.isEmpty(this.state.NameOnPanCard) || this.state.NameOnPanCard.length < 3 || this.state.NameOnPanCard.length > 30) {\r\n                notify.show(\"Name on pan card should be between 3 to 30\", \"error\", 3000);\r\n            }\r\n            else if (_.isEmpty(this.state.PanCardNumber) || !this.state.PanCardNumber.match(/^([a-zA-Z]{5})(\\d{4})([a-zA-Z]{1})$/)) {\r\n                notify.show(\"Please enter valid pan card number\", \"error\", 3000);\r\n            } else {\r\n                this.checkFormValidation()\r\n            }\r\n            this.checkFormValidation()\r\n        })\r\n    }\r\n\r\n    bankValidation = (name) => {\r\n        let retVal = true\r\n        if (name === 'NameOnBank' && (_.isEmpty(this.state.NameOnBank) || this.state.NameOnBank.length < 3)) {\r\n            notify.show(\"Name as per Bank should be between 3 to 30\", \"error\", 3000);\r\n            retVal = false\r\n        }\r\n        else if (name === 'BankName' && (_.isEmpty(this.state.BankName) || this.state.BankName.length < 4)) {\r\n\r\n            notify.show(\"Bank name should be in between 4 to 49\", \"error\", 3000);\r\n            retVal = false\r\n        }\r\n        else if (name === 'BankIfscCode' && (_.isEmpty(this.state.BankIfscCode) || this.state.BankIfscCode.length < 11) && !this.state.BankIfscCode.match(/^[A-Z]{4}0[A-Z0-9]{6}$/)) {\r\n            notify.show(\"IFSC code should be 11 lengths\", \"error\", 3000);\r\n            retVal = false\r\n        }\r\n        else if (name === 'BankAccNumber' && (_.isEmpty(this.state.BankAccNumber) || this.state.BankAccNumber.length < 9)) {\r\n            notify.show(\"Account Number should be in between 9 to 19\", \"error\", 3000);\r\n            retVal = false\r\n        }\r\n        return retVal\r\n    }\r\n\r\n    handleBankInputChange = (e) => {\r\n        let { name, value } = e.target\r\n        this.setState({ [name]: value }, () => {\r\n            this.bankValidation(name)\r\n\r\n            if (this.bankValidation())\r\n                this.checkBankFormValidation()\r\n        })\r\n    }\r\n\r\n    onChangePanImage = (event) => {\r\n        this.setState({\r\n            PanKycPosting: true,\r\n            PanEditImage: URL.createObjectURL(event.target.files[0]),\r\n        });\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n        var data = new FormData();\r\n        data.append(\"panfile\", file);\r\n        WSManager.multipartPost(NC.baseURL + NC.UPLOAD_PAN, data)\r\n            .then(Response => {\r\n                if (Response.response_code == NC.successCode) {\r\n                    this.setState({\r\n                        PanEditImageName: Response.data.file_name,\r\n                    }, () => {\r\n                        this.checkFormValidation()\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        PanEditImage: null\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000);\r\n            });\r\n    }\r\n\r\n    onChangeBankImage = (event) => {\r\n        this.setState({\r\n            BankKycPosting: true,\r\n            BankEditImage: URL.createObjectURL(event.target.files[0]),\r\n        });\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n        var data = new FormData();\r\n        data.append(\"bank_document\", file);\r\n        WSManager.multipartPost(NC.baseURL + NC.UPLOAD_BANK_DOCUMENT, data)\r\n            .then(Response => {\r\n                if (Response.response_code == NC.successCode) {\r\n                    this.setState({\r\n                        BankEditImageName: Response.data.file_name,\r\n                    }, () => {\r\n                        this.checkBankFormValidation()\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        BankEditImage: null\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000);\r\n            });\r\n    }\r\n\r\n    resetFile = () => {\r\n        this.setState({\r\n            PanEditImage: null,\r\n            PanEditImageName: null,\r\n            PanKycPosting: true\r\n        });\r\n    }\r\n\r\n    resetBankFile = () => {\r\n        this.setState({\r\n            BankEditImage: null,\r\n            BankEditImageName: null,\r\n            BankKycPosting: true\r\n        });\r\n    }\r\n\r\n    updatePanCardDtl = () => {\r\n        this.setState({ editPanFlag: true })\r\n        let { NameOnPanCard, PanCardNumber, DateOfBirth, PanEditImageName } = this.state\r\n        let params = {\r\n            \"first_name\": NameOnPanCard,\r\n            \"last_name\": NameOnPanCard,\r\n            \"dob\": DateOfBirth ? moment(DateOfBirth).format(\"YYYY-MM-DD\") : '',\r\n            \"pan_no\": PanCardNumber,\r\n            \"pan_image\": PanEditImageName,\r\n            \"user_unique_id\": this.props.userDetail.user_unique_id\r\n        }\r\n\r\n\r\n\r\n        WSManager.Rest(NC.baseURL + NC.UPDATE_PAN_INFO, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                if (this.props.nameflag == \"1\") {\r\n                    this.props.updatePanDtl(params)\r\n                } else {\r\n                    this.props.CallUsrDtl()\r\n                }\r\n                this.setState({ editPanFlag: false, PanKycPosting: true })\r\n                notify.show(Response.message, 'success', 5000)\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    updateBankDtl = () => {\r\n        this.setState({ editBankFlag: true })\r\n        let { BankAccNumber, NameOnBank, BankName, BankEditImageName, BankIfscCode } = this.state\r\n        let params = {\r\n            \"first_name\": NameOnBank,\r\n            \"last_name\": '',\r\n            \"bank_name\": BankName,\r\n            \"ifsc_code\": BankIfscCode,\r\n            \"ac_number\": BankAccNumber,\r\n            \"bank_document\": BankEditImageName,\r\n            \"user_unique_id\": this.props.userDetail.user_unique_id\r\n        }\r\n\r\n\r\n\r\n        WSManager.Rest(NC.baseURL + NC.UPDATE_BANK_AC_DETAIL, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                this.getUserBankData();\r\n                if (this.props.nameflag == \"1\") {\r\n                    this.props.updateBankDtl(params)\r\n                } else {\r\n                    this.props.CallUsrDtl()\r\n                }\r\n\r\n                this.setState({ editBankFlag: false, BankKycPosting: true })\r\n                notify.show(Response.message, 'success', 5000)\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { pan_no, pan_image, bank_document, pan_verified, is_bank_verified, dob } = this.props.userDetail;\r\n\r\n        const { first_name, last_name, bank_name, ac_number, ifsc_code, micr_code } = this.state.bank_data;\r\n\r\n        let { bank_data, auto_pan_attempted, auto_bank_attempted, editPanFlag, NameOnPanCard, PanCardNumber, DateOfBirth, PanEditImage, PanKycPosting, editBankFlag, BankEditImage, NameOnBank, BankAccNumber, BankName, BankIfscCode, BankKycPosting, Today } = this.state\r\n\r\n        // let PanName = (this.props.userDetail.first_name) ? this.props.userDetail.first_name : '--' + this.props.userDetail.last_name ? this.props.userDetail.last_name : ''\r\n\r\n        let PanFName = (this.props.userDetail.first_name) ? this.props.userDetail.first_name : '--'\r\n        let PanLName = (this.props.userDetail.last_name) ? this.props.userDetail.last_name : ''\r\n        let PanName = PanFName + ' ' + PanLName\r\n\r\n        let NameOnBankDtl = (first_name) ? first_name + ' ' + last_name : '--'\r\n\r\n        return (\r\n            <Fragment>\r\n                {this.openLargeImgModal()}\r\n                <Row className={this.props.nameflag == \"1\" ? 'popup-document' : ''}>\r\n                    {this.props.nameflag == \"1\" &&\r\n                        <Col md={12} className=\"text-center\">\r\n                            <h2 className=\"mb-0 font-weight-bold\">{this.props.userDetail.first_name} {this.props.userDetail.last_name}</h2>\r\n                            <div className=\"user-tagline\">{this.props.userDetail.address ? this.props.userDetail.address : '--'}</div>\r\n                        </Col>\r\n                    }\r\n                    <Col md={6}>\r\n                        <div className=\"card-box\">\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <div className=\"card-title\">\r\n                                        <span className=\"kyc-p-title\">PAN CARD</span>\r\n                                        <Button\r\n                                            className=\"btn-secondary btn-kycedit\"\r\n\r\n                                            onClick={() => this.editKycPanDtl()}\r\n                                        >\r\n                                            {!editPanFlag ? 'Edit' : 'Back'}\r\n                                        </Button>\r\n                                    </div>\r\n                                    <figure\r\n                                        className={`card-container ${editPanFlag ? 'kyc-edit' : ''}`}\r\n                                    >\r\n                                        {\r\n                                            // this.state.AUTO_KYC_ALLOW == 0 && !editPanFlag &&\r\n                                            !editPanFlag &&\r\n                                            <Fragment>\r\n                                                <img\r\n                                                    onMouseEnter={() => this.LargeImgModalToggle((pan_image) ? NC.S3 + NC.PAN + pan_image : Images.no_image)}\r\n                                                    className=\"img-cover\"\r\n                                                    src={(pan_image) ? NC.S3 + NC.PAN + pan_image : Images.no_image} alt=\"\" />\r\n                                            </Fragment>\r\n                                        }\r\n                                        {editPanFlag &&\r\n                                            <Fragment>\r\n                                                {\r\n                                                    !_.isEmpty(PanEditImage) ?\r\n                                                        <Fragment>\r\n                                                            <div className=\"kyc-view-img\">\r\n                                                                <i onClick={this.resetFile} className=\"icon-close icon-rem-img\"></i>\r\n                                                                <img className=\"img-cover\" src={PanEditImage} />\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                        :\r\n                                                        <Fragment>\r\n                                                            <div className=\"kyc-select-image-box\">\r\n                                                                <div className=\"kyc-dashed-box\">\r\n                                                                    <Input\r\n                                                                        accept=\"image/x-png,image/gif,image/jpeg,image/bmp,image/jpg\"\r\n                                                                        type=\"file\"\r\n                                                                        name='PanEditImage'\r\n                                                                        id=\"PanEditImage\"\r\n                                                                        onChange={this.onChangePanImage}\r\n                                                                    />\r\n                                                                    <img\r\n                                                                        className=\"def-addphoto\"\r\n                                                                        src={Images.DEF_ADDPHOTO}\r\n                                                                        alt=\"\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                }\r\n                                            </Fragment>\r\n                                        }\r\n                                    </figure>\r\n                                </Col>\r\n\r\n                                <Col md={12} className=\"pan-container\">\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            {\r\n                                                HF.getIntVersion() != 1 &&\r\n                                                <label>Name on pan card</label>\r\n                                            }\r\n                                            {\r\n                                                HF.getIntVersion() == 1 &&\r\n                                                <label>Name on ID</label>\r\n                                            }\r\n\r\n\r\n                                            {\r\n                                                !editPanFlag &&\r\n                                                <div className=\"card-text line-text-ellipsis\" style={{ WebkitBoxOrient: 'vertical' }}>\r\n\r\n                                                    {PanName}\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                editPanFlag &&\r\n                                                <Input\r\n                                                    maxLength={40}\r\n                                                    type=\"text\"\r\n                                                    name=\"NameOnPanCard\"\r\n                                                    value={NameOnPanCard}\r\n                                                    onChange={(e) => this.handleInputChange(e)}\r\n                                                />\r\n                                            }\r\n                                        </Col>\r\n\r\n                                        <Col md={6}>\r\n                                            {\r\n                                                HF.getIntVersion() != 1 &&\r\n                                                <label>Pan card Number</label>\r\n                                            }\r\n                                            {\r\n                                                HF.getIntVersion() == 1 &&\r\n                                                <label>ID Number</label>\r\n                                            }\r\n                                            {\r\n                                                !editPanFlag &&\r\n                                                <div className=\"card-text line-text-ellipsis\" style={{ WebkitBoxOrient: 'vertical', width: '100%' }}>{(pan_no) ? pan_no : '--'}</div>\r\n                                            }\r\n                                            {\r\n                                                editPanFlag &&\r\n                                                <Input\r\n                                                    className=\"text-uppercase\"\r\n                                                    type=\"text\"\r\n                                                    name=\"PanCardNumber\"\r\n                                                    value={PanCardNumber}\r\n                                                    onChange={(e) => this.handleInputChange(e)}\r\n                                                />\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"kyc-dob\">\r\n                                        <Col md={6}>\r\n                                            <label className=\"mt-3\">Date Of Birth</label>\r\n                                            {\r\n                                                !editPanFlag &&\r\n                                                <div\r\n                                                    className=\"card-text line-text-ellipsis\" style={{ WebkitBoxOrient: 'vertical' }}>\r\n                                                    {(dob) ? <MomentDateComponent data={{ date: dob, format: \"D-MMM-YYYY\" }} /> : '--'}\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                editPanFlag &&\r\n                                                <DatePicker\r\n                                                    maxDate={Today}\r\n                                                    className=\"form-control\"\r\n\r\n                                                    selected={DateOfBirth}\r\n                                                    onChange={e => this.handleDateFilter(e, \"DateOfBirth\")}\r\n                                                    showYearDropdown='true'\r\n                                                    showMonthDropdown='true'\r\n                                                />\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        editPanFlag &&\r\n                                        <Row className=\"kyc-update-btn\">\r\n                                            <Col md={12}>\r\n                                                <Button\r\n                                                    disabled={PanKycPosting}\r\n                                                    className=\"btn-secondary-outline\"\r\n                                                    onClick={() => this.updatePanCardDtl()}\r\n                                                >\r\n                                                    Update\r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    }\r\n                                </Col>\r\n                                {\r\n                                    !editPanFlag &&\r\n                                    <Fragment>\r\n                                        <Col md={12} className=\"min-hgt-40\">\r\n                                            {pan_verified !== \"0\" && <div className=\"approved-box\">\r\n                                                {pan_verified == 1 ? 'Approved' : 'Rejected'}\r\n                                            </div>}\r\n                                            {\r\n                                                pan_no != null &&\r\n                                                <div className=\"verify-action mt-2\">\r\n                                                    {\r\n                                                        pan_verified == \"0\" &&\r\n                                                        <div className=\"custom-control custom-radio xcustom-control-inline radio-element\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                className=\"custom-control-input\"\r\n                                                                name=\"verify-doc\"\r\n                                                                value=\"1\"\r\n                                                                checked={this.state.pan_verified === '1'}\r\n                                                                onChange={this.handleOptionChange}\r\n                                                            />\r\n                                                            <label className=\"custom-control-label\">Approve</label>\r\n                                                        </div>\r\n                                                    }\r\n                                                    {\r\n                                                        (pan_verified == \"0\" || pan_verified == \"1\") &&\r\n                                                        <div className=\"custom-control custom-radio radio-element\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                className=\"custom-control-input\"\r\n                                                                name=\"verify-doc\"\r\n                                                                value=\"2\"\r\n                                                                checked={this.state.pan_verified === '2'}\r\n                                                                onChange={this.handleOptionChange}\r\n                                                            />\r\n                                                            <label className=\"custom-control-label\">Reject</label>\r\n                                                        </div>}\r\n                                                </div>\r\n                                            }\r\n                                        </Col>\r\n                                        <Col md={12} className=\"xp-0 min-hgt\">\r\n                                            {\r\n                                                (this.state.pan_verified === '2' || this.state.is_pan_verified === '2') &&\r\n                                                (<Input type=\"textarea\"\r\n                                                    disabled={pan_verified == 2}\r\n                                                    className=\"reject-reason\"\r\n                                                    name=\"pan_rejected_reason\"\r\n                                                    value={this.state.pan_rejected_reason}\r\n                                                    id=\"reason\"\r\n                                                    placeholder=\"Reason\"\r\n                                                    onChange={this.handleChange}\r\n                                                />)\r\n                                            }\r\n                                        </Col>\r\n                                    </Fragment>\r\n                                }\r\n                            </Row>\r\n                            {\r\n                                !editPanFlag &&\r\n                                <Row>\r\n                                    <Col md={12} className=\"verify-btn-box\">\r\n                                        {pan_no == null\r\n                                            ?\r\n                                            <div className=\"not-uploaded\">Document Not Uploaded</div>\r\n                                            :\r\n                                            <Button\r\n                                                disabled={pan_verified == 2}\r\n                                                className=\"btn-secondary-outline btn-md\" onClick={this.Verify}>Update</Button>\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <div className=\"card-box\">\r\n                            <Row>\r\n                                <Col md={12}>\r\n\r\n\r\n                                    <div className=\"card-title\">\r\n                                        <span className=\"kyc-p-title\">Bank Document</span>\r\n                                        <Button\r\n                                            className=\"btn-secondary btn-kycedit\"\r\n                                            onClick={() => this.editKycBankDtl()}\r\n                                        >\r\n                                            {!editBankFlag ? 'Edit' : 'Back'}\r\n                                        </Button>\r\n                                    </div>\r\n\r\n                                    <figure\r\n                                        className=\"card-container\"\r\n\r\n                                    >\r\n\r\n                                        {\r\n                                            // (this.state.AUTO_KYC_ALLOW == 0 && !editBankFlag) &&\r\n                                            (!editBankFlag) &&\r\n                                            <Fragment>\r\n                                                <img\r\n                                                    onMouseEnter={() => this.LargeImgModalToggle((bank_document) ? NC.S3 + NC.PAN + bank_document : Images.no_image)}\r\n                                                    className=\"img-cover\"\r\n                                                    src={(bank_document) ? NC.S3 + NC.PAN + bank_document : Images.no_image} alt=\"\"\r\n                                                />\r\n                                            </Fragment>\r\n                                        }\r\n                                        {/* {\t\r\n                                            ((this.state.AUTO_KYC_ALLOW == 1 && auto_bank_attempted == \"1\" && (is_bank_verified == null || is_bank_verified == \"0\" || is_bank_verified == \"2\") && bank_document) && !editBankFlag) && <Fragment>\r\n                                                <img\r\n                                                    onMouseEnter={() => this.LargeImgModalToggle((bank_document) ? NC.S3 + NC.PAN + bank_document : Images.no_image)}\r\n                                                    className=\"img-cover\"\r\n                                                    src={(bank_document) ? NC.S3 + NC.PAN + bank_document : Images.no_image}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </Fragment>\r\n                                        } */}\r\n                                        {editBankFlag &&\r\n                                            <Fragment>\r\n                                                {\r\n                                                    !_.isEmpty(BankEditImage) ?\r\n                                                        <Fragment>\r\n                                                            <div className=\"kyc-view-img\">\r\n                                                                <i onClick={this.resetBankFile} className=\"icon-close icon-rem-img\"></i>\r\n                                                                <img className=\"img-cover\" src={BankEditImage} />\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                        :\r\n                                                        <Fragment>\r\n                                                            <div className=\"kyc-select-image-box\">\r\n                                                                <div className=\"kyc-dashed-box\">\r\n                                                                    <Input\r\n                                                                        accept=\"image/x-png,image/gif,image/jpeg,image/bmp,image/jpg\"\r\n                                                                        type=\"file\"\r\n                                                                        name='BankEditImage'\r\n                                                                        id=\"BankEditImage\"\r\n                                                                        onChange={this.onChangeBankImage}\r\n                                                                    />\r\n                                                                    <img\r\n                                                                        className=\"def-addphoto\"\r\n                                                                        src={Images.DEF_ADDPHOTO}\r\n                                                                        alt=\"\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                }\r\n                                            </Fragment>\r\n                                        }\r\n                                    </figure>\r\n                                </Col>\r\n                            </Row>\r\n                            {this.state.bank_data &&\r\n                                <div className=\"bank-info\">\r\n                                    <Row className=\"padd-30\">\r\n                                        <Col md={6}>\r\n                                            <label>Name as per Bank</label>\r\n                                            {\r\n                                                !editBankFlag &&\r\n                                                <div className=\"card-text line-text-ellipsis\" style={{ WebkitBoxOrient: 'vertical' }}>\r\n\r\n                                                    {NameOnBankDtl}\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                editBankFlag &&\r\n                                                <Input\r\n                                                    maxLength={30}\r\n                                                    type=\"text\"\r\n                                                    name=\"NameOnBank\"\r\n                                                    value={NameOnBank}\r\n                                                    onChange={(e) => this.handleBankInputChange(e)}\r\n                                                />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <label>Account Number</label>\r\n                                            {\r\n                                                !editBankFlag &&\r\n                                                <div\r\n                                                    className=\"card-text line-text-ellipsis\"\r\n                                                    style={{ WebkitBoxOrient: 'vertical', width: '100%' }}>\r\n                                                    {(ac_number) ? ac_number : '--'}\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                editBankFlag &&\r\n                                                <Input\r\n                                                    maxLength={19}\r\n                                                    type=\"text\"\r\n                                                    name=\"BankAccNumber\"\r\n                                                    value={BankAccNumber}\r\n                                                    onChange={(e) => this.handleBankInputChange(e)}\r\n                                                />\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"xpers-margin mt-4 padd-30\">\r\n                                        {\r\n                                            HF.getIntVersion() != 1 &&\r\n                                            <Col md={6}>\r\n                                                <label>IFSC Code</label>\r\n                                                {\r\n                                                    !editBankFlag &&\r\n                                                    <div\r\n                                                    className=\"card-text line-text-ellipsis\"\r\n                                                        style={{ WebkitBoxOrient: 'vertical', width: '100%' }}>\r\n                                                        {(ifsc_code) ? ifsc_code : '--'}\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    editBankFlag &&\r\n                                                    <Fragment>\r\n                                                        <Input\r\n                                                            maxLength={11}\r\n                                                            className=\"text-uppercase\"\r\n                                                            type=\"text\"\r\n                                                            name=\"BankIfscCode\"\r\n                                                            value={BankIfscCode}\r\n                                                            onChange={(e) => this.handleBankInputChange(e)}\r\n                                                        />\r\n                                                        <div className=\"ifsc-ex\">Ex : ABCD0123456</div>\r\n                                                    </Fragment>\r\n                                                }\r\n                                            </Col>\r\n                                        }\r\n                                        <Col md={6}>\r\n                                            <label>Bank Name</label>\r\n                                            {\r\n                                                !editBankFlag &&\r\n                                                <div\r\n                                                    style={{ WebkitBoxOrient: 'vertical', width: '100%' }}\r\n                                                    className=\"card-text line-text-ellipsis\">\r\n                                                    {(bank_name) ? bank_name : '--'}\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                editBankFlag &&\r\n                                                <Input\r\n                                                    maxLength={49}\r\n                                                    type=\"text\"\r\n                                                    name=\"BankName\"\r\n                                                    value={BankName}\r\n                                                    onChange={(e) => this.handleBankInputChange(e)}\r\n                                                />\r\n                                            }\r\n                                        </Col>\r\n\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"xpers-margin mt-4 padd-30\">\r\n                                        <Col md={12}>\r\n                                            <label>UPI ID</label>\r\n                                            {\r\n\r\n                                                <div\r\n                                                    style={{ WebkitBoxOrient: 'vertical', width: '100%' }}\r\n                                                    className=\"card-text line-text-ellipsis\">\r\n                                                    {(this.state.bank_data.upi_id) ? this.state.bank_data.upi_id : '--'}\r\n                                                </div>\r\n                                            }\r\n\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        editBankFlag &&\r\n                                        <Row className=\"kyc-update-btn\">\r\n                                            <Col md={12}>\r\n                                                <Button\r\n                                                    disabled={BankKycPosting}\r\n                                                    className=\"btn-secondary-outline\"\r\n                                                    onClick={() => this.updateBankDtl()}\r\n                                                >\r\n                                                    Update\r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            <Row className=\"justify-content-end\">\r\n                                <Col md={12} className=\"min-hgt-40\">\r\n                                    {\r\n                                        (!editBankFlag && (is_bank_verified == \"1\" || is_bank_verified == \"2\")) &&\r\n                                        <div className=\"approved-box\">\r\n                                            {is_bank_verified == 1 ? 'Approved' : is_bank_verified == 2 ? 'Rejected' : ''}\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        !editBankFlag &&\r\n                                        <div className=\"verify-action mt-2\">\r\n                                            {\r\n                                                // this.state.AUTO_KYC_ALLOW == 0 && (bank_document !== null && (is_bank_verified == null || is_bank_verified == \"0\")) &&\t\r\n\r\n                                                /**auto and manual KYC case */\r\n                                                ((bank_document !== null || !_.isEmpty(bank_data)) && (is_bank_verified == null || is_bank_verified == \"0\")) &&\r\n                                                /**Manual KYC case */\r\n                                                // (bank_document !== null && (is_bank_verified == null || is_bank_verified == \"0\")) &&\t\r\n\r\n                                                <div className=\"custom-control custom-radio xcustom-control-inline radio-element\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        className=\"custom-control-input\"\r\n                                                        name=\"verify-bank-doc\"\r\n                                                        value=\"1\"\r\n                                                        checked={this.state.bank_verified === '1'}\r\n                                                        onChange={this.handleBankChange}\r\n                                                    />\r\n                                                    <label className=\"custom-control-label\">Approve</label>\r\n                                                </div>\r\n                                            }\r\n\r\n                                            {/* {\t\r\n                                                (this.state.AUTO_KYC_ALLOW == 1 && auto_bank_attempted == \"1\" && bank_document !== null && (is_bank_verified == null || is_bank_verified == \"0\")) &&\t\r\n                                                // (bank_document !== null && (is_bank_verified == null || is_bank_verified == \"0\")) &&\t\r\n                                                <div className=\"custom-control custom-radio xcustom-control-inline radio-element\">\t\r\n                                                    <input\t\r\n                                                        type=\"radio\"\t\r\n                                                        className=\"custom-control-input\"\t\r\n                                                        name=\"verify-bank-doc\"\t\r\n                                                        value=\"1\"\t\r\n                                                        checked={this.state.bank_verified === '1'}\t\r\n                                                        onChange={this.handleBankChange}\t\r\n                                                    />\t\r\n                                                    <label className=\"custom-control-label\">Approve</label>\t\r\n                                                </div>\t\r\n                                            } */}\r\n                                            {/* {\t\r\n                                                (this.state.AUTO_KYC_ALLOW == 1) && (!_.isEmpty(bank_data) && (is_bank_verified == null || (is_bank_verified == '0' || is_bank_verified == '1'))) &&\t\r\n                                                <div className=\"custom-control custom-radio xcustom-control-inline radio-element\">\t\r\n                                                    <input\t\r\n                                                        type=\"radio\"\t\r\n                                                        className=\"custom-control-input\"\t\r\n                                                        name=\"verify-bank-doc\"\t\r\n                                                        value=\"2\"\t\r\n                                                        checked={this.state.bank_verified === '2'}\t\r\n                                                        onChange={this.handleBankChange}\t\r\n                                                    />\t\r\n                                                    <label className=\"custom-control-label\">Reject</label>\t\r\n                                                </div>\t\r\n                                            } */}\r\n                                            {\r\n                                                // this.state.AUTO_KYC_ALLOW == 0 && bank_document !== null && (is_bank_verified == null || (is_bank_verified == '0' || is_bank_verified == '1')) &&\t\r\n\r\n                                                /**Manual KYC case */\r\n                                                // bank_document !== null && (is_bank_verified == null || (is_bank_verified == '0' || is_bank_verified == '1')) &&\t\r\n\r\n                                                /**auto and manual KYC case */\r\n                                                (bank_document !== null || !_.isEmpty(bank_data)) && (is_bank_verified == null || (is_bank_verified == '0' || is_bank_verified == '1')) &&\r\n                                                <div className=\"custom-control custom-radio xcustom-control-inline radio-element\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        className=\"custom-control-input\"\r\n                                                        name=\"verify-bank-doc\"\r\n                                                        value=\"2\"\r\n                                                        checked={this.state.bank_verified === '2'}\r\n                                                        onChange={this.handleBankChange}\r\n                                                    />\r\n                                                    <label className=\"custom-control-label\">Reject</label>\r\n                                                </div>}\r\n                                        </div>\r\n                                    }\r\n                                </Col>\r\n                                {\r\n                                    (this.state.bank_verified == \"2\" || is_bank_verified == \"2\") &&\r\n                                    <Col md={12} className=\"xp-0 min-hgt\">\r\n                                        <Input\r\n                                            disabled={is_bank_verified == \"2\"}\r\n                                            type=\"textarea\"\r\n                                            className=\"reject-reason\"\r\n                                            name=\"bank_rejected_reason\"\r\n                                            value={this.state.bank_rejected_reason}\r\n                                            id=\"reason\"\r\n                                            placeholder=\"Reason\"\r\n                                            onChange={this.handleChange} />\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                            {\r\n                                !editBankFlag &&\r\n                                <Row>\r\n                                    <Col md={12} className=\"verify-btn-box\">\r\n                                        {\r\n                                            <Col md={12} className=\"verify-btn-box\">\r\n                                                {\r\n                                                    // (this.state.AUTO_KYC_ALLOW == 0 && bank_document == null) &&\t\r\n                                                    (this.state.AUTO_KYC_ALLOW == 0 && (bank_document == null && _.isEmpty(bank_data))) &&\r\n                                                    <div className=\"not-uploaded\">Document Not Uploaded</div>\r\n                                                }\r\n                                                {\r\n                                                    (this.state.AUTO_KYC_ALLOW == 1 && (_.isEmpty(bank_data) && is_bank_verified !== \"1\")) &&\r\n                                                    <div className=\"not-uploaded\">Document Not Uploaded</div>\r\n                                                }\r\n                                                {\r\n                                                    (bank_document != null || !_.isEmpty(bank_data)) &&\r\n                                                    <Button\r\n                                                        disabled={is_bank_verified == 2}\r\n                                                        className=\"btn-secondary-outline btn-md\"\r\n                                                        onClick={this.VerifyBank}>\r\n                                                        Update\r\n                                                    </Button>\r\n                                                }\r\n                                            </Col>\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.nameflag == \"1\" &&\r\n                    <Row>\r\n                        <Col md={12} className=\"text-center mt-4\">\r\n                            <Button className=\"btn-secondary btn-lg\" onClick={this.props.closeACverifyModal}>Done</Button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\nexport default VerifyDocument","import React, { Component } from \"react\";\r\nimport { Input, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport FloatingLabel from 'floating-label-react';\r\nimport \"floating-label-react/styles.css\";\r\nimport * as NC from \"../../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport HF from '../../../helper/HelperFunction';\r\nclass Wallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = { \r\n            balance: { transaction_amount_type: 'REAL_CASH', user_unique_id: '', user_balance_reason: '' },\r\n         };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.updateWallet = this.updateWallet.bind(this)\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.getUserDetail();\r\n    }\r\n    getUserDetail = () => {\r\n        this.setState({ posting: true })\r\n        let params = { \"user_unique_id\": this.props.user_unique_id };\r\n        WSManager.Rest(NC.baseURL + NC.GET_USER_DETAIL, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                let userDetail = responseJson.data;\r\n                let e = { target: { name: 'user_unique_id', value: userDetail.user_unique_id } }\r\n                this.handleChange(e);\r\n                this.setState({ userDetail: userDetail }, function () { console.log(userDetail.phone_verfied) })\r\n            }\r\n            this.setState({ posting: false })\r\n        })\r\n    }\r\n\r\n    handleChange(e) {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let balance = this.state.balance;\r\n\r\n        balance[name] = value;\r\n        this.setState({\r\n            balance\r\n        });\r\n    }\r\n\r\n    updateWallet = () => {\r\n\r\n        this.setState({ posting: true })\r\n        let { transaction_amount_type, amount } = this.state.balance\r\n       \r\n        if (transaction_amount_type == 'COINS' && amount % 1 !== 0)\r\n        {\r\n            notify.show(\"Decimal value not allowed for coins\", \"error\", 5000);\r\n            return false\r\n        }\r\n\r\n        let params = { ...this.state.balance };\r\n        if (params.amount > 0) {\r\n            params.transaction_type = \"CREDIT\";\r\n        } else {\r\n            params.transaction_type = \"DEBIT\";\r\n            params.amount = Math.abs(params.amount);\r\n\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.UPDATE_WALLET, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n                let walletData = responseJson.data;\r\n                let userDetailData = this.state.userDetail;\r\n                userDetailData['balance'] = walletData['balance'];\r\n                userDetailData['bonus_balance'] = walletData['bonus_balance'];\r\n                userDetailData['winning_balance'] = walletData['winning_balance'];\r\n                this.props.update_method();\r\n                this.props.modalCallback();\r\n                this.setState({ userDetailData })\r\n\r\n\r\n            }\r\n            this.setState({ posting: false })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const userDetail = this.state.userDetail;\r\n        const balance = this.state.balance;\r\n        return (\r\n            <div>\r\n                {userDetail &&\r\n                    <Modal\r\n                        isOpen={this.props.modalIsOpen}\r\n                        className=\"modal-md manage-bal\"\r\n                        toggle={() => this.props.modalCallback()}\r\n                    >\r\n                        <ModalHeader>Manage User Balance</ModalHeader>\r\n                        <ModalBody className=\"p-0\">\r\n                            <div className=\"balance-box p-3\">\r\n                                <h1 className=\"mb-3 text-center\">{this.props.userFullName}</h1>\r\n                                <ul className=\"bal-calculation clearfix\">\r\n                                    <li className=\"balance-items d-inline-block\">\r\n                                        <label htmlFor=\"c-balance\">Current Balance</label>\r\n                                        <div className=\"numbers\">{HF.getCurrencyCode()}&nbsp;{parseInt(userDetail.balance) + parseInt(userDetail.bonus_balance) + parseInt(userDetail.winning_balance)}</div>\r\n                                    </li>\r\n                                    <li className=\"d-inline-block cal-sign\">\r\n                                        <span className=\"float-left\">=</span>\r\n                                    </li>\r\n                                    <li className=\"balance-items d-inline-block\">\r\n                                        <label htmlFor=\"c-balance\">Real</label>\r\n                                        <div className=\"numbers\">{HF.getCurrencyCode()}&nbsp;{(userDetail.balance) ? userDetail.balance : 0}</div>\r\n                                    </li>\r\n                                    <li className=\"d-inline-block cal-sign text-black-50\">\r\n                                        <span className=\"float-left\">+</span>\r\n                                    </li>\r\n                                    <li className=\"balance-items d-inline-block\">\r\n                                        <label htmlFor=\"c-balance\">Bonus</label>\r\n                                        <div className=\"numbers\">{HF.getCurrencyCode()}&nbsp;{(userDetail.bonus_balance) ? userDetail.bonus_balance : 0}</div>\r\n                                    </li>\r\n                                    <li className=\"d-inline-block cal-sign text-black-50\">\r\n                                        <span className=\"float-left\">+</span>\r\n                                    </li>\r\n                                    <li className=\"balance-items d-inline-block\">\r\n                                        <label htmlFor=\"c-balance\">Winning</label>\r\n                                        <div className=\"numbers\">{HF.getCurrencyCode()}&nbsp;{(userDetail.winning_balance) ? userDetail.winning_balance : 0}</div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"transaction-box\">\r\n                                <div className=\"transaction-type\">Transaction Amount Type</div>\r\n                                <ul className=\"money-type-list\">\r\n                                    <li className=\"money-type-item\">\r\n                                        <label>{this.state.transaction_amount_type}\r\n                                            <input type=\"radio\" name=\"transaction_amount_type\" value=\"REAL_CASH\" checked={this.state.balance.transaction_amount_type === 'REAL_CASH'}\r\n                                                onChange={this.handleChange} />&nbsp;Real Money\r\n                                        </label>\r\n                                    </li>\r\n                                    <li className=\"money-type-item\">\r\n                                        <label>\r\n                                            <input type=\"radio\" name=\"transaction_amount_type\" value=\"BONUS_CASH\" checked={this.state.balance.transaction_amount_type === 'BONUS_CASH'}\r\n                                                onChange={this.handleChange} />&nbsp;Bonus Cash\r\n                                        </label>\r\n                                    </li>\r\n                                    <li className=\"money-type-item\">\r\n                                        <label>\r\n                                            <input type=\"radio\" name=\"transaction_amount_type\" value=\"WINNING_CASH\" checked={this.state.balance.transaction_amount_type === 'WINNING_CASH'}\r\n                                                onChange={this.handleChange} />&nbsp;Winning\r\n                                        </label>\r\n                                    </li>\r\n                                    <li className=\"money-type-item\">\r\n                                        <label>\r\n                                        <input type=\"radio\" name=\"transaction_amount_type\" value=\"COINS\" checked={this.state.balance.transaction_amount_type === 'COINS'}\r\n                                                onChange={this.handleChange} />&nbsp;Coins\r\n                                        </label>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"amount-info\">\r\n                                    <FloatingLabel\r\n                                        id=\"amount\"\r\n                                        name=\"amount\"\r\n                                        placeholder=\"Enter Amount\"\r\n                                        type=\"number\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    <span className=\"am-info-text\">To deduct balance add a “-” before the number. </span>\r\n                                </div>\r\n                                <div className=\"reason-box\">\r\n                                    <label>Reason</label>\r\n                                    <Input type=\"textarea\" className=\"amo-reason\" name=\"user_balance_reason\" id=\"amo-reason\" onChange={this.handleChange} placeholder=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter className=\"border-0\">\r\n                            <Button className=\"btn-secondary-outline ripple\" onClick={() => this.updateWallet()}>Update Balance</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Wallet","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport * as NC from \"../../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\n\r\nclass ChangeStatus extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { StatusmodalIsOpen: false }\r\n\r\n    }\r\n    \r\n    handleTextInput(e) {\r\n\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        console.log(name, value)\r\n        this.setState({ inactive_reason: value });\r\n    }\r\n    makeInactive = () => {\r\n        this.setState({ posting: true })\r\n\r\n        let params = { \r\n            reason: this.state.inactive_reason, \r\n            user_unique_id: this.props.user_unique_id, \r\n            status: '0' \r\n        };\r\n\r\n        WSManager.Rest(NC.baseURL + NC.CHANGE_USER_STATUS, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n\r\n                this.setState({ inactive_reason: '', posting: false })\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n                this.props.closeStatusModal();\r\n            }\r\n            this.setState({ posting: false })\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    isOpen={this.props.StatusmodalIsOpen}\r\n                    className=\"inactive-modal\"\r\n                    toggle={this.props.closeStatusModal}\r\n                >\r\n                    <ModalHeader>Manage Inactive User</ModalHeader>\r\n                    <ModalBody>\r\n                        {/* <h1 className=\"text-center\">Ethen Luise</h1> */}\r\n                        <h1 className=\"text-center\">{this.props.user_full_name}</h1>\r\n                        <label>Reason </label>\r\n                        <form method=\"post\">\r\n                            <textarea rows=\"4\" name=\"reason\" className=\"reject-reason\" id=\"reason\" onChange={e => this.handleTextInput(e)} ></textarea>\r\n                        </form>\r\n                    </ModalBody>\r\n                    <ModalFooter className=\"border-0 justify-content-center\">\r\n                        <Button className=\"btn-secondary-outline\" onClick={e => this.makeInactive(e)}>Block</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ChangeStatus\r\n","\r\nimport React, { Component, Fragment, useState } from \"react\";\r\n\r\nimport { Row, Col, Table, Modal, ModalBody, ModalHeader, Tooltip } from 'reactstrap';\r\n\r\nimport Images from \"../../../components/images\";\r\n\r\nimport _ from 'lodash';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from 'react-select';\r\n\r\n\r\nimport * as NC from \"../../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../../helper/WSManager\";\r\n\r\n\r\nimport Pagination from \"react-js-pagination\";\r\n// import Modal from 'react-modal';\r\nimport { notify } from 'react-notify-toast';\r\nimport VerifyDocument from '../VerifyDocument/VerifyDocument';\r\nimport Wallet from '../Wallet/Wallet';\r\nimport ChangeStatus from '../ChangeStatus/ChangeStatus';\r\nimport Loader from '../../../components/Loader';\r\nimport moment from 'moment';\r\nimport queryString from 'query-string';\r\nimport HF from '../../../helper/HelperFunction';\r\nconst options = [\r\n    { value: 1, label: 'Active' },\r\n    { value: 0, label: 'Block' },\r\n    { value: 2, label: 'Pending' },\r\n]\r\n\r\nconst TooltipItem = props => {\r\n    const { item, id, icon, placement } = props;\r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n    const toggle = () => setTooltipOpen(!tooltipOpen);\r\n    return (\r\n        <span>\r\n            \r\n            <i className={icon} id={\"Tooltip-\" + id}></i>\r\n            <Tooltip\r\n                placement={placement}\r\n                isOpen={tooltipOpen}\r\n                target={\"Tooltip-\" + id}\r\n                toggle={toggle}\r\n            >\r\n                {item}\r\n            </Tooltip>\r\n        </span>\r\n    );\r\n};\r\n\r\n\r\nclass Manageuser extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let filter = {\r\n            from_date: HF.getFirstDateOfMonth(),\r\n            to_date: new Date(),\r\n            current_page: 1,\r\n            status: 1,\r\n            pending_pan_approval: '',\r\n            is_flag: '',\r\n            keyword: '',\r\n            items_perpage: NC.ITEMS_PERPAGE,\r\n            sort_field: 'added_date',\r\n            sort_order: 'DESC'\r\n        }\r\n        this.state = {\r\n            filter: filter,\r\n            posting: false,\r\n            StartDate: '',\r\n            EndDate: '',\r\n            modalIsOpen: false,\r\n            balanceModalIsOpen: false,\r\n            StatusmodalIsOpen: false,\r\n            WalletmodalIsOpen: false,\r\n            ACverifymodalIsOpen: false,\r\n            UserStatus: 1,\r\n            userslist: [],\r\n            userFullName: '',\r\n            LoaderPosting: true,\r\n            walletRoleAccess: !_.isNull(WSManager.getKeyValueInLocal(\"module_access\")) ? WSManager.getKeyValueInLocal(\"module_access\").includes(\"user_wallet_manage\") : false,\r\n            AUTO_KYC_ALLOW: !_.isNull(WSManager.getKeyValueInLocal('AUTO_KYC_ALLOW')) ? WSManager.getKeyValueInLocal('AUTO_KYC_ALLOW') : 0,\r\n            total : 0\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\r\n\r\n        this.openStatusModal = this.openStatusModal.bind(this);\r\n        this.openACverifyModal = this.openACverifyModal.bind(this);\r\n        this.openWalletModal = this.openWalletModal.bind(this);\r\n\r\n        this.closeStatusModal = this.closeStatusModal.bind(this);\r\n        this.closeACverifyModal = this.closeACverifyModal.bind(this);\r\n        this.closeWalletModal = this.closeWalletModal.bind(this);\r\n        \r\n\r\n        this.SearchCodeReq = _.debounce(this.SearchCodeReq.bind(this), 500);\r\n\r\n    }\r\n\r\n    handlePageChange(current_page) {\r\n\r\n    }\r\n    componentDidMount() {\r\n        let filter = this.state.filter;\r\n        let url = this.props.location.search;\r\n        let urlParams = queryString.parse(url);\r\n        if (urlParams.pending == 1) {\r\n            filter['pending_pan_approval'] = urlParams.pending;\r\n            this.setState({ filter })\r\n        }\r\n        this.getUserList();\r\n    }\r\n    handlePageChange(current_page) {\r\n\r\n        let filter = this.state.filter;\r\n\r\n        filter['current_page'] = current_page;\r\n\r\n        this.setState(\r\n            { filter: filter },\r\n            function () {\r\n                this.getUserList();\r\n            });\r\n\r\n    }\r\n    handleSearch(keyword) {\r\n\r\n        let filter = this.state.filter;\r\n        filter['keyword'] = keyword.target.value;\r\n        this.setState({\r\n            filter: filter,\r\n        },\r\n            this.SearchCodeReq\r\n        );\r\n\r\n\r\n    }\r\n    SearchCodeReq() {\r\n        \r\n        this.getUserList()\r\n    }\r\n\r\n    handleSelect(status) {\r\n        if (status != null) {\r\n            let filter = this.state.filter;\r\n            filter['status'] = status.value;\r\n            filter['current_page'] = 1;\r\n            this.setState({\r\n                filter: filter,\r\n                UserStatus: status\r\n            },\r\n                function () {\r\n                    this.getUserList();\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    handleClick(pending_pan_approval, flag) {\r\n        let filter = this.state.filter;\r\n        \r\n        filter[flag] = pending_pan_approval;\r\n        filter['current_page'] = 1;\r\n        this.setState(\r\n            { filter: filter },\r\n            function () {\r\n                this.getUserList();\r\n            });\r\n\r\n    }\r\n    handleChange(date) {\r\n        let filter = this.state.filter;\r\n        filter['from_date'] = moment(date).format(\"YYYY-MM-DD\");\r\n        filter['current_page'] = 1;\r\n        this.setState(\r\n            {\r\n                filter: filter,\r\n                StartDate: date\r\n            },\r\n            function () {\r\n                this.getUserList();\r\n            });\r\n\r\n\r\n    }\r\n    handleChangeEnd(date) {\r\n        let filter = this.state.filter;\r\n        filter['to_date'] = moment(date).format(\"YYYY-MM-DD\");\r\n        filter['current_page'] = 1;\r\n        this.setState(\r\n            {\r\n                filter: filter,\r\n                EndDate: date\r\n            },\r\n            function () {\r\n                this.getUserList();\r\n            });\r\n    }\r\n    getUserList = () => {\r\n        this.setState({ posting: true })\r\n        let { filter } = this.state\r\n\r\n        let tempFilter = filter\r\n        tempFilter.from_date = moment(tempFilter.from_date).format(\"YYYY-MM-DD\")\r\n        tempFilter.to_date = moment(tempFilter.to_date).format(\"YYYY-MM-DD\")\r\n        let params = tempFilter;\r\n        \r\n        WSManager.Rest(NC.baseURL + NC.GET_USERLIST, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                let result = responseJson.data.result;\r\n                let total = responseJson.data.total;\r\n                this.setState({\r\n                    posting: false,\r\n                    userslist: result\r\n                })\r\n\r\n                if (total > 0) {\r\n                    this.setState({\r\n                        total: total\r\n                    })\r\n                }\r\n            }\r\n            this.setState({ posting: false })\r\n        })\r\n    }\r\n    exportUser = () => {\r\n        let { filter, StartDate, EndDate } = this.state\r\n        let tempFromDate = ''\r\n        let tempToDate = ''\r\n        if (StartDate != '' && EndDate != '') {\r\n            tempFromDate = moment(StartDate).format(\"YYYY-MM-DD\");\r\n            tempToDate = moment(EndDate).format(\"YYYY-MM-DD\");\r\n        }\r\n\r\n        var query_string = 'status=' + filter.status + '&is_flag=' + filter.is_flag + '&is_pending_pan_approval=' + filter.pending_pan_approval + '&items_perpage=' + filter.items_perpage + '&total_items=0&current_page=' + filter.current_page + '&sort_order=' + filter.sort_order + '&sort_field=' + filter.sort_field + '&country=&state=&keyword=' + filter.keyword + '&from_date=' + tempFromDate + '&to_date=' + tempToDate;\r\n\r\n\r\n        let sessionKey = WSManager.getToken();\r\n        query_string += \"&Sessionkey\" + \"=\" + sessionKey;\r\n\r\n        window.open(NC.baseURL + 'adminapi/user/export_users?' + query_string, '_blank');\r\n    }\r\n    openStatusModal(user) {\r\n        let firstname = user.first_name ? user.first_name : '-'\r\n        let lastname = user.last_name ? user.last_name : ''\r\n        let fullname = firstname + ' ' + lastname\r\n        this.setState({\r\n            StatusmodalIsOpen: true,\r\n            reason: '',\r\n            status: \"0\",\r\n            user_unique_id: user.user_unique_id,\r\n            user_full_name: fullname,\r\n        });\r\n    }\r\n\r\n    closeStatusModal() {\r\n        this.setState({ StatusmodalIsOpen: false }, function () {\r\n            this.getUserList();\r\n        });\r\n    }\r\n\r\n    handleChangeUserStatus = () => {\r\n        this.setState({ posting: true })\r\n\r\n        let params = { reason: this.state.inactive_reason, user_unique_id: this.state.user_unique_id, status: this.state.status };\r\n        WSManager.Rest(NC.baseURL + NC.CHANGE_USER_STATUS, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n\r\n                this.setState({ inactive_reason: '', posting: false })\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n                this.closeStatusModal();\r\n                this.getUserList();\r\n\r\n            }\r\n            this.setState({ posting: false })\r\n\r\n        });\r\n    }\r\n    makeActive(user) {\r\n        this.setState({ reason: '', status: \"1\", user_unique_id: user.user_unique_id },\r\n            function () {\r\n                this.handleChangeUserStatus();\r\n            }\r\n        );\r\n    }\r\n\r\n    openWalletModal(item) {\r\n        let firstname = item.first_name ? item.first_name : '-'\r\n        let lastname = item.last_name ? item.last_name : ''\r\n        let fullname = firstname + ' ' + lastname\r\n        this.setState({\r\n            WalletmodalIsOpen: true,\r\n            user_unique_id: item.user_unique_id,\r\n            userFullName: fullname,\r\n        });\r\n    }\r\n    closeWalletModal = () => {\r\n        this.setState({ WalletmodalIsOpen: !this.state.WalletmodalIsOpen });\r\n    }\r\n\r\n    openACverifyModal(user) {\r\n\r\n        this.setState({ ACverifymodalIsOpen: true, userDetail: user });\r\n    }\r\n    closeACverifyModal() {\r\n        this.setState({ ACverifymodalIsOpen: false });\r\n    }\r\n    AutoToolTipToggle = (flag) => {\r\n        this.setState({ isShowAutoToolTip: !this.state.isShowAutoToolTip });\r\n    }\r\n    \r\n    update_transaction_balance = () => {\r\n        return null;\r\n    }\r\n\r\n    reloadPanModalData = (user) => {\r\n        let tempUdtl = this.state.userDetail\r\n        tempUdtl.first_name = user.first_name\r\n        tempUdtl.last_name = ''\r\n        tempUdtl.pan_no = user.pan_no\r\n        tempUdtl.pan_image = user.pan_image\r\n        tempUdtl.dob = user.dob\r\n        this.setState({ userDetail: tempUdtl });\r\n    }\r\n    \r\n    reloadBankModalData = (user) => {\r\n        let tempUdtl = this.state.userDetail\r\n        tempUdtl.bank_document = user.bank_document\r\n        this.setState({ userDetail: tempUdtl });\r\n    }\r\n\r\n    render() {\r\n        const { WalletmodalIsOpen, user_unique_id, userFullName, filter, UserStatus, userslist, StartDate, EndDate, total, posting, walletRoleAccess, AUTO_KYC_ALLOW } = this.state\r\n        const Wallet_props = {\r\n            modalIsOpen: WalletmodalIsOpen,\r\n            modalCallback: this.closeWalletModal,\r\n            user_unique_id: user_unique_id,\r\n            userFullName: userFullName,\r\n            update_method: this.update_transaction_balance\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <div className=\"manage-user-heading clearfix\">\r\n                    <h1 className=\"page-title\">\r\n                        Manage User</h1>\r\n                    <div className=\"search-user\">\r\n\r\n                        <input name=\"search-user\" id=\"search-user\" className=\"search-input\" value={this.state.filter.keyword} placeholder=\"Search\" onChange={e => this.handleSearch(e)} />\r\n                        <i className=\"icon-search\"></i>\r\n                    </div>\r\n                </div>\r\n                <Row className=\"filter-userlist\">\r\n                    <Col md={9}>\r\n                        <div className=\"member-box float-left\">\r\n                            <div className=\"float-left\">\r\n                                <label className=\"filter-label\">Start Date</label>\r\n                                <DatePicker\r\n                                    maxDate={new Date(filter.to_date)}\r\n                                    className=\"filter-date\"\r\n                                    showYearDropdown='true'\r\n                                    selected={new Date(filter.from_date)}\r\n                                    onChange={this.handleChange}\r\n                                    placeholderText=\"From\"\r\n                                    dateFormat='dd/MM/yyyy'\r\n                                />\r\n                            </div>\r\n                            <div className=\"float-left\">\r\n                                <label className=\"filter-label\">End Date</label>\r\n                                <DatePicker\r\n                                    minDate={new Date(filter.from_date)}\r\n                                    maxDate={new Date()}\r\n                                    className=\"filter-date\"\r\n                                    showYearDropdown='true'\r\n                                    selected={new Date(filter.to_date)}\r\n                                    onChange={this.handleChangeEnd}\r\n                                    placeholderText=\"To\"\r\n                                    dateFormat='dd/MM/yyyy'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"filter-label\">User</label>\r\n                            <Select\r\n                                searchable={false}\r\n                                clearable={false}\r\n                                class=\"form-control\"\r\n                                options={options}\r\n                                placeholder=\"Active\"\r\n                                value={UserStatus}\r\n                                onChange={e => this.handleSelect(e)}\r\n                            />\r\n                            {\r\n                            //AUTO_KYC_ALLOW == 0 && \r\n                            <div className={(this.state.filter.pending_pan_approval == '') ? 'pending-docs' : 'pending-docs1'} onClick={e => this.handleClick((this.state.filter.pending_pan_approval == '') ? 1 : '', 'pending_pan_approval')}>\r\n                                Pending Docs\r\n                            </div>\r\n                            }\r\n                            <div className={(this.state.filter.is_flag == '') ? 'pending-docs' : 'pending-docs1'} onClick={e => this.handleClick((this.state.filter.is_flag == '') ? 1 : '', 'is_flag')}>\r\n                                Flagged\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3} className=\"mt-4\">\r\n                        <i className=\"export-list icon-export\" onClick={e => this.exportUser()}></i>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"user-list\">\r\n                    <Col className=\"md-12 table-responsive\">\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"left-th pl-4\">Document</th>\r\n                                    <th>User name</th>\r\n                                    <th>City</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Email</th>\r\n                                    <th>Status</th>\r\n                                    {walletRoleAccess && <th>Wallet</th>}\r\n                                    <th className=\"right-th\">Flag</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {\r\n                                userslist.length > 0 ?\r\n                                    _.map(userslist, (item, idx) => {\r\n                                        return (\r\n                                            <tbody key={idx}>\r\n                                                <tr>\r\n                                                    <td className=\"kyc-status left-th\">\r\n\r\n                                                        {\r\n                                                            ((item.pan_no == null && item.bank_document == null) || (item.pan_verified == \"2\" && item.is_bank_verified == \"2\")) &&\r\n                                                            <span className=\"ml-2\">--</span>\r\n                                                        }\r\n\r\n                                                        {\r\n                                                            (\r\n                                                                (item.pan_verified != \"2\" || item.is_bank_verified != \"2\") && (item.pan_no != null || item.bank_document != null)\r\n                                                            )\r\n                                                            &&\r\n                                                            <div>\r\n\r\n                                                                <span className=\"mr-2\">\r\n                                                                {\r\n                                                                    AUTO_KYC_ALLOW == 0 && (item.pan_verified == \"1\" && item.is_bank_verified == \"1\")\r\n                                                                                ?\r\n                                                                                <i className=\"icon-verified active\"></i>\r\n                                                                                :\r\n                                                                                <i className=\"icon-pending-doc active\"></i>\r\n\r\n                                                                }\r\n                                                                {\r\n                                                                    AUTO_KYC_ALLOW == 1 && (item.pan_verified == \"1\" && item.is_bank_verified == \"1\")\r\n                                                                                &&\r\n                                                                                <i className=\"icon-verified active\"></i>\r\n\r\n                                                                }\r\n                                                                KYC\r\n                                                                </span>\r\n\r\n                                                                {/* {\r\n                                                                    AUTO_KYC_ALLOW == 0 &&\r\n                                                                    <span className=\"mr-2\">\r\n                                                                        {\r\n                                                                            (item.pan_verified == \"1\" && item.is_bank_verified == \"1\")\r\n                                                                                ?\r\n                                                                                <i className=\"icon-verified active\"></i>\r\n                                                                                :\r\n                                                                                <i className=\"icon-pending-doc active\"></i>\r\n                                                                        }\r\n\r\n                                                                        KYC\r\n                                                                    </span>\r\n                                                                }\r\n                                                                {\r\n                                                                    AUTO_KYC_ALLOW == 1 &&\r\n                                                                    <span className=\"mr-2\">\r\n                                                                        {\r\n                                                                            (item.pan_verified == \"1\" && item.is_bank_verified == \"1\") && <i className=\"icon-verified active\"></i>\r\n                                                                        }\r\n                                                                        KYC\r\n                                                                    </span>\r\n                                                                } */}\r\n                                                                <span className=\"verify\" onClick={() => this.openACverifyModal(item)}>\r\n                                                                    {\r\n                                                                        (\r\n                                                                            AUTO_KYC_ALLOW == 1 && item.pan_verified == \"1\" && item.is_bank_verified == \"1\" && item.auto_pan_attempted == \"1\" && item.auto_bank_attempted == \"1\"\r\n                                                                        )\r\n                                                                            ? 'view' : 'view'\r\n                                                                    }\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td\r\n                                                        \r\n                                                        className=\"user-name text-ellipsis\">\r\n                                                        <a href={\"/admin/#/profile/\" + item.user_unique_id}>\r\n                                                            {item.user_name ? item.user_name : '--'}\r\n                                                        </a>\r\n                                                    </td>\r\n                                                    <td className=\"font-weight-normal xtext-ellipsis\">{item.city ? item.city : '--'}</td>\r\n\r\n                                                    <td onClick={() => this.props.history.push(\"/profile/\" + item.user_unique_id)} className=\"font-weight-normal user-name\"><i className=\"icon-verified active\"></i>{item.phone_no}</td>\r\n\r\n                                                    <td>\r\n                                                        <TooltipItem placement=\"top\" icon={`icon-email_verified mr-1 ${item.email_verified == 1 ? 'active' : ''}`} key={idx} item={item.email ? item.email : 'No email'} id={idx} />\r\n\r\n                                                    </td>\r\n\r\n\r\n                                                    <td><i\r\n                                                        title=\"Manage status\"\r\n                                                        className={`icon-inactive-border ${item.status == 1 ? '' : item.status == \"0\" ? 'active' : ''}`} onClick={() => (item.status == 1) ? this.openStatusModal(item) : this.makeActive(item)} ></i></td>\r\n\r\n                                                    {\r\n                                                        walletRoleAccess &&\r\n                                                        <td><i title=\"Manage wallet\" className=\"icon-wallet\" onClick={() => this.openWalletModal(item)}></i></td>\r\n                                                    }\r\n\r\n                                                    <td className=\"right-th\">\r\n                                                        {item.is_flag == 1 &&\r\n                                                            <img src={Images.FLAG_ENABLE} alt=\"\" />\r\n                                                        }\r\n                                                        {item.is_flag == 0 &&\r\n                                                            <i className=\"icon-flag\"></i>\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td colSpan=\"8\">\r\n                                                {(userslist.length == 0 && !posting) ?\r\n                                                    <div className=\"no-records\">\r\n                                                        No Record Found.</div>\r\n                                                    :\r\n                                                    <Loader />\r\n                                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                            }\r\n                        </Table>\r\n                        {\r\n                            userslist.length != 0 &&\r\n                            <div className=\"custom-pagination lobby-paging\">\r\n                                <Pagination\r\n                                    activePage={filter.current_page}\r\n                                    itemsCountPerPage={filter.items_perpage}\r\n                                    totalItemsCount={total}\r\n                                    pageRangeDisplayed={5}\r\n                                    onChange={e => this.handlePageChange(e)}\r\n                                />\r\n                            </div>\r\n                        }\r\n\r\n\r\n\r\n                        <div className=\"active-modal\">\r\n                            <ChangeStatus closeStatusModal={this.closeStatusModal} user_unique_id={this.state.user_unique_id} StatusmodalIsOpen={this.state.StatusmodalIsOpen} user_full_name={this.state.user_full_name} ></ChangeStatus>\r\n                        </div>\r\n\r\n                        <div className=\"verify-card-modal\">\r\n                            <Modal\r\n                                isOpen={this.state.ACverifymodalIsOpen}\r\n                                className=\"modal-md\"\r\n                                toggle={this.closeACverifyModal}\r\n                            >\r\n                                <ModalHeader toggle={this.toggle}>Account Verify</ModalHeader>\r\n                                <ModalBody>\r\n                                    <VerifyDocument\r\n                                        nameflag=\"1\"\r\n                                        closeACverifyModal={this.closeACverifyModal}\r\n                                        userDetail={this.state.userDetail}\r\n                                        updatePanDtl={this.reloadPanModalData}\r\n                                        updateBankDtl={this.reloadBankModalData}\r\n                                    />\r\n                                </ModalBody>\r\n                               \r\n                            </Modal>\r\n                        </div>\r\n                        {WalletmodalIsOpen &&\r\n                            <div className=\"wallet-modal\">\r\n                                <Wallet {...Wallet_props} />\r\n                            </div>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\nexport default Manageuser"],"sourceRoot":""}