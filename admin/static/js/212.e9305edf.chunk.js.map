{"version":3,"sources":["views/Settings/EmailSetting.jsx"],"names":["EmailSetting","props","handleModuleChange","indx","state","setState","updateSetting","params","key_name","key_value","WSManager","Rest","NC","then","responseJson","response_code","notify","show","message","catch","error","this","getEmailSetting","Response","_","isEmpty","data","className","md","map","item","idx","key","sm","htmlFor","name","type","checked","onChange","Component"],"mappings":"uVAMqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAuBVC,mBAAqB,SAACC,GAAU,IACtBH,EAAiB,EAAKI,MAAtBJ,aACNA,EAAaG,GAAb,UAAqE,KAAnCH,EAAaG,GAAb,UAAyC,IAAM,IACjF,EAAKE,SAAS,CACVL,iBACD,kBACC,EAAKM,cAAcH,OA9BR,EAkCnBG,cAAgB,SAACH,GAAU,IACjBH,EAAiB,EAAKI,MAAtBJ,aACFO,EAAS,CACT,SAAYP,EAAaG,GAAMK,SAC/B,OAAUR,EAAaG,GAAMM,WAEjCC,IAAUC,KAAKC,KAAaA,KAA8BL,GAAQM,MAAK,SAACC,GAChEA,EAAaC,gBAAkBH,MAC/BI,SAAOC,KAAKH,EAAaI,QAAS,UAAW,QAElDC,OAAM,SAACC,GACNJ,SAAOC,KAAKL,KAAiB,QAAS,SA3C1C,EAAKR,MAAQ,CACTJ,aAAc,IAHH,E,gEAOfqB,KAAKC,oB,wCAGU,IAAD,OACdZ,IAAUC,KAAKC,KAAaA,KAAsB,IAAIC,MAAK,SAAAU,GACnDA,EAASR,eAAiBH,KAC1B,EAAKP,SAAS,CACVL,aAAewB,IAAEC,QAAQF,EAASG,MAAwB,GAAhBH,EAASG,OAGvDV,SAAOC,KAAKL,KAAiB,QAAS,QAE3CO,OAAM,SAAAC,GACLJ,SAAOC,KAAKL,KAAiB,QAAS,U,+BA6BpC,IAAD,OACCZ,EAAiBqB,KAAKjB,MAAtBJ,aACN,OACI,yBAAK2B,UAAU,yBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAI,IACL,wBAAID,UAAU,UAAd,mBAGR,yBAAKA,UAAU,2BAEPH,IAAEK,IAAI7B,GAAc,SAAC8B,EAAMC,GACvB,OACI,kBAAC,IAAD,CAAKC,IAAKD,GACN,kBAAC,IAAD,CAAKE,GAAI,IACL,2BAAOC,QAAQ,WAAWP,UAAU,wBAAwBG,EAAKK,MACjE,yBAAKR,UAAU,mCACX,2BAAOA,UAAU,iBACb,2BACIS,KAAK,WACLC,QAA2B,KAAlBP,EAAKrB,UACd6B,SAAU,kBAAM,EAAKpC,mBAAmB6B,MAE5C,0BAAMJ,UAAU,sBACZ,0BAAMA,UAAS,oBAAiC,KAAlBG,EAAKrB,UAAmB,SAAW,KAAjE,MACA,0BAAMkB,UAAS,qBAAkC,KAAlBG,EAAKrB,UAAmB,SAAW,KAAlE,qB,GA3EV8B","file":"static/js/212.e9305edf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col } from 'reactstrap';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport _ from 'lodash';\r\nexport default class EmailSetting extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            EmailSetting: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getEmailSetting()\r\n    }\r\n\r\n    getEmailSetting() {\r\n        WSManager.Rest(NC.baseURL + NC.GET_EMAIL_SETTING, {}).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                this.setState({\r\n                    EmailSetting: !_.isEmpty(Response.data) ? Response.data : []\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    handleModuleChange = (indx) => {\r\n        let { EmailSetting } = this.state\r\n        EmailSetting[indx]['key_value'] = EmailSetting[indx]['key_value'] == \"1\" ? \"0\" : \"1\";\r\n        this.setState({\r\n            EmailSetting\r\n        }, () =>\r\n            this.updateSetting(indx)\r\n        )\r\n    }\r\n\r\n    updateSetting = (indx) => {\r\n        let { EmailSetting } = this.state\r\n        let params = {\r\n            \"key_name\": EmailSetting[indx].key_name,\r\n            \"status\": EmailSetting[indx].key_value\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.SAVE_EMAIL_SETTING_STATUS, params).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                notify.show(responseJson.message, \"success\", 3000)\r\n            }\r\n        }).catch((error) => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { EmailSetting } = this.state\r\n        return (\r\n            <div className=\"min-wdl-page hub-page\">\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <h2 className=\"h2-cls\">Email Setting</h2>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"hp-dy-banners hp-bg-box\">                    \r\n                    {\r\n                        _.map(EmailSetting, (item, idx) => {\r\n                            return (\r\n                                <Row key={idx}>\r\n                                    <Col sm={12}>\r\n                                        <label htmlFor=\"language\" className=\"float-left mb-0 mt-1\">{item.name}</label>\r\n                                        <div className=\"activate-module float-left ml-5\">\r\n                                            <label className=\"global-switch\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={item.key_value == \"1\" ? false : true}\r\n                                                    onChange={() => this.handleModuleChange(idx)}\r\n                                                />\r\n                                                <span className=\"switch-slide round\">\r\n                                                    <span className={`switch-on ${item.key_value == \"1\" ? 'active' : ''}`}>ON</span>\r\n                                                    <span className={`switch-off ${item.key_value == \"0\" ? 'active' : ''}`}>OFF</span>\r\n                                                </span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}