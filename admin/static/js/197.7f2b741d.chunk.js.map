{"version":3,"sources":["views/Coins/QuestionDetails.jsx"],"names":["SortRating","QuestionDetails","props","handleTypeChange","value","setState","Filter","getQuestionDetails","state","PERPAGE","NC","CURRENT_PAGE","CommentsDetails","QuestionHistoryItem","QuestionStatus","CommentListPosting","this","params","feedback_question_id","match","qid","items_perpage","current_page","sort_rating","_","isEmpty","WSManager","Rest","then","Response","response_code","data","question","totalCoinsDistributed","total_coins_distributed","comments","Total","total","NextOffset","next_offset","catch","error","notify","show","Select_Props","is_disabled","is_searchable","is_clearable","menu_is_open","class_name","sel_options","place_holder","selected_value","modalCallback","Fragment","className","onClick","history","push","md","htmlFor","coins","status","SelectProps","map","item","idx","key","moment","added_date","format","username","svgIconViewBox","svgIconPath","starRatedColor","starEmptyColor","starDimension","numberOfStars","name","rating","starSpacing","answer","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","e","handlePageChange","Component"],"mappings":"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","file":"static/js/197.7f2b741d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col } from 'reactstrap';\r\nimport WSManager from '../../helper/WSManager';\r\nimport * as NC from '../../helper/NetworkingConstants';\r\nimport { notify } from 'react-notify-toast';\r\nimport Select from 'react-select';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport StarRatings from 'react-star-ratings';\r\nimport Pagination from \"react-js-pagination\";\r\nimport Loader from '../../components/Loader';\r\nimport SelectDropdown from \"../../components/SelectDropdown\";\r\n\r\nconst SortRating = [\r\n    { 'value': '0', 'label': 'All' },\r\n    { 'value': '5', 'label': '5 Star' },\r\n    { 'value': '4', 'label': '4 Star' },\r\n    { 'value': '3', 'label': '3 Star' },\r\n    { 'value': '2', 'label': '2 Star' },\r\n    { 'value': '1', 'label': '1 Star' },\r\n]\r\nclass QuestionDetails extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            PERPAGE: NC.ITEMS_PERPAGE,\r\n            CURRENT_PAGE: 1,\r\n            QuestionDetails: [],\r\n            CommentsDetails: [],\r\n            QuestionHistoryItem: [],\r\n            QuestionStatus: 1,\r\n            CommentListPosting: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuestionDetails()\r\n    }\r\n\r\n    getQuestionDetails() {\r\n        this.setState({ CommentListPosting: true })\r\n        let { PERPAGE, CURRENT_PAGE, Filter } = this.state\r\n        let params = {\r\n            feedback_question_id: this.props.match.params.qid,\r\n            items_perpage: PERPAGE,\r\n            current_page: CURRENT_PAGE,\r\n            sort_rating: !_.isEmpty(Filter) ? Filter.value : 0, \r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_FEEDBACK_QUESTION_DETAILS, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                this.setState({\r\n                    CommentListPosting: false,\r\n                    QuestionDetails: Response.data.question,\r\n                    totalCoinsDistributed: Response.data.total_coins_distributed,\r\n                    CommentsDetails: Response.data.comments,\r\n                    Total: Response.data.total,\r\n                    NextOffset: Response.data.next_offset,\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    handlePageChange(current_page) {\r\n        this.setState({\r\n            CURRENT_PAGE: current_page\r\n        }, this.getQuestionDetails);\r\n    }\r\n\r\n    handleTypeChange = (value) => {\r\n        this.setState({ Filter: value }, this.getQuestionDetails)\r\n    }\r\n\r\n    render() {\r\n        let { Filter, CommentListPosting, CommentsDetails, QuestionDetails, Total, CURRENT_PAGE, PERPAGE, totalCoinsDistributed } = this.state\r\n        const Select_Props = {\r\n            is_disabled: false,\r\n            is_searchable: false,\r\n            is_clearable: false,\r\n            menu_is_open: false,\r\n            class_name: \"form-control\",\r\n            sel_options: SortRating,\r\n            place_holder: \"Most Rated\",\r\n            selected_value: Filter,\r\n            modalCallback: this.handleTypeChange\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"qu-details-box animated fadeIn\">\r\n                    <div onClick={() => this.props.history.push('/coins/promotions/')} className=\"go-back\">{'<'} Back</div>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div className=\"question-wrapper\">\r\n                                <figure className=\"question-img\">\r\n                                    <i className=\"icon-question\"></i>\r\n                                </figure>\r\n                                <div className=\"question-info\">\r\n                                    <div className=\"ques\">{QuestionDetails.question}</div>\r\n                                    <ul className=\"ques-avail-list\">\r\n                                        <li className=\"ques-avail-item\">\r\n                                            <label htmlFor=\"Redeemedby\">Total Feedbacks</label>\r\n                                            <div className=\"numbers\">{Total ? Total : 0}</div>\r\n                                        </li>\r\n                                        <li className=\"ques-avail-item\">\r\n                                            <label htmlFor=\"Redeemedby\">Coins Redeem per user</label>\r\n                                            <div className=\"numbers\">{QuestionDetails.coins ? QuestionDetails.coins : 0}</div>\r\n                                        </li>\r\n                                        <li className=\"ques-avail-item\">\r\n                                            <label htmlFor=\"Redeemedby\">Total Coins Distributed</label>\r\n                                            <div className=\"numbers\">{totalCoinsDistributed ? totalCoinsDistributed : 0}</div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className={`reward-status ${QuestionDetails.status ? '' : 'inactive'}`}>\r\n                                    {QuestionDetails.status ? 'Active' : 'Inactive'}\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"sort-question\">\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <SelectDropdown SelectProps={Select_Props} />\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                <div className=\"help-text\">\r\n                                    Only approved feedbacks are shown.\r\n</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div className=\"pending-items\">\r\n                                {\r\n                                    Total > 0 ?\r\n                                        _.map(CommentsDetails, (item, idx) => {\r\n                                            return (\r\n                                                <div key={idx} className=\"pending-wrapper\">\r\n                                                    <Row className=\"b-bottom\">\r\n                                                        <Col md={12}>\r\n                                                            <div>\r\n                                                                <div className=\"top-box\">\r\n                                                                    <div className=\"pending-date\">\r\n                                                                        {moment(item.added_date).format(\"DD MMM\")} \r\n                                                                    </div>\r\n                                                                    <div className=\"username float-left\">\r\n                                                                        {item.username ? item.username : '--'}\r\n                                                                        </div>\r\n                                                                    <div className=\"stars\">\r\n                                                                        <StarRatings\r\n                                                                            svgIconViewBox=\"0 0 20 20\"\r\n                                                                            svgIconPath=\"M9.5 14.25l-5.584 2.936 1.066-6.218L.465 6.564l6.243-.907L9.5 0l2.792 5.657 6.243.907-4.517 4.404 1.066 6.218\"\r\n                                                                            className=\"star-ratings\"\r\n                                                                            starRatedColor=\"#F8436E\"\r\n                                                                            starEmptyColor='#DFDFDF'\r\n                                                                            starDimension=\"24px\"\r\n                                                                            numberOfStars={5}\r\n                                                                            name='rating'\r\n                                                                            rating={item.rating}\r\n                                                                            starSpacing=\"0\"\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"suggestions\">\r\n                                                                    <div className=\"answer\">{item.answer}</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                        :\r\n                                        <Col md={12}>\r\n                                            {(Total == 0 && !CommentListPosting) ?\r\n                                                <div className=\"no-records mt-4\">{NC.NO_RECORDS}</div>\r\n                                                :\r\n                                                <Loader />\r\n                                            }\r\n                                        </Col>\r\n                                }\r\n\r\n                                {Total > NC.ITEMS_PERPAGE && (\r\n                                    <div className=\"custom-pagination\">\r\n                                        <Pagination\r\n                                            activePage={CURRENT_PAGE}\r\n                                            itemsCountPerPage={PERPAGE}\r\n                                            totalItemsCount={Total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={e => this.handlePageChange(e)}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                                }\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default QuestionDetails"],"sourceRoot":""}