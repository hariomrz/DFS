{"version":3,"sources":["components/CustomComponent.jsx","components/SelectDate.jsx","views/Report/UserReferralReport.jsx"],"names":["MomentDateComponent","data","date","format","WSManager","getUtcToLocal","SelectDate","this","props","DateProps","disabled_date","min_date","max_date","class_name","year_dropdown","month_dropdown","sel_date","date_key","place_holder","show_time_select","time_format","time_intervals","time_caption","date_format","popup_placement","disabled","minDate","_isNull","Date","maxDate","className","showYearDropdown","showMonthDropdown","selected","onChange","dap","handleCallbackFn","placeholderText","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","popperPlacement","Component","UserReferralReport","getReportUser","setState","posting","state","PERPAGE","CURRENT_PAGE","Keyword","FromDate","ToDate","sortField","params","items_perpage","total_items","current_page","sort_order","isDescOrder","sort_field","csv","from_date","HF","getFormatedDateTime","to_date","keyword","Rest","NC","then","ResponseJson","response_code","UserReportList","result","TotalUser","total","notify","show","catch","error","exportReport_Post","report_type","message","exportReport_Get","tempFromDate","tempToDate","sOrder","query_string","exportFunction","exportReffered","UserId","handleTypeChange","value","name","handleDate","dateType","searchByUser","e","target","SearchCodeReq","clearFilter","now","getTodayDate","startDate","endDate","isLineupModalOpen","detialData","_","debounce","bind","user_id","prevState","length","sortfiled","Order","sameDateProp","FromDateProps","ToDateProps","md","placeholder","onClick","sortContest","map","item","idx","key","history","push","user_unique_id","user_name","phone_no","email","TotalReferral","TotalRegistered","referal_bonus_amount","referal_real_amount","referal_coin_amount","lineupDetailModal","referral_detail","colSpan","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange","isOpen","toggle","ditem","friend_email","added_date","earned_bonus","earned_real","earned_coin","status"],"mappings":"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","file":"static/js/151.31aac710.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport WSManager from '../helper/WSManager';\r\nexport function MomentDateComponent({ data }) {\r\n    let date = data.date;\r\n    let format = data.format;\r\n    return (date ? <Moment date={WSManager.getUtcToLocal(date)} format={format} /> : '')\r\n}","import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { _isNull } from '../helper/HelperFunction';\r\nimport { DATE_FORMAT} from \"../helper/NetworkingConstants\";\r\nimport { _isUndefined } from '../helper/HelperFunction';\r\n\r\n// import { registerLocale } from \"react-datepicker\";\r\n// import enIN from 'date-fns/locale/en-IN';\r\n// registerLocale('enIN', enIN)\r\n\r\nclass SelectDate extends Component {\r\n    render() {\r\n        let { disabled_date, min_date, max_date, class_name, year_dropdown, month_dropdown, sel_date, date_key, place_holder, show_time_select, time_format, time_intervals, time_caption, date_format, popup_placement } = this.props.DateProps\r\n\r\n        // console.log(\"---enIN---\", enIN);\r\n        \r\n        return (\r\n            <DatePicker\r\n                disabled={disabled_date}\r\n                minDate={!_isNull(min_date) ? new Date(min_date) : null}\r\n                maxDate={!_isNull(max_date) ? new Date(max_date) : null}\r\n                className={class_name}\r\n                showYearDropdown={year_dropdown}\r\n                showMonthDropdown={month_dropdown}\r\n                // selected={new Date(sel_date)}\r\n                selected={!_isNull(sel_date) ? new Date(sel_date) : null}\r\n                onChange={dap => this.props.DateProps.handleCallbackFn(dap, date_key)}\r\n                placeholderText={place_holder}\r\n                showTimeSelect={show_time_select}\r\n                timeFormat={time_format}\r\n                timeIntervals={time_intervals}\r\n                timeCaption={time_caption}\r\n                dateFormat={date_format}\r\n                popperPlacement={popup_placement ? popup_placement : 'bottom-start'}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SelectDate\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, Button, Table, Input, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport _ from 'lodash';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Loader from '../../components/Loader';\r\nimport HF from '../../helper/HelperFunction';\r\nimport SelectDate from \"../../components/SelectDate\";\r\nimport { MomentDateComponent } from \"../../components/CustomComponent\";\r\nexport default class UserReferralReport extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            TotalUser: 0,\r\n            PERPAGE: NC.ITEMS_PERPAGE,\r\n            CURRENT_PAGE: 1,\r\n            startDate: '',\r\n            endDate: '',\r\n            FromDate: new Date(Date.now() - ((HF.getTodayDate()) - 1) * 24 * 60 * 60 * 1000),\r\n            ToDate: new Date(),\r\n            UserReportList: [],\r\n            Keyword: '',\r\n            sortField: 'first_name',\r\n            isDescOrder: true,\r\n            isLineupModalOpen: false,\r\n            detialData: [],\r\n            posting: false,\r\n            UserId: '',\r\n        }\r\n        this.SearchCodeReq = _.debounce(this.SearchCodeReq.bind(this), 500);\r\n    }\r\n    componentDidMount() {\r\n        this.getReportUser()\r\n    }\r\n    lineupDetailModal(data, user_id) {\r\n        this.setState({ detialData: data, UserId: user_id })\r\n        this.setState(prevState => ({\r\n            isLineupModalOpen: !prevState.isLineupModalOpen\r\n        }));\r\n    }\r\n\r\n    getReportUser = () => {\r\n        this.setState({ posting: true })\r\n        const { PERPAGE, CURRENT_PAGE, Keyword, FromDate, ToDate, sortField, isDescOrder } = this.state\r\n        let params = {\r\n            items_perpage: PERPAGE,\r\n            total_items: 0,\r\n            current_page: CURRENT_PAGE,\r\n            sort_order: isDescOrder ? \"ASC\" : 'DESC',\r\n            sort_field: sortField,\r\n            csv: false,\r\n            from_date: FromDate ? HF.getFormatedDateTime(FromDate, 'YYYY-MM-DD') : '',\r\n            to_date: ToDate ? HF.getFormatedDateTime(ToDate, 'YYYY-MM-DD') : '',\r\n            keyword: Keyword,\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.REFERAL_REPORT, params).then(ResponseJson => {\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n                this.setState({\r\n                    posting: false,\r\n                    UserReportList: ResponseJson.data.result,\r\n                    TotalUser: ResponseJson.data.total\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    exportReport_Post = () => {\r\n        const { Keyword, FromDate, ToDate, sortField, isDescOrder } = this.state\r\n        let params = {\r\n            sort_order: isDescOrder ? \"ASC\" : 'DESC',\r\n            sort_field: sortField,\r\n            from_date: FromDate,\r\n            to_date: ToDate,\r\n            keyword: Keyword,\r\n            report_type: \"referral\"\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.EXPORT_REPORT, params).then(ResponseJson => {\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n                notify.show(ResponseJson.message, \"success\", 5000);\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    exportReport_Get = () => {\r\n        let { Keyword, FromDate, ToDate, isDescOrder, sortField } = this.state\r\n        let tempFromDate = ''\r\n        let tempToDate = ''\r\n        let sOrder = isDescOrder ? \"ASC\" : 'DESC'\r\n        if (FromDate != '' && ToDate != '') {\r\n            tempFromDate = FromDate ? HF.getFormatedDateTime(FromDate, 'YYYY-MM-DD') : '';\r\n            tempToDate = ToDate ? HF.getFormatedDateTime(ToDate, 'YYYY-MM-DD') : '';\r\n        }\r\n\r\n        var query_string = 'report_type=referral&csv=1&keyword=' + Keyword + '&from_date=' + tempFromDate + '&to_date=' + tempToDate + '&sort_order=' + sOrder + '&sort_field=' + sortField;\r\n        var export_url = 'adminapi/index.php/report/referal_report?';\r\n\r\n        HF.exportFunction(query_string, export_url)\r\n    }\r\n    \r\n    exportReffered = () => {\r\n        let { FromDate, ToDate, isDescOrder, UserId } = this.state\r\n        let tempFromDate = ''\r\n        let tempToDate = ''\r\n        let sOrder = isDescOrder ? \"ASC\" : 'DESC'\r\n        if (FromDate != '' && ToDate != '') {\r\n            tempFromDate = FromDate ? HF.getFormatedDateTime(FromDate, 'YYYY-MM-DD') : '';\r\n            tempToDate = ToDate ? HF.getFormatedDateTime(ToDate, 'YYYY-MM-DD') : '';\r\n        }\r\n\r\n        var query_string = 'csv=1&user_id=' + UserId + '&from_date=' + tempFromDate + '&to_date=' + tempToDate;\r\n\r\n        var export_url = 'adminapi/index.php/report/export_referral_list_by_user?';\r\n\r\n        HF.exportFunction(query_string, export_url)\r\n    }\r\n\r\n    handleTypeChange = (value, name) => {\r\n        if (value != null)\r\n            this.setState({ [name]: value }, this.getReportUser)\r\n    }\r\n\r\n    handleDate = (date, dateType) => {\r\n        this.setState({ [dateType]: date }, () => {\r\n            if (this.state.FromDate || this.state.ToDate) {\r\n                this.getReportUser()\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handlePageChange(current_page) {\r\n        if (current_page !== this.state.CURRENT_PAGE) {\r\n            this.setState({\r\n                CURRENT_PAGE: current_page\r\n            }, () => {\r\n                this.getReportUser();\r\n            });\r\n        }\r\n    }\r\n    searchByUser = (e) => {\r\n        this.setState({ Keyword: e.target.value }, this.SearchCodeReq)\r\n    }\r\n\r\n    SearchCodeReq() {\r\n        if (this.state.Keyword.length > 2)\r\n            this.getReportUser()\r\n    }\r\n    clearFilter = () => {\r\n        this.setState({\r\n            FromDate: new Date(Date.now() - ((HF.getTodayDate()) - 1) * 24 * 60 * 60 * 1000),\r\n            ToDate: new Date(),\r\n            Keyword: '',\r\n            isDescOrder: true,\r\n            sortField: 'first_name'\r\n        }, () => {\r\n            this.getReportUser()\r\n        }\r\n        )\r\n    }\r\n    sortContest(sortfiled, isDescOrder) {\r\n        let Order = sortfiled == this.state.sortField ? !isDescOrder : isDescOrder\r\n        this.setState({\r\n            sortField: sortfiled,\r\n            isDescOrder: Order,\r\n            CURRENT_PAGE: 1,\r\n\r\n        }, this.getReportUser)\r\n    }\r\n    render() {\r\n        const { UserReportList, CURRENT_PAGE, PERPAGE, TotalUser, Keyword, isDescOrder, detialData, posting, FromDate, ToDate } = this.state\r\n        const sameDateProp = {\r\n            disabled_date: false,\r\n            show_time_select: false,\r\n            time_format: false,\r\n            time_intervals: false,\r\n            time_caption: false,\r\n            date_format: 'dd/MM/yyyy',\r\n            handleCallbackFn: this.handleDate,\r\n            class_name: 'form-control mr-3',\r\n            year_dropdown: true,\r\n            month_dropdown: true,\r\n        }\r\n        const FromDateProps = {\r\n            ...sameDateProp,\r\n            min_date: false,\r\n            max_date: new Date(ToDate),\r\n            sel_date: new Date(FromDate),\r\n            date_key: 'FromDate',\r\n            place_holder: 'From Date',\r\n        }\r\n        const ToDateProps = {\r\n            ...sameDateProp,\r\n            min_date: new Date(FromDate),\r\n            max_date: new Date(),\r\n            sel_date: new Date(ToDate),\r\n            date_key: 'ToDate',\r\n            place_holder: 'To Date',\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <div className=\"animated fadeIn promocode-view mt-4\">\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <h1 className=\"h1-cls\">Referral Report</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"promocode-list-view\">\r\n\r\n                        <Row className=\"filter-userlist mt-5\">\r\n                            <Col md={6}>\r\n                                <div className=\"float-left\">\r\n                                    <label className=\"filter-label\">Start Date</label>\r\n                                    <SelectDate DateProps={FromDateProps} />\r\n                                </div>\r\n                                <div className=\"float-left\">\r\n                                    <label className=\"filter-label\">End Date</label>\r\n                                    <SelectDate DateProps={ToDateProps} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <div className=\"search-box\">\r\n                                    <label className=\"filter-label\">Search User</label>\r\n                                    <Input\r\n                                        placeholder=\"Search User\"\r\n                                        name='code'\r\n                                        value={Keyword}\r\n                                        onChange={this.searchByUser}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"filters-box\">\r\n                            <Col md={11}>\r\n                                <div className=\"filters-area\">\r\n                                    <Button className=\"btn-secondary\" onClick={() => this.clearFilter()}>Clear Filters</Button>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={1} className=\"\">\r\n                                <i className=\"export-list icon-export\"\r\n                                    onClick={e => (TotalUser > NC.EXPORT_REPORT_LIMIT) ? this.exportReport_Post() : this.exportReport_Get()}></i>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"filters-box\">\r\n                            <Col md={12}>\r\n                                <div className=\"filters-area\">\r\n                                    <h4>Total Record Count:{TotalUser}</h4>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={12} className=\"table-responsive common-table\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('user_name', isDescOrder)}>UserName</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('phone_no', isDescOrder)}>Phone</th>\r\n                                            <th className=\"pointer\" onClick={() => this.sortContest('email', isDescOrder)}>Email</th>\r\n                                            <th>Referral Sent</th>\r\n                                            <th>Registered</th>\r\n                                            <th>Referral Cash</th>\r\n                                            <th>Referral Bonus</th>\r\n                                            <th>Referral Coin</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {\r\n                                        UserReportList.length > 0 ?\r\n                                            _.map(UserReportList, (item, idx) => {\r\n                                                return (\r\n                                                    <tbody key={idx}>\r\n                                                        <tr>\r\n                                                            <td><a onClick={() => this.props.history.push(\"/profile/\" + item.user_unique_id)} className=\"text-click\">{item.user_name}</a></td>\r\n                                                            <td>{item.phone_no}</td>\r\n                                                            <td>{item.email}</td>\r\n                                                            <td>{item.TotalReferral}</td>\r\n                                                            <td>{item.TotalRegistered}</td>\r\n                                                            <td>{item.referal_bonus_amount}</td>\r\n                                                            <td>{item.referal_real_amount}</td>\r\n                                                            <td>{item.referal_coin_amount}</td>\r\n                                                            <td><a className=\"pointer\" onClick={() => this.lineupDetailModal(item.referral_detail,item.user_id)}><i className=\"icon-info-border\"></i></a></td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                )\r\n                                            })\r\n                                            :\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan='22'>\r\n                                                        {(UserReportList.length == 0 && !posting) ?\r\n                                                            <div className=\"no-records\">No Record Found.</div>\r\n                                                            :\r\n                                                            <Loader />\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                    }\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                        {TotalUser > PERPAGE && (\r\n                            <div className=\"custom-pagination lobby-paging\">\r\n                                <Pagination\r\n                                    activePage={CURRENT_PAGE}\r\n                                    itemsCountPerPage={PERPAGE}\r\n                                    totalItemsCount={TotalUser}\r\n                                    pageRangeDisplayed={5}\r\n                                    onChange={e => this.handlePageChange(e)}\r\n                                />\r\n                            </div>\r\n                        )\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <Modal isOpen={this.state.isLineupModalOpen} toggle={() => this.lineupDetailModal()} className=\"ref-modal lineup-details modal-lg\">\r\n                            <ModalHeader>                                \r\n                                <a onClick={e => this.exportReffered()}>Export list</a>\r\n                            </ModalHeader>\r\n                            <ModalBody className=\"p-0\">\r\n\r\n                                <Row className=\"mb-5\">\r\n                                    <Col md={12}>\r\n                                        <div className=\"table-responsive common-table\">\r\n                                            <Table>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th className=\"pl-4\">S.No</th>\r\n                                                        <th>Referral Sent To</th>\r\n                                                        <th>Date</th>\r\n                                                        <th>Earned Bonus</th>\r\n                                                        <th>Earned Real Cash</th>\r\n                                                        <th>Earned Coins</th>\r\n                                                        <th>Status</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                {\r\n                                                    _.map(detialData, (ditem, idx) => {\r\n                                                        return (\r\n                                                            <tbody key={idx}>\r\n                                                                <tr>\r\n                                                                    <td className=\"pl-4\">{idx + 1}</td>\r\n                                                                    <td>\r\n                                                                        {ditem.friend_email}\r\n                                                                    </td>\r\n                                                                    <td>\r\n                                                                        <MomentDateComponent data={{ date: ditem.added_date, format: \"D-MMM-YYYY hh:mm A \" }} />\r\n                                                                    </td>\r\n                                                                    <td>{ditem.earned_bonus}</td>\r\n                                                                    <td>{ditem.earned_real}</td>\r\n                                                                    <td>{ditem.earned_coin}</td>\r\n                                                                    <td>{ditem.status == 1 ? 'Joined' : ''}</td>\r\n\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Table>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ModalBody>\r\n                        </Modal>\r\n                    </div>\r\n\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}