{"version":3,"sources":["views/Cms/WalletSetting.jsx"],"names":["WalletSetting","props","handleInputChange","e","name","target","value","setState","_","isEmpty","state","HeaderTxt","notify","show","formValid","BodyTxt","handleLangChange","isNull","LanguageType","getContent","languageOptions","HF","getLanguageData","this","params","WSManager","Rest","NC","then","Response","response_code","data","catch","error","message","Select_Props","is_disabled","is_searchable","is_clearable","menu_is_open","class_name","sel_options","place_holder","selected_value","modalCallback","className","md","htmlFor","SelectProps","maxLength","type","placeholder","onChange","disabled","onClick","updateConfiguration","Component"],"mappings":"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","file":"static/js/196.122e4f9e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Input, Button } from 'reactstrap';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport _ from 'lodash';\r\nimport Select from 'react-select';\r\nimport HF from '../../helper/HelperFunction';\r\nimport SelectDropdown from \"../../components/SelectDropdown\";\r\nexport default class WalletSetting extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            LanguageType: 'en',\r\n            languageOptions: HF.getLanguageData() ? HF.getLanguageData() : [],\r\n            HeaderTxt: '',\r\n            BodyTxt: '',\r\n            formValid: true\r\n        }\r\n    }\r\n    componentDidMount() { \r\n        this.getContent()\r\n    }\r\n\r\n    getContent() {\r\n        let { LanguageType } = this.state\r\n\r\n        let params = {\r\n            \"language\": LanguageType,\r\n            \"content_key\": \"wallet\"\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.WLT_GET_CONTENT, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                this.setState({ \r\n                    HeaderTxt: Response.data[LanguageType +'_header'] ,\r\n                    BodyTxt: Response.data[LanguageType +'_body'] ,\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        this.setState({ [name]: value, formValid: false }, () => {\r\n\r\n            if (_.isEmpty(this.state.HeaderTxt)) {\r\n                let msg = 'Header can not be empty.'\r\n                notify.show(msg, 'error', 3000)\r\n                this.setState({ formValid: true })\r\n                return false\r\n            }\r\n\r\n            if (_.isEmpty(this.state.BodyTxt)) {\r\n                let msg = 'Body can not be empty.'\r\n                notify.show(msg, 'error', 3000)\r\n                this.setState({ formValid: true })\r\n                return false\r\n            }\r\n\r\n            if (this.state.HeaderTxt < 2 && this.state.HeaderTxt > 14) {\r\n                let msg = 'Header should be between 2 to 14 character.'\r\n                notify.show(msg, 'error', 3000)\r\n                this.setState({ formValid: true })\r\n                return false\r\n            }\r\n\r\n            if (this.state.BodyTxt < 2 && this.state.BodyTxt > 33) {\r\n                let msg = 'Body should be between 2 to 33 character'\r\n                notify.show(msg, 'error', 3000)\r\n                this.setState({ formValid: true })\r\n                return false\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    updateConfiguration() {\r\n        this.setState({ formValid : true })\r\n        let { HeaderTxt, BodyTxt, LanguageType } = this.state\r\n\r\n        let params = {\r\n            \"content_key\": \"wallet\",\r\n            [LanguageType + '_header']: HeaderTxt,\r\n            [LanguageType + '_body']: BodyTxt\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.WLT_UPDATE_CONTENT, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                notify.show(Response.message, 'success', 5000)\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    handleLangChange = (value) => {\r\n        if (!_.isNull(value)) {\r\n            this.setState({ LanguageType: value.value }, () => {\r\n                this.getContent()\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { HeaderTxt, BodyTxt, formValid, languageOptions, LanguageType } = this.state\r\n\r\n        const Select_Props = {\r\n            is_disabled: false,\r\n            is_searchable: true,\r\n            is_clearable: false,\r\n            menu_is_open: false,\r\n            class_name: \"form-control\",\r\n            sel_options: languageOptions,\r\n            place_holder: \"Select Language\",\r\n            selected_value: LanguageType,\r\n            modalCallback: this.handleLangChange\r\n        }\r\n        return (\r\n            <div className=\"min-wdl-page hub-page\">\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <h2 className=\"h2-cls\">Wallet</h2>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"hp-dy-banners hp-bg-box\">\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div className=\"hp-dy-title float-left mb-0\">Total Wallet Content</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"hp-lang wallet-lang\">\r\n                        <Col md={3}>\r\n                            <label htmlFor=\"language\">Language</label>\r\n                            <SelectDropdown SelectProps={Select_Props} />\r\n                        </Col>\r\n                        <Col md={9}></Col>\r\n                    </Row>\r\n                    <Row className=\"mt-4\">\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"language\">Header</label>\r\n                            <Input\r\n                                maxLength={14}\r\n                                type=\"text\"\r\n                                placeholder=\"Total Balance\"\r\n                                name='HeaderTxt'\r\n                                value={HeaderTxt}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"language\">Body</label>\r\n                            <Input\r\n                                maxLength={33}\r\n                                type=\"text\"\r\n                                placeholder=\"Winnings + Bonus Cash + Deposit\"\r\n                                name='BodyTxt'\r\n                                value={BodyTxt}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div className=\"float-right mt-30\">\r\n                                <Button\r\n                                    disabled={formValid}\r\n                                    className=\"btn-secondary-outline\"\r\n                                    onClick={() => this.updateConfiguration()}\r\n                                >Save\r\n                            </Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}