{"version":3,"sources":["views/XPModule/EditLevel.jsx"],"names":["AddLevel","props","getLevelList","setState","listPosting","state","PERPAGE","CURRENT_PAGE","params","isDescOrder","items_perpage","current_page","sort_order","sort_field","sortField","WSManager","Rest","NC","then","ApiResponse","response_code","LevelList","data","level_list","Total","total","notify","show","catch","error","handleInputChange","e","idx","name","value","target","upIdx","_isEmpty","msg","level_str","start_point","_Map","itm","indx","end_point","_isUndefined","Number","formValid","SaveLimit","flag","push","level_number","xpUpdateLevel","message","GoToLevels","history","pathname","deleteToggle","lev_id","prevState","deleteIndex","LEV_ID","DeleteModalOpen","deleteLevel","DeletePosting","param","level_pt_id","tempLevelList","xpDeleteLevel","responseJson","_remove","item","setDefPost","LevelSelected","HF","allowXpPoints","this","DeleteModalProps","publishModalOpen","publishPosting","modalActionNo","modalActionYes","MainMessage","XP_DELETE_LEVEL","SubMessage","XP_DELETE_LEVEL_SUB","className","xs","onClick","md","key","type","disabled","onChange","length","colSpan","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange","Component"],"mappings":"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","file":"static/js/216.8c2df0c4.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Input, Button, Row, Col, Table } from 'reactstrap';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { XP_DELETE_LEVEL, XP_DELETE_LEVEL_SUB } from \"../../helper/Message\";\r\nimport PromptModal from '../../components/Modals/PromptModal';\r\nimport { xpDeleteLevel, xpUpdateLevel } from '../../helper/WSCalling';\r\nimport HF, { _times, _Map, _isEmpty, _isNull, _isUndefined, _remove, _find } from \"../../helper/HelperFunction\";\r\nimport Loader from '../../components/Loader';\r\nclass AddLevel extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            PERPAGE: NC.ITEMS_PERPAGE,\r\n            // PERPAGE: 10,\r\n            CURRENT_PAGE: 1,\r\n            start_point: '',\r\n            end_point: '',\r\n            LevelList: [],            \r\n            formValid: true,\r\n            sortField: 'level_number',\r\n            isDescOrder: 'false',\r\n            setDefPost: false,\r\n            LevelSelected: '',\r\n            DeleteModalOpen: false,\r\n            DeletePosting: false,\r\n            listPosting: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if (HF.allowXpPoints() == '0') {\r\n            notify.show(NC.MODULE_NOT_ENABLE, 'error', 5000)\r\n            this.props.history.push('/dashboard')\r\n        }\r\n        this.getLevelList();\r\n    }\r\n\r\n\r\n    getLevelList = () => {\r\n        this.setState({ listPosting: true })\r\n        const { PERPAGE, CURRENT_PAGE, isDescOrder, sortField } = this.state\r\n        let params = {\r\n            items_perpage: PERPAGE,\r\n            current_page: CURRENT_PAGE,\r\n            // sort_order: isDescOrder ? 'DESC' : 'ASC',\r\n            sort_order: 'ASC',\r\n            sort_field: sortField,\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.XP_GET_LEVEL_LIST, params).then(ApiResponse => {\r\n            if (ApiResponse.response_code == NC.successCode) {\r\n                this.setState({\r\n                    LevelList: ApiResponse.data ? ApiResponse.data.level_list : [],\r\n                    Total: ApiResponse.data ? ApiResponse.data.total : '',\r\n                    listPosting: false\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 3000)\r\n        })\r\n    }\r\n\r\n    handlePageChange(current_page) {\r\n        if (current_page !== this.state.CURRENT_PAGE) {\r\n            this.setState({\r\n                CURRENT_PAGE: current_page\r\n            }, () => {\r\n                this.getLevelList();\r\n            });\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e, idx, name) => {\r\n        let { LevelList } = this.state\r\n        let value = e.target.value;\r\n        let upIdx = idx + 1;\r\n        \r\n        if (_isEmpty(value)) {\r\n            let msg = LevelList[idx].level_str + ' ending points can not be empty.'\r\n            notify.show(msg, 'error', 3000)\r\n        }\r\n        if (value == LevelList[idx].start_point) {\r\n            let msg = LevelList[idx].level_str + ' starting and ending points can not be same.'\r\n            notify.show(msg, 'error', 3000)\r\n        }\r\n\r\n        _Map(LevelList, (itm, indx) => {\r\n            LevelList[idx].end_point = value;\r\n            if (!_isUndefined(LevelList[upIdx])) {\r\n                LevelList[upIdx].start_point = Number(value) + 1;\r\n            }\r\n        })\r\n        this.setState({ LevelList, formValid: false })\r\n    }\r\n\r\n    SaveLimit = () => {\r\n        this.setState({ formValid: true })\r\n        let { LevelList } = this.state\r\n        let flag = true\r\n        let params = []\r\n        _Map(LevelList, (itm) => {\r\n            if (_isEmpty(itm.end_point)) {\r\n                let msg = itm.level_str + ' ending points can not be empty.'\r\n                notify.show(msg, 'error', 3000)\r\n                flag = false\r\n            }\r\n            else if (itm.end_point == itm.start_point) {\r\n                let msg = itm.level_str + ' starting and ending points can not be same.'\r\n                notify.show(msg, 'error', 3000)\r\n                flag = false\r\n            }\r\n            if (Number(itm.start_point) > Number(itm.end_point)) {\r\n                let msg = itm.level_str + ' ending points should be greater than starting points.'\r\n                notify.show(msg, 'error', 3000)\r\n                flag = false\r\n            }\r\n\r\n            params.push({\r\n                \"level_number\": itm.level_number,\r\n                \"start_point\": itm.start_point,\r\n                \"end_point\": itm.end_point\r\n            })\r\n        })\r\n\r\n\r\n        if (!flag) {\r\n            this.setState({ formValid: true })\r\n            return false;\r\n        }\r\n\r\n        xpUpdateLevel(params).then(ApiResponse => {\r\n            if (ApiResponse.response_code == NC.successCode) {\r\n                this.setState({ formValid: true })\r\n                notify.show(ApiResponse.message, 'success', 5000)\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    GoToLevels = () => {\r\n        this.props.history.push({ pathname: 'add-level', state: '' })\r\n    }\r\n\r\n    deleteToggle = (lev_id, idx) => {\r\n        this.setState(prevState => ({\r\n            deleteIndex: idx,\r\n            LEV_ID: lev_id,\r\n            DeleteModalOpen: !prevState.DeleteModalOpen\r\n        }));\r\n    }\r\n\r\n    deleteLevel = () => {\r\n        this.setState({ DeletePosting: true })\r\n        const { deleteIndex, LEV_ID, LevelList } = this.state\r\n        const param = { level_pt_id: LEV_ID }\r\n        let tempLevelList = LevelList\r\n\r\n        xpDeleteLevel(param).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                _remove(tempLevelList, function (item, idx) {\r\n                    return idx == deleteIndex\r\n                })\r\n\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n                this.setState({\r\n                    LevelList: tempLevelList,\r\n                    DeletePosting: false,\r\n                    DeleteModalOpen: false,\r\n                })\r\n            }\r\n        }).catch((error) => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 5000);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { LevelList, CURRENT_PAGE, PERPAGE, Total, formValid, DeleteModalOpen, DeletePosting, listPosting } = this.state\r\n\r\n        let DeleteModalProps = {\r\n            publishModalOpen: DeleteModalOpen,\r\n            publishPosting: DeletePosting,\r\n            modalActionNo: this.deleteToggle,\r\n            modalActionYes: this.deleteLevel,\r\n            MainMessage: XP_DELETE_LEVEL,\r\n            SubMessage: XP_DELETE_LEVEL_SUB,\r\n        }\r\n\r\n        return (\r\n            <div className=\"edit-level animated fadeIn\">\r\n                {DeleteModalOpen && <PromptModal {...DeleteModalProps} />}\r\n                <Row className=\"level-sub-header mb-20\">\r\n                    <Col xs={6}>\r\n                        <h2 className=\"animate-left\">Edit Levels:</h2>\r\n                    </Col>\r\n                    <Col xs={6} >\r\n                        <span onClick={() => this.GoToLevels()} className=\"animate-right\"> <i className=\"icon-Shape\"></i> Back to Levels</span>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"white-container xanimate-left\">\r\n                    <Row>\r\n                        <Col md={12} className=\"table-responsive common-table\">\r\n                            <Table>\r\n                                <thead className=\"height-40\">\r\n                                    <tr>\r\n                                        <th className=\"cursor-default\">Level's (Not Editable)</th>\r\n                                        <th className=\"text-center cursor-default\">Starting Points</th>\r\n                                        <th className=\"text-center cursor-default\">Ending Points</th>\r\n                                        <th className=\"text-center cursor-default\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {\r\n                                    Total > 0 ?\r\n                                        _Map(LevelList, (item, idx) => {\r\n                                            return (\r\n                                                <tbody key={idx}>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            {item.level_str}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <div className=\"input-box p-0\">\r\n\r\n                                                                <Input\r\n                                                                    className=\"form-control disable\"\r\n                                                                    type=\"number\"\r\n                                                                    name='start_point'\r\n                                                                    value={item.start_point}\r\n                                                                    //onChange={(e) => this.handleInputChange(e,idx,'start_point')}\r\n                                                                    disabled={true}\r\n                                                                />\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <div className=\"input-box p-0\">\r\n                                                                <Input\r\n                                                                    className=\"form-control\"\r\n                                                                    type=\"number\"\r\n                                                                    name='end_point'\r\n                                                                    value={item.end_point}\r\n                                                                    onChange={(e) => this.handleInputChange(e, idx, 'end_point')}\r\n                                                                />\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {idx == LevelList.length - 1 &&\r\n                                                                <a\r\n                                                                    className=\"pointer\"\r\n                                                                    onClick={() => this.deleteToggle(item.level_pt_id, idx)}>\r\n                                                                    <i className=\"icon-delete\"></i>\r\n                                                                </a>}\r\n                                                        </td>\r\n\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            )\r\n                                        })\r\n                                        :\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td colSpan='22'>\r\n                                                    {(Total == 0 && !listPosting) ?\r\n                                                        <div className=\"no-records\">{NC.NO_RECORDS}</div>\r\n                                                        :\r\n                                                        <Loader />\r\n                                                    }\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                }\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"text-center mt-5 pb-4\">\r\n                        <Col md={12}>\r\n                            <Button\r\n                                disabled={formValid}\r\n                                className=\"btn-secondary-outline mr-3\"\r\n                                onClick={() => this.SaveLimit()}\r\n\r\n                            >\r\n                                Update Level\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {\r\n                    Total > PERPAGE\r\n                    && (\r\n                        <div className=\"custom-pagination lobby-paging\">\r\n                            <Pagination\r\n                                activePage={CURRENT_PAGE}\r\n                                itemsCountPerPage={PERPAGE}\r\n                                totalItemsCount={Total}\r\n                                pageRangeDisplayed={5}\r\n                                onChange={e => this.handlePageChange(e)}\r\n                            />\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddLevel\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}