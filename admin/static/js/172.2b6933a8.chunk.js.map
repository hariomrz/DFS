{"version":3,"sources":["components/ActionRequestModal/ActionRequestModal.jsx","views/Coins/Redeem.jsx"],"names":["ActionRequestModal","props","this","Message","ActionPopupOpen","Screen","posting","Fragment","isOpen","className","toggle","modalCallback","src","Images","ERROR_ICON","alt","onClick","disabled","modalReportActionCallback","modalUpdatePendingCallback","modalActioCallback","Component","Redeem","addReward","setState","formValid","state","params","value","Value","detail","Detail","redeem_coins","Coins","type","RewardType","image","image_name","WSManager","Rest","NC","then","Response","response_code","getRewardList","notify","show","message","ValueMSg","DetailMSg","CoinsMSg","fileName","catch","error","filterReport","flag","filterType","REP_CURRENT_PAGE","getReportsByStatus","exportRewardListByStatus","query_string","getToken","window","open","toggleActionPopup","id","idx","ActionStaus","msg","ScreenView","ActionMsgStatus","indexVal","RewardID","YesPosting","RewardList","status","coin_reward_id","_","remove","item","toggleReportActionPopup","coin_reward_history_id","RepIdx","ReportIndex","CoinRewardHistoryId","ReportRewardList","toggleHistoryModal","HistoryModalOpen","RewardStatus","CoinRewardId","getRewardHistory","HistoryPosting","HIS_CURRENT_PAGE","HIS_PER_PAGE","items_perpage","current_page","ResponseJson","RewardHistoryItem","data","RewardHistoryList","history","TotalHistory","total","handleInputChange","event","name","target","validateForm","ValueValid","DetailValid","CoinsValid","FileNameValid","length","match","isUndefined","isNull","resetChanges","onChangeImage","URL","createObjectURL","files","file","FormData","append","multipartPost","console","log","resetFile","PERPAGE","CURRENT_PAGE","REP_PER_PAGE","Total","activeTab","TotalRecords","RewardListPosting","ReportTotal","parseInt","reward_list","NextOffset","next_offset","tab","list","md","isEmpty","reward_detail","HF","getCurrencyCode","no_image","htmlFor","redeem_by","total_coin_redeem","map","key","moment","added_date","format","username","colSpan","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","e","handleHistoryPageChange","ActionCallback","Posting","tabs","tabId","accept","checked","maxLength","addonType","REWARD_ICON","placeholder","getNumberWithCommas","couponHistoryModal","$oid","handlePageChange","tag","caret","handleReportPageChange"],"mappings":"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","file":"static/js/172.2b6933a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport Images from \"../images\";\r\nclass ActionRequestModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        let { Message, ActionPopupOpen, Screen, posting } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    isOpen={ActionPopupOpen}\r\n                    className=\"modal-sm action-request\"\r\n                    toggle={() => this.props.modalCallback()}\r\n                >\r\n                    <ModalHeader>\r\n                        <img src={Images.ERROR_ICON} alt=\"\" />\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <span className=\"info-text\">{Message}</span>\r\n                    </ModalBody>\r\n                    <ModalFooter className=\"request-footer\">\r\n                        <Button className=\"btn-secondary-outline ripple no-btn\" onClick={this.props.modalCallback}>No</Button>\r\n                        <Button\r\n                            disabled={posting}\r\n                            className=\"btn-secondary-outline ripple\"\r\n                            onClick={() => Screen == 'Report' ? this.props.modalReportActionCallback()\r\n                                :\r\n                                Screen == 'Approve' ?\r\n                                    this.props.modalUpdatePendingCallback()\r\n                                    :\r\n                                    this.props.modalActioCallback()}>Yes</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default ActionRequestModal","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, TabContent, TabPane, Nav, NavItem, NavLink, Input, InputGroup, InputGroupAddon, InputGroupText, Table, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Modal, ModalBody } from 'reactstrap';\r\nimport Images from \"../../components/images\";\r\nimport _ from 'lodash';\r\nimport WSManager from '../../helper/WSManager';\r\nimport * as NC from '../../helper/NetworkingConstants';\r\nimport { notify } from 'react-notify-toast';\r\nimport moment from 'moment';\r\nimport Pagination from \"react-js-pagination\";\r\nimport ActionRequestModal from '../../components/ActionRequestModal/ActionRequestModal';\r\nimport Loader from '../../components/Loader';\r\nimport HF from '../../helper/HelperFunction';\r\nclass Redeem extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            PERPAGE: NC.ITEMS_PERPAGE,\r\n            CURRENT_PAGE: 1,\r\n            HIS_CURRENT_PAGE: 1,\r\n            HIS_PER_PAGE: 10,\r\n            REP_CURRENT_PAGE: 1,\r\n            REP_PER_PAGE: NC.ITEMS_PERPAGE,\r\n            Total: 0,\r\n            activeTab: '1',\r\n            filterType: 1,\r\n            TotalRecords: 0,\r\n            TotalHistory: 0,\r\n            RewardList: [],\r\n            RewardListPosting: false,\r\n            RewardHistoryList: [],\r\n            RewardHistoryItem: [],\r\n            ReportRewardList: [],\r\n            ActionPopupOpen: false,\r\n            HistoryModalOpen: false,\r\n            formValid: false,\r\n            ValueMSg: true,\r\n            DetailMSg: true,\r\n            CoinsMSg: true,\r\n            RewardType: '1',\r\n            Value: '',\r\n            Detail: '',\r\n            Coins: '',\r\n            ScreenView: '',\r\n            RewardStatus: 1,\r\n            ActionMsgStatus: 0,\r\n            HistoryPosting: false,\r\n            CoinRewardId: 0,\r\n            ReportTotal: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getRewardList()\r\n    }\r\n    addReward = () => {\r\n        this.setState({ formValid: false })\r\n        let { Value, Detail, Coins, RewardType, image_name } = this.state\r\n        let params = {\r\n            value: Value,\r\n            detail: Detail,\r\n            redeem_coins: Coins,\r\n            type: RewardType,\r\n            image: image_name,\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.ADD_REWARD, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                this.getRewardList()\r\n                notify.show(Response.message, 'success', 5000)\r\n                this.setState({\r\n                    formValid: true,\r\n                    ValueMSg: true,\r\n                    DetailMSg: true,\r\n                    CoinsMSg: true,\r\n                    RewardType: '1',\r\n                    Value: '',\r\n                    Detail: '',\r\n                    Coins: '',\r\n                    fileName: null\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    getRewardList() {\r\n        this.setState({ RewardListPosting: true })\r\n        let { PERPAGE, CURRENT_PAGE } = this.state\r\n        let params = {\r\n            status: parseInt(this.state.activeTab),\r\n            items_perpage: PERPAGE,\r\n            current_page: CURRENT_PAGE,\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_REWARD_LIST, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                this.setState({\r\n                    RewardListPosting: false,\r\n                    RewardList: Response.data.reward_list,\r\n                    Total: Response.data.total,\r\n                    NextOffset: Response.data.next_offset,\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({ activeTab: tab }, () => {\r\n                if (this.state.activeTab == '0' || this.state.activeTab == '1') {\r\n                    this.setState({\r\n                        PERPAGE: NC.ITEMS_PERPAGE,\r\n                        CURRENT_PAGE: 1,\r\n                    }, this.getRewardList)\r\n                }\r\n                if (this.state.activeTab == '3')\r\n                    this.getReportsByStatus()\r\n            });\r\n        }\r\n    }\r\n    filterReport = (flag) => {\r\n        this.setState({ filterType: flag, REP_CURRENT_PAGE: 1 }, () => {\r\n            this.getReportsByStatus()\r\n        })\r\n    }\r\n\r\n    exportRewardListByStatus = () => {\r\n        var query_string = '?status=' + this.state.filterType;\r\n        let sessionKey = WSManager.getToken();\r\n        query_string += \"&Sessionkey\" + \"=\" + sessionKey;\r\n\r\n        window.open(NC.baseURL + NC.EXPORT_REWARD_LIST_BY_STATUS + query_string, '_blank');\r\n    }\r\n\r\n    getReportsByStatus() {\r\n        let { filterType, REP_CURRENT_PAGE, REP_PER_PAGE } = this.state\r\n        let params = {\r\n            status: filterType,\r\n            items_perpage: REP_PER_PAGE,\r\n            current_page: REP_CURRENT_PAGE,\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_REWARD_LIST_BY_STATUS, params).then(ResponseJson => {\r\n\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n                this.setState({\r\n                    ReportRewardList: ResponseJson.data.list,\r\n                    ReportTotal: ResponseJson.data.total,\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 5000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 5000)\r\n        })\r\n    }\r\n\r\n    handlePageChange(current_page) {\r\n        let { activeTab } = this.state\r\n        this.setState({\r\n            CURRENT_PAGE: current_page\r\n        }, () => {\r\n            if (activeTab == \"1\" || activeTab == \"0\")\r\n                this.getRewardList()\r\n            if (activeTab == \"3\")\r\n                this.getReportsByStatus()\r\n        });\r\n    }\r\n\r\n    handleHistoryPageChange(current_page) {\r\n        this.setState({\r\n            HIS_CURRENT_PAGE: current_page\r\n        }, () => {\r\n            this.getRewardHistory()\r\n        });\r\n    }\r\n\r\n    handleReportPageChange(current_page) {\r\n        this.setState({\r\n            REP_CURRENT_PAGE: current_page\r\n        }, () => {\r\n            this.getReportsByStatus()\r\n        });\r\n    }\r\n\r\n    //function to toggle reward modal component\r\n    toggleActionPopup = (id, idx, ActionStaus) => {\r\n        let msg = ActionStaus ? 'Inactive' : 'Active'\r\n        this.setState({\r\n            Message: 'Are you sure you want to ' + msg + ' this coupon ?',\r\n            ScreenView: 'Coupon',\r\n            ActionMsgStatus: ActionStaus,\r\n            indexVal: idx,\r\n            RewardID: id,\r\n            ActionPopupOpen: !this.state.ActionPopupOpen\r\n        })\r\n    }\r\n\r\n    //function to active inactive reward request\r\n    modalActioCallback = () => {\r\n        this.setState({ YesPosting: true })\r\n        let { indexVal, RewardList, ActionMsgStatus, RewardID } = this.state\r\n        let params = {\r\n            status: ActionMsgStatus ? 0 : 1,\r\n            coin_reward_id: RewardID\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.UPDATE_REWARD_STATUS, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                notify.show(Response.message, 'success', 5000)\r\n                _.remove(RewardList, (item, idx) => {\r\n                    return idx == indexVal\r\n                })\r\n                this.setState({\r\n                    RewardList,\r\n                    ActionPopupOpen: !this.state.ActionPopupOpen\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n            }\r\n            this.setState({ YesPosting: false })\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n    //function to toggle report modal component\r\n    toggleReportActionPopup = (coin_reward_history_id, RepIdx) => {\r\n        this.setState({\r\n            Message: 'Are you sure you want to Active this coupon ?',\r\n            ScreenView: 'Report',\r\n            ReportIndex: RepIdx,\r\n            CoinRewardHistoryId: coin_reward_history_id,\r\n            ActionPopupOpen: !this.state.ActionPopupOpen\r\n        })\r\n    }\r\n\r\n    //function to active inactive reward request\r\n    modalReportActionCallback = () => {\r\n        let { ReportIndex, ReportRewardList, CoinRewardHistoryId } = this.state\r\n        let params = {\r\n            status: 1,\r\n            coin_reward_history_id: CoinRewardHistoryId\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.APPROVE_REWARD_REQUEST, params).then(Response => {\r\n            if (Response.response_code == NC.successCode) {\r\n                notify.show(Response.message, 'success', 5000)\r\n                _.remove(ReportRewardList, (item, idx) => {\r\n                    return idx == ReportIndex\r\n                })\r\n                this.setState({\r\n                    ReportRewardList,\r\n                    ActionPopupOpen: !this.state.ActionPopupOpen\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, 'error', 5000)\r\n        })\r\n    }\r\n\r\n\r\n    toggleHistoryModal = (coin_reward_id, status) => {\r\n        this.setState({\r\n            HistoryModalOpen: !this.state.HistoryModalOpen,\r\n            RewardStatus: status,\r\n            CoinRewardId: coin_reward_id,\r\n        }, () => {\r\n            if (this.state.HistoryModalOpen)\r\n                this.getRewardHistory()\r\n        })\r\n    }\r\n\r\n    getRewardHistory = () => {\r\n        this.setState({ HistoryPosting: true })\r\n        let { HIS_CURRENT_PAGE, HIS_PER_PAGE, CoinRewardId } = this.state\r\n        let params = {\r\n            coin_reward_id: CoinRewardId,\r\n            items_perpage: HIS_PER_PAGE,\r\n            current_page: HIS_CURRENT_PAGE,\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_REWARD_HISTORY, params).then(ResponseJson => {\r\n            if (ResponseJson.response_code == NC.successCode) {\r\n                this.setState({\r\n                    HistoryPosting: false,\r\n                    RewardHistoryItem: ResponseJson.data,\r\n                    RewardHistoryList: ResponseJson.data.history,\r\n                    TotalHistory: ResponseJson.data.total\r\n                })\r\n            } else {\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 5000)\r\n            }\r\n        }).catch(error => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 5000)\r\n        })\r\n    }\r\n\r\n    couponHistoryModal() {\r\n        let { HIS_CURRENT_PAGE, PERPAGE, RewardHistoryList, RewardHistoryItem, TotalHistory, RewardStatus, HistoryPosting } = this.state\r\n        return (\r\n            <Modal\r\n                isOpen={this.state.HistoryModalOpen}\r\n                className=\"modal-md coupon-history\"\r\n                toggle={() => this.toggleHistoryModal('', RewardStatus)}\r\n            >\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div className=\"header-wrapper\">\r\n                                <figure className=\"history-img\">\r\n                                    {\r\n                                        !_.isEmpty(RewardHistoryItem.reward_detail) && (\r\n                                            RewardHistoryItem.reward_detail.type == \"1\" ?\r\n                                                <i className=\"icon-color icon-bonus1\"></i>\r\n                                                :\r\n                                                RewardHistoryItem.reward_detail.type == \"2\" ?\r\n                                                    <i className=\"icon-color icon-currency\">{HF.getCurrencyCode()}</i>\r\n                                                    :\r\n                                                    <img src={!_.isEmpty(RewardHistoryItem.reward_detail) ? NC.S3 + NC.COINS + RewardHistoryItem.reward_detail.image : Images.no_image} className=\"img-cover\" alt=\"\" />\r\n                                        )\r\n                                    }\r\n\r\n                                </figure>\r\n                                <div className=\"history-info\">\r\n                                    <div>\r\n                                        <div className=\"worth\">\r\n                                            {\r\n                                                !_.isEmpty(RewardHistoryItem.reward_detail)\r\n                                                    ?\r\n                                                    <Fragment>\r\n                                                        {(RewardHistoryItem.reward_detail.type == '1' && RewardHistoryItem.reward_detail.type != '3') &&\r\n                                                            <Fragment>\r\n                                                                Worth{' '}<span className=\"icon-bonus1\"></span>\r\n                                                                {RewardHistoryItem.reward_detail.value}\r\n                                                            </Fragment>}\r\n\r\n                                                        {(RewardHistoryItem.reward_detail.type == '2' && RewardHistoryItem.reward_detail.type != '3')&&\r\n                                                            <Fragment>\r\n                                                                Worth{' '}<span className=\"icon-color icon-currency\">{HF.getCurrencyCode()}</span>\r\n                                                                {RewardHistoryItem.reward_detail.value}\r\n                                                            </Fragment>\r\n                                                        }\r\n                                                    </Fragment>\r\n                                                    :\r\n                                                    '0'\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"card-text\">{!_.isEmpty(RewardHistoryItem.reward_detail) ? RewardHistoryItem.reward_detail.detail : '0'}</div>\r\n                                    </div>\r\n                                    <ul className=\"coupon-avail-list\">\r\n                                        <li className=\"coupon-avail-item\">\r\n                                            <label htmlFor=\"Redeemedby\">Redeemed by</label>\r\n                                            <div className=\"numbers\">{RewardHistoryItem.redeem_by}</div>\r\n                                        </li>\r\n                                        <li className=\"coupon-avail-item\">\r\n                                            <label htmlFor=\"Redeemedby\">Coins Redeem per user</label>\r\n                                            <div className=\"numbers\">{!_.isEmpty(RewardHistoryItem.reward_detail) ? RewardHistoryItem.reward_detail.redeem_coins : '0'}</div>\r\n                                        </li>\r\n                                        <li className=\"coupon-avail-item\">\r\n                                            <label htmlFor=\"Redeemedby\">Total Coins Redeem</label>\r\n                                            <div className=\"numbers\">{RewardHistoryItem.total_coin_redeem}</div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className={`reward-status ${RewardStatus ? '' : 'inactive'}`}>\r\n                                    {RewardStatus ? 'Active' : 'Inactive'}\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div className=\"table-responsive common-table\">\r\n                                <div className=\"tbl-min-hgt\">\r\n                                    <Table>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Date</th>\r\n                                                <th>Username</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {\r\n                                            TotalHistory > 0 ?\r\n                                                _.map(RewardHistoryList, (item, idx) => {\r\n                                                    return (\r\n                                                        <tbody key={idx}>\r\n                                                            <tr>\r\n                                                                <td>{moment(item.added_date).format(\"DD MMM YYYY\")}</td>\r\n                                                                <td className=\"text-ellipsis\">{item.username}</td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    )\r\n                                                })\r\n                                                :\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td colSpan=\"8\">\r\n                                                            {(TotalHistory == 0 && !HistoryPosting) ?\r\n                                                                <div className=\"no-records\">\r\n                                                                    {NC.NO_RECORDS}</div>\r\n                                                                :\r\n                                                                <Loader />\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                        }\r\n                                    </Table>\r\n                                </div>\r\n                                {TotalHistory > 0 && (\r\n                                    <div className=\"custom-pagination\">\r\n                                        <Pagination\r\n                                            activePage={HIS_CURRENT_PAGE}\r\n                                            itemsCountPerPage={PERPAGE}\r\n                                            totalItemsCount={TotalHistory}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={e => this.handleHistoryPageChange(e)}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                                }\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n    handleInputChange = (event) => {\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n\r\n        this.setState({ [name]: value },\r\n            () => this.validateForm(name, value)\r\n        )\r\n    }\r\n\r\n    validateForm = (name, value) => {\r\n        let ValueValid = this.state.Value\r\n        let DetailValid = this.state.Detail\r\n        let CoinsValid = this.state.Coins\r\n        let FileNameValid = this.state.fileName\r\n\r\n        switch (name) {\r\n            case 'Value':\r\n                ValueValid = (value.length > 0 && value.length <= 7 && value.match(/^([1-9][0-9]{0,7})$/)) ? true : false;\r\n                break;\r\n            case 'Detail':\r\n                DetailValid = (value.length > 0 && value.length <= 40) ? true : false;\r\n                this.setState({ DetailMSg: DetailValid })\r\n                break;\r\n            case 'Coins':\r\n                CoinsValid = (value.length > 0 && value.length <= 7 && value.match(/^([1-9][0-9]{0,7})$/)) ? true : false;\r\n                this.setState({ CoinsMSg: CoinsValid })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (this.state.RewardType == '3') {\r\n            this.setState({\r\n                formValid: (ValueValid && DetailValid && CoinsValid && !_.isUndefined(FileNameValid) && !_.isNull(FileNameValid))\r\n            })\r\n        } else {\r\n            this.setState({\r\n                formValid: (ValueValid && DetailValid && CoinsValid)\r\n            })\r\n        }\r\n    }\r\n\r\n    resetChanges = () => {\r\n        this.setState({\r\n            formValid: false,\r\n            ValueMSg: true,\r\n            DetailMSg: true,\r\n            CoinsMSg: true,\r\n            RewardType: '1',\r\n            Value: '',\r\n            Detail: '',\r\n            Coins: '',\r\n            fileName: null\r\n        })\r\n    }\r\n\r\n    onChangeImage = (event) => {\r\n        this.setState({\r\n            fileName: URL.createObjectURL(event.target.files[0]),\r\n        }, function () {\r\n            this.validateForm()\r\n        });\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n        var data = new FormData();\r\n        data.append(\"file\", file);\r\n        WSManager.multipartPost(NC.baseURL + NC.DO_UPLOAD_REWARD_IMAGE, data)\r\n            .then(Response => {\r\n                if (Response.response_code == NC.successCode) {\r\n                    this.setState({\r\n                        image_name: Response.data.image_name\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        fileName: null\r\n                    }, this.validateForm);\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"486\");\r\n                notify.show(NC.SYSTEM_ERROR, \"error\", 3000);\r\n            });\r\n    }\r\n\r\n    resetFile = () => {\r\n        this.setState({\r\n            fileName: null\r\n        }, function () {\r\n            this.validateForm()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { Message, ScreenView, REP_CURRENT_PAGE, REP_PER_PAGE, ReportTotal, ReportRewardList, RewardID, Total, fileName, RewardType, Coins, ValueMSg, DetailMSg, CoinsMSg, formValid, activeTab, filterType, RewardList, CURRENT_PAGE, PERPAGE, ActionPopupOpen, Value, Detail, RewardListPosting, YesPosting } = this.state\r\n        const ActionCallback = {\r\n            Posting: YesPosting,\r\n            Message: Message,\r\n            Screen: ScreenView,\r\n            RewardID: RewardID,\r\n            modalCallback: this.toggleActionPopup,\r\n            modalActioCallback: this.modalActioCallback,\r\n            modalReportActionCallback: this.modalReportActionCallback,\r\n            ActionPopupOpen: ActionPopupOpen,\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Row><h2 className=\"h2-cls mt-4\">Redeem / Rewards</h2></Row>\r\n                <Row className=\"user-navigation redeem-screen\">\r\n                    <div className=\"w-100\">\r\n                        <Nav tabs>\r\n                            <NavItem\r\n                                className={activeTab === '1' ? \"active\" : \"\"}\r\n                                onClick={() => { this.toggle('1'); }}\r\n                            >\r\n                                <NavLink>\r\n                                    Active\r\n</NavLink>\r\n                            </NavItem>\r\n                            <NavItem\r\n                                className={activeTab === '0' ? \"active\" : \"\"}\r\n                                onClick={() => { this.toggle('0'); }}\r\n                            >\r\n                                <NavLink>\r\n                                    Inactive\r\n</NavLink>\r\n                            </NavItem>\r\n                            <NavItem\r\n                                className={activeTab === '3' ? \"active\" : \"\"}\r\n                                onClick={() => { this.toggle('3'); }}\r\n                            >\r\n                                <NavLink>\r\n                                    Reports\r\n</NavLink>\r\n                            </NavItem>\r\n\r\n                        </Nav>\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\" className=\"animated fadeIn\">\r\n                                <div className=\"add-rewards\">\r\n                                    <Row>\r\n                                        <Col md=\"8\">\r\n                                            <figure className=\"upload-img\">\r\n                                                {!_.isEmpty(fileName) ?\r\n                                                    <Fragment>\r\n                                                        <i onClick={this.resetFile} className=\"icon-close\"></i>\r\n                                                        <img className=\"img-cover\" src={fileName} />\r\n                                                    </Fragment>\r\n                                                    :\r\n                                                    <Fragment>\r\n                                                        {\r\n                                                            RewardType === '1' ?\r\n                                                                <i className=\"icon-color icon-bonus1\"></i>\r\n                                                                :\r\n                                                                RewardType === '2' ?\r\n                                                                    <i className=\"icon-color icon-currency\">{HF.getCurrencyCode()}</i>\r\n                                                                    :\r\n                                                                    <Fragment>\r\n                                                                        <Input\r\n                                                                            accept=\"image/x-png,image/gif,image/jpeg,image/bmp,image/jpg\"\r\n                                                                            type=\"file\"\r\n                                                                            name='gift_image'\r\n                                                                            id=\"gift_image\"\r\n                                                                            className=\"gift_image\"\r\n                                                                            onChange={this.onChangeImage}\r\n                                                                        />\r\n                                                                        <i onChange={this.onChangeImage} className=\"icon-camera\"></i>\r\n                                                                    </Fragment>\r\n                                                        }\r\n                                                    </Fragment>\r\n                                                }\r\n                                            </figure>\r\n\r\n                                            <div className=\"input-box\">\r\n                                                <ul className=\"coupons-option-list\">\r\n                                                    <li className=\"coupons-option-item\">\r\n                                                        <div className=\"custom-radio\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                className=\"custom-control-input\"\r\n                                                                name=\"RewardType\"\r\n                                                                value=\"1\"\r\n                                                                checked={RewardType === '1'}\r\n                                                                onChange={this.handleInputChange}\r\n                                                            />\r\n                                                            <label className=\"custom-control-label\">\r\n                                                                <span className=\"input-text\">Bonus Cash</span>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li className=\"coupons-option-item\">\r\n                                                        <div className=\"custom-radio\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                className=\"custom-control-input\"\r\n                                                                name=\"RewardType\"\r\n                                                                value=\"2\"\r\n                                                                checked={RewardType === '2'}\r\n                                                                onChange={this.handleInputChange}\r\n                                                            />\r\n                                                            <label className=\"custom-control-label\">\r\n                                                                <span className=\"input-text\">Real Cash</span>\r\n                                                            </label>\r\n                                                        </div>\r\n\r\n                                                    </li>\r\n                                                    <li className=\"coupons-option-item\">\r\n                                                        <div className=\"custom-radio\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                className=\"custom-control-input\"\r\n                                                                name=\"RewardType\"\r\n                                                                value=\"3\"\r\n                                                                checked={RewardType === '3'}\r\n                                                                onChange={this.handleInputChange}\r\n                                                            />\r\n                                                            <label className=\"custom-control-label\">\r\n                                                                <span className=\"input-text\">Gift Coupon</span>\r\n                                                            </label>\r\n                                                        </div>\r\n\r\n                                                    </li>\r\n                                                </ul>\r\n                                                <div className=\"mt-3 mb-3\">\r\n                                                    <label htmlFor=\"Value\">Value</label>\r\n                                                    <Input\r\n                                                        maxLength={20}\r\n                                                        name='Value'\r\n                                                        value={Value}\r\n                                                        onChange={this.handleInputChange}\r\n                                                    />\r\n                                                    {!ValueMSg &&\r\n                                                        <span className=\"color-red\">\r\n                                                            Value can not be empty.\r\n                                                        </span>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <label htmlFor=\"Detail\">Detail</label>\r\n                                                    <Input\r\n                                                        maxLength={40}\r\n                                                        name='Detail'\r\n                                                        value={Detail}\r\n                                                        onChange={this.handleInputChange}\r\n                                                    />\r\n                                                    {!DetailMSg &&\r\n                                                        <span className=\"color-red\">\r\n                                                            Please enter valid details.\r\n</span>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"redeem-box clearfix\">\r\n                                                    <label htmlFor=\"Redeem\">Redeem with</label>\r\n                                                    <div className=\"redeem float-left\">\r\n                                                        <InputGroup>\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <InputGroupText>\r\n                                                                    <img src={Images.REWARD_ICON} alt=\"\" />\r\n                                                                </InputGroupText>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                placeholder=\"Enter Coins\"\r\n                                                                maxLength={7}\r\n                                                                name='Coins'\r\n                                                                value={Coins}\r\n                                                                onChange={this.handleInputChange}\r\n                                                            />\r\n                                                        </InputGroup>\r\n                                                        {!CoinsMSg &&\r\n                                                            <span className=\"color-red\">\r\n                                                                Please enter valid number only.\r\n</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div className=\"publish-box float-right\">\r\n                                                        <div onClick={this.resetChanges} className=\"refresh icon-reset\"></div>\r\n                                                        <Button\r\n                                                            disabled={!formValid}\r\n                                                            className=\"btn-secondary-outline publish-btn\"\r\n                                                            onClick={this.addReward}\r\n                                                        >Publish</Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md=\"4\">\r\n                                            <div className=\"img-preview-box\">\r\n                                                <Fragment>\r\n                                                    {!_.isEmpty(fileName) || !_.isEmpty(Value) || !_.isEmpty(Coins) ?\r\n                                                        <div className=\"reward-card\">\r\n                                                            <div className=\"left-div\">\r\n                                                                <Fragment>\r\n                                                                    <div className=\"card-img-wrapper\">\r\n                                                                        {RewardType == '1' ?\r\n                                                                            <span className=\"icon-color icon-bonus1\"></span>\r\n                                                                            :\r\n                                                                            RewardType == '2' ?\r\n                                                                                <span className=\"icon-color icon-currency\">{HF.getCurrencyCode()}</span>\r\n                                                                                :\r\n                                                                                !_.isEmpty(fileName) &&\r\n                                                                                <img src={fileName} className=\"img-cover\" alt=\"\" />\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    <div className=\"reward-info\">\r\n                                                                        <div className=\"worth\">\r\n                                                                            {(RewardType == '1' && RewardType != '3') &&\r\n                                                                                <Fragment>\r\n                                                                                    <span className=\"icon-bonus1\"></span>\r\n                                                                                    {Value}\r\n                                                                                </Fragment>\r\n                                                                            }\r\n                                                                            {(RewardType == '2' && RewardType != '3') &&\r\n                                                                                <Fragment>\r\n                                                                                    <span className=\"icon-color icon-currency\">{HF.getCurrencyCode()}</span>\r\n                                                                                    {Value}\r\n                                                                                </Fragment>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                        <div className=\"card-text xtext-ellipsis\">{Detail}</div>\r\n                                                                    </div>\r\n                                                                </Fragment>\r\n\r\n\r\n                                                            </div>\r\n                                                            <div className=\"card-status\">\r\n                                                                <div className=\"text-right\">\r\n                                                                    <i className=\"icon-inactive\"></i>\r\n                                                                </div>\r\n                                                                <div className=\"redeem-with\">Redeem with </div>\r\n                                                                {\r\n                                                                    Coins && (\r\n                                                                        <div className=\"redeem-btn\">\r\n                                                                            <img src={Images.REWARD_ICON} alt=\"\" />\r\n                                                                            &nbsp;\r\n                                                                            {HF.getNumberWithCommas(Coins)}                                                                            \r\n                                                                        </div>\r\n                                                                    )\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <span className=\"preview-text\">Your Preview will<br /> appear here</span>\r\n                                                    }\r\n\r\n                                                </Fragment>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <div className=\"rewards-list\">\r\n                                    <Row>\r\n                                        {\r\n                                            Total > 0 ?\r\n                                                _.map(RewardList, (item, idx) => {\r\n                                                    return (\r\n                                                        <Col md={4} key={idx}>\r\n                                                            <div className=\"reward-card\">\r\n                                                                <div className=\"left-div\">\r\n\r\n                                                                    <div>\r\n                                                                        <div className=\"card-img-wrapper\">\r\n                                                                            {item.type == '1' ?\r\n                                                                                <span className=\"icon-color icon-bonus1\"></span>\r\n                                                                                :\r\n                                                                                item.type == '2' ?\r\n                                                                                    <i className=\"icon-color icon-currency\">{HF.getCurrencyCode()}</i>\r\n                                                                                    :\r\n                                                                                    <img src={NC.S3 + NC.COINS + item.image} className=\"img-cover\" alt=\"\" />\r\n                                                                            }\r\n\r\n                                                                        </div>\r\n                                                                        <div className=\"reward-info\">\r\n                                                                            {this.couponHistoryModal()}\r\n                                                                            <div\r\n                                                                                onClick={() => this.toggleHistoryModal(item.coin_reward_id.$oid, item.status)}\r\n                                                                                className=\"worth\">\r\n                                                                                {(item.type == '1' && item.type != '3') &&\r\n                                                                                    <Fragment>\r\n                                                                                        Worth {' '}<span className=\"icon-bonus1\"></span>\r\n                                                                                        {item.value}\r\n                                                                                    </Fragment>\r\n                                                                                }\r\n                                                                                {(item.type == '2' && item.type != '3') &&\r\n                                                                                    <Fragment>\r\n                                                                                        Worth {' '}<span className=\"icon-currency\">{HF.getCurrencyCode()}</span>\r\n                                                                                        {item.value}\r\n                                                                                    </Fragment>\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                            <div onClick={() => this.toggleHistoryModal(item.coin_reward_id.$oid, item.status)} className=\"card-text xtext-ellipsis\">{item.detail}</div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"card-status\">\r\n                                                                    <div className=\"text-right\">\r\n                                                                        <i className=\"icon-inactive icon-style\"\r\n                                                                            onClick={() => this.toggleActionPopup(item.coin_reward_id.$oid, idx, item.status)}\r\n                                                                        ></i>\r\n                                                                    </div>\r\n                                                                    <div className=\"redeem-with\">Redeem with</div>\r\n                                                                    <div className=\"redeem-btn\">\r\n                                                                        <img src={Images.REWARD_ICON} alt=\"\" />\r\n                                                                        &nbsp;\r\n                                                                        {HF.getNumberWithCommas(item.redeem_coins)}                                                                        \r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    )\r\n                                                })\r\n                                                :\r\n                                                <Col md={12}>\r\n                                                    {(Total == 0 && !RewardListPosting) ?\r\n                                                        <div className=\"no-records\">No Rewards added.</div>\r\n                                                        :\r\n                                                        <Loader />\r\n                                                    }\r\n                                                </Col>\r\n                                        }\r\n                                    </Row>\r\n                                    {\r\n                                        Total > PERPAGE && (\r\n                                            <div className=\"custom-pagination lobby-paging\">\r\n                                                <Pagination\r\n                                                    activePage={CURRENT_PAGE}\r\n                                                    itemsCountPerPage={PERPAGE}\r\n                                                    totalItemsCount={Total}\r\n                                                    pageRangeDisplayed={5}\r\n                                                    onChange={e => this.handlePageChange(e)}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <ActionRequestModal {...ActionCallback} />\r\n                            </TabPane>\r\n                            {\r\n                                (activeTab == '0') &&\r\n                                <TabPane tabId=\"0\" className=\"animated fadeIn\">\r\n                                    <div className=\"rewards-list\">\r\n                                        <Row>\r\n                                            {\r\n                                                Total > 0 ?\r\n                                                    _.map(RewardList, (item, idx) => {\r\n                                                        return (\r\n                                                            <Col md={4} key={idx}>\r\n                                                                <div className=\"reward-card\">\r\n                                                                    <div className=\"left-div\">\r\n\r\n                                                                        <div>\r\n                                                                            <div className=\"card-img-wrapper\">\r\n                                                                                {item.type == '1' ?\r\n                                                                                    <span className=\"icon-color icon-bonus1\"></span>\r\n                                                                                    :\r\n                                                                                    item.type == '2' ?\r\n                                                                                        <span className=\"icon-color icon-currency\">{HF.getCurrencyCode()}</span>\r\n                                                                                        :\r\n                                                                                        <img src={NC.S3 + NC.COINS + item.image} className=\"img-cover\" alt=\"\" />\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                            <div className=\"reward-info\">\r\n                                                                                {this.couponHistoryModal()}\r\n                                                                                <div\r\n                                                                                    onClick={() => this.toggleHistoryModal(item.coin_reward_id.$oid, item.status)}\r\n                                                                                    className=\"worth\">\r\n                                                                                    {(item.type == '1' && item.type != '3') &&\r\n                                                                                        <Fragment>\r\n                                                                                            Worth {' '}<span className=\"icon-bonus1\"></span>\r\n                                                                                            {item.value}\r\n                                                                                        </Fragment>\r\n                                                                                    }\r\n                                                                                    {(item.type == '2' && item.type != '3') &&\r\n                                                                                        <Fragment>\r\n                                                                                            Worth {' '}<span className=\"icon-currency\">{HF.getCurrencyCode()}</span>\r\n                                                                                            {item.value}\r\n                                                                                        </Fragment>\r\n                                                                                    }\r\n                                                                                </div>\r\n                                                                                <div onClick={() => this.toggleHistoryModal(item.coin_reward_id.$oid, item.status)} className=\"card-text\">{item.detail}</div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className=\"card-status\">\r\n                                                                        <div className=\"text-right\">\r\n                                                                            <i className=\"icon-inactive icon-style\"\r\n                                                                                onClick={() => this.toggleActionPopup(item.coin_reward_id.$oid, idx, item.status)}\r\n                                                                            ></i>\r\n                                                                        </div>\r\n                                                                        <div className=\"redeem-with\">Redeem with</div>\r\n                                                                        <div className=\"redeem-btn\">\r\n                                                                            <img src={Images.REWARD_ICON} alt=\"\" />\r\n                                                                            &nbsp;\r\n                                                                            {HF.getNumberWithCommas(item.redeem_coins)}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        )\r\n                                                    })\r\n                                                    :\r\n                                                    <Col md={12}>\r\n                                                        {(Total == 0 && !RewardListPosting) ?\r\n                                                            <div className=\"no-records\">{NC.NO_RECORDS}</div>\r\n                                                            :\r\n                                                            <Loader />\r\n                                                        }\r\n                                                    </Col>\r\n                                            }\r\n                                        </Row>\r\n                                    </div>\r\n                                    {\r\n                                        Total > PERPAGE && (\r\n                                            <div className=\"custom-pagination lobby-paging\">\r\n                                                <Pagination\r\n                                                    activePage={CURRENT_PAGE}\r\n                                                    itemsCountPerPage={PERPAGE}\r\n                                                    totalItemsCount={Total}\r\n                                                    pageRangeDisplayed={5}\r\n                                                    onChange={e => this.handlePageChange(e)}\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                </TabPane>\r\n                            }\r\n                            {\r\n                                activeTab == '3' &&\r\n                                <TabPane tabId=\"3\" className=\"animated fadeIn\">\r\n                                    <div className=\"reports-box\">\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <div>\r\n                                                    <ul className=\"reports-filter-list\">\r\n                                                        <li className=\"reports-filter-item\">\r\n                                                            <div className={`filter-status ${filterType == 1 ? 'active' : ''}`} onClick={() => this.filterReport('1')}>\r\n                                                                Completed</div>\r\n                                                        </li>\r\n                                                        <li className=\"reports-filter-item\">\r\n                                                            <div className={`filter-status ${filterType == 0 ? 'active' : ''}`} onClick={() => this.filterReport('0')}>\r\n                                                                Pending</div>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <div>\r\n                                                        <i className=\"export-list icon-export\" onClick={e => this.exportRewardListByStatus()}></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md={12} className=\"table-responsive common-table\">\r\n                                                <Table>\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th className=\"left-th pl-5\">Date</th>\r\n                                                            <th>Username</th>\r\n                                                            <th>Event</th>\r\n                                                            <th className={`${filterType == 1 ? 'right-th' : ''}`}>Value</th>\r\n                                                            {\r\n                                                                filterType != 1 &&\r\n                                                                <th className=\"right-th\">\r\n                                                                    Status\r\n                                                                </th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    {\r\n                                                        ReportTotal > 0 ?\r\n                                                            _.map(ReportRewardList, (item, idx) => {\r\n                                                                return (\r\n                                                                    <tbody key={idx}>\r\n                                                                        <tr>\r\n                                                                            <td>{moment(item.added_date).format(\"DD MMM YYYY\")}</td>\r\n                                                                            <td className=\"text-ellipsis\">{item.username}</td>\r\n                                                                            <td>\r\n                                                                                {\r\n                                                                                    item.reward_detail[0].status === '1' ?\r\n                                                                                        'Bonus Cash'\r\n                                                                                        :\r\n                                                                                        item.reward_detail[0].status === '2' ?\r\n                                                                                            'Real Cash'\r\n                                                                                            :\r\n                                                                                            item.reward_detail[0].detail\r\n                                                                                }\r\n                                                                            </td>\r\n                                                                            <td><div>\r\n                                                                                <span className=\"icon-color\">{HF.getCurrencyCode()}</span>\r\n                                                                                <span className=\"price\">{' '}\r\n                                                                                {/* {item.reward_detail[0].value} */}\r\n\r\n                                                                                    {HF.getNumberWithCommas(item.reward_detail[0].value)}\r\n                                                                                </span>\r\n                                                                            </div></td>\r\n                                                                            {\r\n                                                                                filterType != 1 &&\r\n                                                                                <td>\r\n                                                                                    <div>\r\n                                                                                        <UncontrolledDropdown>\r\n                                                                                            <DropdownToggle tag=\"span\" caret={1}>\r\n                                                                                                Not Sent\r\n                                                                                            </DropdownToggle>\r\n                                                                                            <DropdownMenu>\r\n                                                                                                <DropdownItem onClick={() => this.toggleReportActionPopup(item.coin_reward_history_id.$oid, idx)}>Acknowledge and sent</DropdownItem>\r\n                                                                                            </DropdownMenu>\r\n                                                                                        </UncontrolledDropdown>\r\n                                                                                    </div>\r\n                                                                                </td>\r\n                                                                            }\r\n                                                                        </tr>\r\n                                                                    </tbody>\r\n                                                                )\r\n                                                            })\r\n                                                            :\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td colSpan=\"12\">\r\n                                                                        <div className=\"no-records\">{NC.NO_RECORDS}</div>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                    }\r\n                                                </Table>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    {ReportTotal > 0 && (\r\n                                        <div className=\"custom-pagination lobby-paging\">\r\n                                            <Pagination\r\n                                                activePage={REP_CURRENT_PAGE}\r\n                                                itemsCountPerPage={REP_PER_PAGE}\r\n                                                totalItemsCount={ReportTotal}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={e => this.handleReportPageChange(e)}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </TabPane>\r\n                            }\r\n                        </TabContent>\r\n                    </div>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Redeem\r\n"],"sourceRoot":""}