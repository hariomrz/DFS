{"version":3,"sources":["views/Cms/CMS.jsx"],"names":["CMS","props","handleLangChange","value","setState","LanguageType","getPageDetails","handleNameChange","e","name","target","validateForm","onContentChange","PageContent","onImageUpload","fileList","reader","FileReader","onloadend","ReactSummernote","insertImage","result","readAsDataURL","state","PageTitle","TitleError","ContentError","EditPagePosting","updatePage","PageId","MetaKeyword","MetaDesc","param","page_id","page_title","page_alias","replace","meta_keyword","meta_desc","page_url","page_content","status","modified_by","added_date","moment","format","modified_date","language","WSManager","Rest","NC","then","responseJson","response_code","notify","show","message","editContent","this","getPages","catch","error","PagesList","TotalRecord","editView","languageOptions","HF","getLanguageData","SummernoteView","items_perpage","PERPAGE","total_items","current_page","CURRENT_PAGE","sort_order","sort_field","data","total","editViewFlag","history","push","Select_Props","is_disabled","is_searchable","is_clearable","menu_is_open","class_name","sel_options","place_holder","selected_value","modalCallback","className","md","_","map","item","idx","key","getUtcToLocalFormat","onClick","SelectProps","type","placeholder","onChange","options","height","toolbar","disabled","Component"],"mappings":"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","file":"static/js/193.f431b338.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, Table, Input, Button } from 'reactstrap';\r\nimport * as NC from \"../../helper/NetworkingConstants\";\r\nimport WSManager from \"../../helper/WSManager\";\r\nimport { notify } from 'react-notify-toast';\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\nimport ReactSummernote from 'react-summernote';\r\nimport 'react-summernote/dist/react-summernote.css';\r\nimport 'bootstrap/js/dist/modal';\r\nimport 'bootstrap/js/dist/dropdown';\r\nimport 'bootstrap/js/dist/tooltip';\r\nimport HF from '../../helper/HelperFunction';\r\nimport SelectDropdown from \"../../components/SelectDropdown\";\r\nclass CMS extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            PagesList: [],\r\n            TotalRecord: 0,\r\n            editView: false,\r\n            EditPagePosting: false,\r\n            TitleError: false,\r\n            ContentError: false,\r\n            PageTitle: '',\r\n            PageContent: '',\r\n            MetaKeyword: '',\r\n            MetaDesc: '',\r\n            LanguageType: 'en',\r\n            PageId: '',\r\n            languageOptions: HF.getLanguageData() ? HF.getLanguageData() : [],\r\n            SummernoteView: true\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getPages()\r\n    }\r\n\r\n    getPages() {\r\n        const { PERPAGE, CURRENT_PAGE } = this.state\r\n        const param = {\r\n            items_perpage: PERPAGE,\r\n            total_items: 0,\r\n            current_page: CURRENT_PAGE,\r\n            sort_order: \"ASC\",\r\n            sort_field: \"page_title\"\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.GET_PAGES, param).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                this.setState({ PagesList: responseJson.data.result, TotalRecord: responseJson.data.total });\r\n            }\r\n        }).catch((error) => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 5000);\r\n        })\r\n    }\r\n\r\n    editContent(editViewFlag, PageId, page_alias) {\r\n        if (page_alias === \"contact_us\")\r\n        {\r\n            this.props.history.push('/cms/about-us/' + PageId)\r\n        }\r\n        if (page_alias === \"faq\")\r\n        {\r\n            this.props.history.push('/cms/faq/' + PageId)\r\n        }\r\n        else{\r\n            this.setState({\r\n                editView: editViewFlag,\r\n                PageId: PageId,\r\n                SummernoteView: false\r\n            }, () => {\r\n                if (PageId)\r\n                    this.getPageDetails()\r\n            })\r\n        }\r\n    }\r\n\r\n    getPageDetails() {\r\n        const { LanguageType, PageId } = this.state\r\n        const param = {\r\n            page_id: PageId,\r\n            language: LanguageType\r\n        }\r\n        WSManager.Rest(NC.baseURL + NC.GET_PAGE_DETAIL, param).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                let data = responseJson.data\r\n                this.setState({\r\n                    PageTitle: data.page_title ? data.page_title : '',\r\n                    PageContent: data.page_content ? data.page_content : '',\r\n                    MetaKeyword: data.meta_keyword ? data.meta_keyword : '',\r\n                    MetaDesc: data.meta_desc ? data.meta_desc : '',\r\n                    SummernoteView: true\r\n                });\r\n            }\r\n        }).catch((error) => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 5000);\r\n        })\r\n    }\r\n    handleLangChange = (value) => {\r\n        this.setState({ LanguageType: value.value }, () => {\r\n            this.getPageDetails()\r\n        })\r\n    }\r\n    handleNameChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        this.setState({\r\n            [name]: value\r\n        }, () => {\r\n            this.validateForm()\r\n        })\r\n    }\r\n    onContentChange = (value) => {\r\n        this.setState({\r\n            PageContent: value\r\n        }, () => {\r\n            this.validateForm()\r\n        })\r\n    }\r\n\r\n    onImageUpload = (fileList) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            ReactSummernote.insertImage(reader.result);\r\n        }\r\n        reader.readAsDataURL(fileList[0]);\r\n    }\r\n\r\n    validateForm = () => {\r\n        let { PageTitle, PageContent } = this.state\r\n        if (!PageTitle)\r\n            this.setState({ TitleError: true })\r\n        else\r\n            this.setState({ TitleError: false })\r\n        if (!PageContent)\r\n            this.setState({ ContentError: true })\r\n        else\r\n            this.setState({ ContentError: false })\r\n\r\n        if (PageTitle && PageContent)\r\n            this.setState({ EditPagePosting: false })\r\n        else\r\n            this.setState({ EditPagePosting: true })\r\n    }\r\n    updatePage = () => {\r\n        const { PageId, PageTitle, PageContent, MetaKeyword, MetaDesc, LanguageType } = this.state\r\n        this.setState({ EditPagePosting: true })\r\n        let param = {\r\n            page_id: PageId,\r\n            page_title: PageTitle,\r\n            page_alias: PageTitle.replace(/ /g, \"_\"),\r\n            meta_keyword: MetaKeyword,\r\n            meta_desc: MetaDesc,\r\n            page_url: PageTitle.replace(/ /g, \"_\"),\r\n            page_content: PageContent,\r\n            status: \"1\",\r\n            modified_by: \"0\",\r\n            added_date: moment().format(\"YYYY-MM-DD h:mm:ss\"),\r\n            modified_date: moment().format(\"YYYY-MM-DD h:mm:ss\"),\r\n            language: LanguageType\r\n        }\r\n\r\n        WSManager.Rest(NC.baseURL + NC.UPDATE_PAGE, param).then((responseJson) => {\r\n            if (responseJson.response_code === NC.successCode) {\r\n                notify.show(responseJson.message, \"success\", 5000);\r\n                this.editContent(false)\r\n                this.setState({ EditPagePosting: false }, function () {\r\n                    this.getPages()\r\n                })\r\n            }\r\n        }).catch((error) => {\r\n            notify.show(NC.SYSTEM_ERROR, \"error\", 5000);\r\n        })\r\n    }\r\n    render() {\r\n        const { languageOptions, PagesList, TotalRecord, editView, EditPagePosting, TitleError, ContentError, PageTitle, PageContent, LanguageType, SummernoteView } = this.state\r\n        const Select_Props = {\r\n            is_disabled: false,\r\n            is_searchable: true,\r\n            is_clearable: false,\r\n            menu_is_open: false,\r\n            class_name: \"\",\r\n            sel_options: languageOptions,\r\n            place_holder: \"Select Language\",\r\n            selected_value: LanguageType,\r\n            modalCallback: this.handleLangChange\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"mt-4 app-banner\">\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <h1 className=\"h1-cls\">Manage Pages</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    {!editView && (\r\n                        <div className=\"cms-list-view\">\r\n                            <Row className=\"filters-box\">\r\n                                <Col md={12}>\r\n                                    <div className=\"filters-area\">\r\n                                        <h4 className=\"m-0\">Total Record Count : {TotalRecord}</h4>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"animated fadeIn mt-4\">\r\n                                <Col md={12} className=\"table-responsive common-table\">\r\n                                    <Table>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"left-th pl-4\">Title</th>\r\n                                                <th>Alias</th>\r\n                                                <th>Updated Date</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {\r\n                                            _.map(PagesList, (item, idx) => {\r\n                                                return (\r\n                                                    <tbody key={idx}>\r\n                                                        <tr>\r\n                                                            <td className=\"left-th pl-4\">{item.page_title}</td>\r\n                                                            <td>{item.page_alias}</td>\r\n                                                            <td>\r\n                                                                {WSManager.getUtcToLocalFormat(item.modified_date, 'D-MMM-YYYY hh:mm A')}\r\n                                                            </td>\r\n\r\n                                                            <td><i onClick={() => this.editContent(true, item.page_id, item.page_alias)} className=\"icon-edit cursor-pointer\"></i></td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n                    }\r\n                    {editView && (\r\n                        <div className=\"cms-page-view\">\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <div className=\"edit-title\">Edit Page</div>\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"animated fadeIn new-banner mt-0\">\r\n                                <Col md={12} className=\"input-row\">\r\n                                    <Row>\r\n                                        <Col md={3} className=\"b-input-label\">Select Language<span className=\"asterrisk\">*</span></Col>\r\n                                        <Col md={9}>\r\n                                            <SelectDropdown SelectProps={Select_Props} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col md={12} className=\"input-row\">\r\n                                    <Row>\r\n                                        <Col md={3} className=\"b-input-label\">Title<span className=\"asterrisk\">*</span></Col>\r\n                                        <Col md={9}>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name='PageTitle'\r\n                                                placeholder=\"Title\"\r\n                                                onChange={this.handleNameChange}\r\n                                                value={PageTitle}\r\n                                            />\r\n                                            {TitleError &&\r\n                                                <span className=\"error-text\">Title field can not be empty</span>\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col md={12} className=\"input-row\">\r\n                                    <Row>\r\n                                        <Col md={3} className=\"b-input-label\">Content<span className=\"asterrisk\">*</span></Col>\r\n                                        <Col md={9}>\r\n                                            <ReactSummernote\r\n                                                value={SummernoteView ? PageContent : ''}\r\n                                                onChange={this.onContentChange}\r\n                                                onImageUpload={this.onImageUpload}\r\n                                                options={{\r\n                                                    height: 250,\r\n                                                    toolbar: [\r\n                                                        ['color', ['color']],\r\n                                                        ['style', ['style']],\r\n                                                        ['font', ['bold', 'underline', 'clear']],\r\n                                                        ['fontname', ['fontname']],\r\n                                                        ['para', ['ul', 'ol', 'paragraph']],\r\n                                                        ['table', ['table']],\r\n                                                        ['insert', ['link', 'picture']],\r\n                                                        ['view', ['codeview']]\r\n                                                    ]\r\n                                                }}\r\n\r\n                                            />\r\n                                            {ContentError &&\r\n                                                <span className=\"error-text\">Content field can not be empty</span>\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col md={12} className=\"banner-action\">\r\n                                    <Button disabled={EditPagePosting} className=\"btn-secondary mr-3\" onClick={() => this.updatePage()}>Save Page</Button>\r\n                                    <Button className=\"btn-secondary-outline\" onClick={() => this.editContent(false)}>Cancel</Button>\r\n                                </Col>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    }\r\n                </div>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\nexport default CMS"],"sourceRoot":""}